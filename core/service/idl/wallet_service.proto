syntax = "proto3";

import "global.proto";

option go_package = "./;proto";
option java_package = "com.github.go2o.rpc";


message CreateWalletRequest {
    // 用户编号
    int64 user_id = 1;
    // 用户名
    string user_name = 2;
    // 钱包类型
    int32 wallet_type= 3;
    // 钱包名称
    string wallet_name = 4;
    // 钱包标志
    int32 wallet_flag = 5;
}

message GetWalletRequest {
    sint64 user_id = 1;
    sint32 wallet_type= 2;
}

message WalletLogIDRequest {
    sint64 wallet_id = 1;
    sint64 id = 2;
}
message AdjustRequest {
    sint64 wallet_id = 1;
    sint32 value =  2;
    string title = 3;
    string outer_no = 4;
    string remark = 5;
    sint32 operator_uid = 6;
    string operator_name = 7;
}

message DiscountRequest {
    sint64 wallet_id = 1;
    sint32 value =  2;
    string title = 3;
    string outer_no = 4;
    bool must = 5;
}

message FreezeRequest {
    sint64 wallet_id = 1;
    sint32 value =  2;
    string title = 3;
    string outer_no = 4;
    sint32 operator_uid = 5;
    string operator_name = 6;
}

message UnfreezeRequest {
    sint64 wallet_id = 1;
    sint32 value =  2;
    string title = 3;
    string outer_no = 4;
    sint32 operator_uid = 5;
    string operator_name = 6;
}

message ChargeRequest {
    int64 wallet_id = 1;
    int32 value =  2;
    int32 by = 3;
    string title = 4;
    string outer_no = 5;
    string remark = 6;
    int32 operator_uid = 7;
    string operator_name = 8;
}

message TransferRequest {
    sint64 wallet_id = 1;
    sint64 to_wallet_id = 2;
    sint32 value = 3;
    sint32 trade_fee = 4;
    string remark = 5;
}
/** 钱包服务 */
service WalletService {
    /** 创建钱包，并返回钱包编号 */
    rpc CreateWallet (CreateWalletRequest) returns (Result) {
    }
    /** 获取钱包编号，如果钱包不存在，则返回0 */
    rpc GetWalletId (GetWalletRequest) returns (Int64) {
    }

    /** 获取钱包账户,传入walletId */
    rpc GetWallet (Int64) returns (SWallet) {
    }

    /** 获取钱包账户,传入walletCode */
    rpc GetWalletByCode(String)returns(SWallet) {}

    /** 获取钱包日志 */
    rpc GetWalletLog (WalletLogIDRequest) returns (SWalletLog) {
    }

    /** 调整余额，可能存在扣为负数的情况，需传入操作人员编号或操作人员名称 */
    rpc Adjust (AdjustRequest) returns (Result) {
    }

    /** 支付抵扣,must是否必须大于0 */
    rpc Discount (DiscountRequest) returns (Result) {
    }

    /** 冻结余额 */
    rpc Freeze (FreezeRequest) returns (Result) {
    }

    /** 解冻金额 */
    rpc Unfreeze (UnfreezeRequest) returns (Result) {
    }

    /** 充值,kind: 业务类型 */
    rpc Charge (ChargeRequest) returns (Result) {
    }

    /** 转账,title如:转账给xxx， toTitle: 转账收款xxx */
    rpc Transfer (TransferRequest) returns (Result) {
    }

    /** 申请提现,kind：提现方式,返回info_id,交易号 及错误,value为提现金额,tradeFee为手续费 */
    rpc RequestWithdrawal (RequestWithdrawalRequest) returns (Result) {
    }

    /** 确认提现 */
    rpc ReviewTakeOut (ReviewTakeOutRequest) returns (Result) {
    }

    /** 完成提现 */
    rpc FinishWithdrawal (FinishTakeOutRequest) returns (Result) {
    }

    /** 获取分页钱包日志 */
    rpc PagingWalletLog (PagingWalletLogRequest) returns (SPagingResult) {
    }
}

message PagingWalletLogRequest {
    sint64 wallet_id = 1;
    SPagingParams params = 2;
}
message FinishTakeOutRequest {
    sint64 wallet_id = 1;
    sint64 take_id = 2;
    string outer_no = 3;
}

message RequestWithdrawalRequest {
    // 钱包编号
    int64 wallet_id = 1;
    // 金额
    int32 amount = 2;
    // 手续费
    int32 trade_fee = 3;
    // 提现方式
    sint32 kind = 4;
    // 银行名称
    string bank_name = 5;
    // 银行账号
    string bank_account_no = 6;
    // 银行账户
    string bank_account_name  = 7;
}

message ReviewTakeOutRequest {
    sint64 wallet_id = 1;
    sint64 take_id = 2;
    bool review_pass = 3;
    string remark = 4;
    sint32 operator_uid = 5;
    string operator_name = 6;
}
/** 钱包类型 */
enum EWalletType {
    _6 = 0;
    /** 个人钱包 */
    TPerson = 1;
    /** 商家钱包 */
    TMerchant = 2;
}

/** 钱包标志 */
enum EWalletFlag {
    _7 = 0;
    /** 抵扣 */
    FlagDiscount = 1;
    /** 充值 */
    FlagCharge = 2;
}

/** 充值方式 */
enum EChargeKind {
    _8 = 0;
    /** 用户充值 */
    CUserCharge = 1;
    /** 系统自动充值 */
    CSystemCharge = 2;
    /** 客服充值 */
    CServiceAgentCharge = 3;
    /** 退款充值 */
    CRefundCharge = 4;
}

/** 钱包日志种类 */
enum EWalletLogKind {
    _9 = 0;
    /** 赠送金额 */
    KCharge = 1;
    /** 客服赠送 */
    KServiceAgentCharge = 2;
    /** 钱包收入 */
    KIncome = 3;
    /** 失效 */
    KExpired = 4;
    /** 客服调整 */
    KAdjust = 5;
    /** 扣除 */
    KDiscount = 6;
    /** 转入 */
    KTransferIn = 7;
    /** 转出 */
    KTransferOut = 8;

    /** 冻结 */
    KFreeze = 9;
    /** 解冻 */
    KUnfreeze = 10;

    /** 转账退款 */
    KTransferRefund = 11;
    /** 提现退还到银行卡 */
    KTakeOutRefund = 12;
    /** 支付单退款 */
    KPaymentOrderRefund = 13;

    /** 提现到银行卡(人工提现) */
    KTakeOutToBankCard = 14;
    /** 提现到第三方 */
    KTakeOutToThirdPart = 15;
}

/** 钱包 */
message SWallet {
    /** 钱包编号 */
    sint64 id = 1;
    /** 哈希值 */
    string hash_code = 2;
    /** 节点编号 */
    sint32 node_id = 3;
    /** 用户编号 */
    sint64 user_id = 4;
    /** 用户名 */
    string user_name = 5;
    // 钱包名称
    string wallet_name = 6;
    /** 钱包类型 */
    sint32 wallet_type= 7;
    /** 钱包标志 */
    sint32 wallet_flag = 8;
    /** 余额 */
    sint32 balance = 9;
    /** 赠送余额 */
    sint32 present_balance = 10;
    /** 调整金额 */
    sint32 adjust_amount = 11;
    /** 冻结余额 */
    sint32 freeze_amount = 12;
    /** 结余金额 */
    sint32 latest_amount = 13;
    /** 失效账户余额 */
    sint32 expired_amount = 14;
    /** 总充值金额 */
    sint32 total_charge = 15;
    /** 累计赠送金额 */
    sint32 total_present = 16;
    /** 总支付额 */
    sint32 total_pay = 17;
    /** 状态 */
    sint32 state = 18;
    /** 创建时间 */
    sint64 create_time = 19;
    /** 更新时间 */
    sint64 update_time = 20;
}

/** 钱包日志 */
message SWalletLog {
    /** 编号 */
    sint64 id = 1;
    /** 钱包编号 */
    sint64 wallet_id = 2;
    /** 业务类型 */
    sint32 kind = 3;
    /** 标题 */
    string title = 4;
    /** 外部通道 */
    string outer_chan = 5;
    /** 外部订单号 */
    string outer_no = 6;
    /** 变动金额 */
    sint32 value =  7;
    /** 余额 */
    sint32 balance = 8;
    /** 交易手续费 */
    sint32 trade_fee = 9;
    /** 操作人员用户编号 */
    sint32 operator_uid = 10;
    /** 操作人员名称 */
    string operator_name = 11;
    /** 备注 */
    string remark = 12;
    /** 审核状态 */
    sint32 review_state = 13;
    /** 审核备注 */
    string review_remark = 14;
    /** 审核时间 */
    sint64 review_time = 15;
    /** 创建时间 */
    sint64 create_time = 16;
    /** 更新时间 */
    sint64 update_time = 17;
}