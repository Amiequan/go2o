syntax = "proto3";

import "global.proto";
import "message/cart_dto.proto";

option go_package = "./;proto";
option java_package = "com.github.go2o.rpc";

// 购物车服务
service CartService {
    // 批发购物车接口
    rpc WholesaleCartV1 (WsCartRequest) returns (Result) {
    }
    // 普通购物车接口
    rpc NormalCartV1 (NormalCartRequest) returns (Result) {
    }
    // 获取购物车,当购物车编号不存在时,将返回一个新的购物车
    rpc GetShoppingCart_ (CartCode) returns (SShoppingCart) {
    }
    // 放入购物车
    rpc PutInCart_ (CartItemRequest) returns (CartItemResponse) {
    }
    // 从购物车里删除指定数量商品
    rpc SubCartItem_ (CartItemRequest) returns (CartItemResponse) {
    }
    // 获取购物车结算信息
    rpc GetCartSettle_ (CartCode) returns (SettleMeta_) {
    }
    // 勾选商品结算
    rpc CheckSign_ (CheckSignRequest) returns (Result) {
    }
    // 更新购物车结算
    rpc PrepareSettlePersist_ (SettlePersistRequest) returns (Result) {
    }
}


message SettlePersistRequest {
    // 买家编号
    int64 buyer_id = 1;
    // 店铺编号
    int64 shop_id = 2;
    int64 payment_opt = 3;
    int64 deliver_opt = 4;
    int64 address_id = 5;
}
message CartItemRequest {
    // 买家编号
    int64 buyer_id = 1;
    // 购物车编码
    string cart_code = 2;
    //商品编号
    sint64 item_id = 3;
    //SKU编号
    sint64 sku_id = 4;
    // 数量
    int32 quantity = 5;
}

message CheckSignRequest {
    int64 buyer_id = 1;
    string cart_code = 2;
    repeated SCheckCartItem items = 3;
}

message CartCode {
    int64 buyer_id = 1;
    string cart_code = 2;
}

message SettleMeta_ {
    int64 payment_opt = 1;
    int64 deliver_opt = 2;
    SettleShopMeta_ shop = 3;
    SettleDeliverMeta_ deliver = 4;
}

message SettleShopMeta_ {
    int64 shop_id = 1;
    string shop_name = 2;
    string telephone = 3;
}


message SettleDeliverMeta_ {
    int64 id = 1;
    string consignee_name = 2;
    string consignee_phone = 3;
    string address = 4;
}