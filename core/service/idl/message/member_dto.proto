syntax = "proto3";

import "global.proto";

option go_package = "./;proto";
option java_package = "com.github.go2o.rpc";

// 会员标志
enum EMemberFlag {
    // 已创建的会员
    MEMBER_CREATED = 0;
    // 已激活
    ACTIVE = 1;
    // 已锁定的
    LOCKED = 2;
    // 已认证的
    TRUSTED = 4;
}

message RegisterMemberRequest {
    // 用户名
    string user = 1;
    // 密码(md5)
    string Pwd = 2;
    // 昵称
    string Name = 3;
    // 手机
    string phone = 4;
    // 邮箱
    string email = 5;
    // 用户标志
    int32 flag = 6;
    // 邀请码
    string inviter_code = 7;
    // 注册IP
    string reg_ip = 8;
    // 注册来源
    string reg_from = 9;
    //map<string, string> extend = 10;
}

message LoginRequest {
    string user = 1;
    string Pwd = 2;
    bool update = 3;
}
// 注册结果
message RegisterResponse {
    // 状态码,如为0表示成功
    int32 err_code = 1;
    // 消息
    string err_msg = 2;
    // 会员编号
    int64 memberId = 3;
}

// 密码验证请求
message PwdVerifyRequest {
    sint64 memberId = 1;
    string Pwd = 2;
}

message FindMemberRequest {
    // 凭据类型
    ECredentials cred = 1;
    // 凭据的值
    string value = 2;
}

message SMemberLevelListResponse {
    repeated SMemberLevel value = 1;
}

message SubmitTrustInfoRequest {
    sint64 memberId = 1;
    STrustedInfo info = 2;
}

message ReviewTrustInfoRequest {
    int64 memberId = 1;
    bool review_pass = 2;
    string remark = 3;
}

message LockRequest {
    sint64 memberId = 1;
    sint32 minutes = 2;
    string remark = 3;
}
message GrantFlagRequest {
    sint64 memberId = 1;
    sint32 flag = 2;
}

message SendCodeRequest {
    sint64 memberId = 1;
    string operation = 2;
    int32 msg_type = 3;
}

message CompareCodeRequest {
    sint64 memberId = 1;
    string code = 2;
}

message SReceiptsCodeListResponse {
    repeated SReceiptsCode value =  1;
}
message ReceiptsCodeSaveRequest {
    sint64 memberId = 1;
    SReceiptsCode code = 2;
}


message UpdateLevelRequest {
    sint64 memberId = 1;
    sint32 level = 2;
    bool review = 3;
    sint64 payment_orderId = 4;
}

message ChangePhoneRequest {
    sint64 memberId = 1;
    string phone = 2;
}
message ChangeUserRequest {
    sint64 memberId = 1;
    string user =  2;
}
message ModifyPwdRequest {
    sint64 memberId = 1;
    string origin_pwd = 2;
    string new_pwd = 3;
}
message ChangeInviterRequest {
    sint64 memberId = 1;
    sint64 inviterId = 2;
}

message OrderQuantityMapResponse {
    map<sint32, sint32> data = 1;
}

message GetTokenRequest {
    sint64 memberId = 1;
    bool reset = 2;
}

message PremiumRequest {
    sint64 memberId = 1;
    sint32 v = 2;
    sint64 expires = 3;
}

message CheckTokenRequest {
    sint64 memberId = 1;
    string token = 2;
}

message AddressListResponse {
    repeated SAddress value =  1;
}
message SaveAddressRequest {
    sint64 memberId = 1;
    SAddress value =  2;
}

// 保存地址响应
message SaveAddressResponse {
    /* 状态码,如为0表示成功 */
    sint32 err_code = 1;
    /* 消息 */
    string err_msg = 2;
    // 地址编号
    int64 addressId = 3;
}

message GetAddressRequest {
    sint64 memberId = 1;
    sint64 addrId = 2;
}

// 账户资产变动请求
message AccountChangeRequest {
    // 会员编号
    sint64 memberId = 1;
    // 账户类型
    sint32 account_type = 2;
    // 明细标题
    string title = 3;
    // 金额
    sint32 amount = 4;
    // 外部校译号
    string outerNo = 5;
    // 备注
    string remark = 6;
}
message AccountAdjustRequest {
    sint64 memberId = 1;
    sint32 account = 2;
    sint32 value = 3;
    sint64 relate_user = 4;
    string remark = 5;
}

message B4EAuthRequest {
    sint64 memberId = 1;
    string action = 2;
    map<string, string> data = 3;
}

message PagingAccountInfoRequest {
    sint64 memberId = 1;
    sint32 account_type = 2;
    SPagingParams params = 3;
}

/** 等级 */
message SMemberLevel {
    sint32 id = 1;
    string Name = 2;
    sint32 require_exp = 3;
    string program_signal = 4;
    sint32 is_official = 5;
    sint32 enabled = 6;
    sint32 allow_upgrade = 7;
}

message AvatarRequest {
    sint64 memberId = 1;
    string avatar_url = 2;
}

/** 会员 */
message SMember {
    /** 编号  */
    sint64 Id = 1;
    /** 用户名 */
    string user =  2;
    /** 密码 */
    string Pwd = 3;
    /** 交易密码 */
    string trade_pwd = 4;
    /** 经验值 */
    sint64 exp = 5;
    /** 等级  */
    sint32 level = 6;
    /** 高级用户级别 */
    sint32 premium_user = 7;
    /** 高级用户过期时间 */
    sint64 premium_expires = 8;
    /** 邀请码 */
    string invite_code = 9;
    /** 注册IP */
    string reg_ip = 10;
    /** 注册来源 */
    string reg_from = 11;
    /** 状态 */
    sint32 state = 12;
    /** 会员标志 */
    sint32 flag = 13;
    /** 会员编码  */
    string code = 14;
    /** 会员头像 */
    string avatar = 15;
    /** 手机号  */
    string phone = 16;
    /** 电子邮箱 */
    string email = 17;
    /** 昵称 */
    string Name = 18;
    /** 真实姓名 */
    string real_name = 19;
    /* 用户会员密钥 */
    string dynamic_token = 20;
    /** 注册时间 */
    int64 reg_time = 21;
    /** 最后登录时间 */
    int64 last_login_time = 22;
}

/** 资料 */
message SProfile {
    sint64 memberId = 1;
    string Name = 2;
    string avatar = 3;
    sint32 gender = 4;
    string birth_day = 5;
    string phone = 6;
    string address = 7;
    string im = 8;
    string email = 9;
    sint32 province = 10;
    sint32 city = 11;
    sint32 district = 12;
    string remark = 13;
    string ext1 = 14;
    string ext2 = 15;
    string ext3 = 16;
    string ext4 = 17;
    string ext5 = 18;
    string ext6 = 19;
    sint64 UpdateTime = 20;
}

/** 账户 */
message SAccount {
    sint64 memberId = 1;
    sint64 integral = 2;
    sint64 freeze_integral = 3;
    double balance = 4;
    double freeze_balance = 5;
    double expired_balance = 6;
    string wallet_code = 7;
    double wallet_balance = 8;
    double freeze_wallet = 9;
    double expired_wallet = 10;
    double total_wallet_amount = 11;
    double flow_balance = 12;
    double grow_balance = 13;
    double grow_amount = 14;
    double grow_earnings = 15;
    double grow_total_earnings = 16;
    double total_expense = 17;
    double total_charge = 18;
    double total_pay = 19;
    sint64 priority_pay = 20;
    sint64 UpdateTime = 21;
}

message SComplexMember {
    string Name = 1;
    string avatar = 2;
    string phone = 3;
    sint32 exp = 4;
    sint32 level = 5;
    string level_name = 6;
    string invite_code = 7;
    sint32 trust_authState = 8;
    sint32 premium_user = 9;
    sint32 flag = 10;
    sint64 UpdateTime = 11;
    /** 交易密码是否已设置 */
    bool trade_pwd_has_set = 12;
}

message SMemberRelation {
    sint64 memberId = 1;
    string cardId = 2;
    sint64 inviterId = 3;
    string inviter_str = 4;
    sint32 register_mchId = 5;
}

/** 实名认证信息 */
message STrustedInfo {
    /** 真实姓名 */
    string real_name = 1;
    /** 国家代码,如:CN */
    string country_code = 2;
    /** 证件类型 */
    sint32 card_type= 3;
    /** 证件号码 */
    string cardId = 4;
    /** 证件正面照 */
    string card_image = 5;
    /** 证件反面照 */
    string card_reverse_image = 6;
    /** 认证人脸照 */
    string trust_image = 7;
    /** 是否人工审核 */
    sint32 manual_review = 8;
    /** 审核状态 */
    sint32 ReviewState = 9;
    /** 审核时间 */
    sint64 review_time = 10;
    /** 备注 */
    string remark = 11;
}

message SAddress {
    sint64 Id = 1;
    /** 收货人姓名 */
    string consignee_name = 2;
    /** 收货人电话 */
    string consignee_phone = 3;
    sint32 province = 4;
    sint32 city = 5;
    sint32 district = 6;
    string area = 7;
    string detail_address = 8;
    sint32 is_default = 9;
}

message AddressIdRequest {
    sint64 memberId = 1;
    sint64 addressId = 2;
}

/** 收款码 */
message SReceiptsCode {
    /** 账户标识,如:alipay */
    string identity = 1;
    /** 账户名称 */
    string Name = 2;
    /** 账号 */
    string accountId = 3;
    /** 收款码地址 */
    string code_url = 4;
    /** 是否启用 */
    sint32 state = 5;
}

/* 会员等级信息 */
message SMemberLevelInfo {
    /** 等级 */
    sint32 level = 1;
    /** 等级名称 */
    string level_name = 2;
    /** 经验值 */
    sint32 exp = 3;
    /** 编程符号 */
    string program_signal = 4;
    /** 下一级等级,返回-1表示最高级别 */
    sint32 next_level = 5;
    /** 下一等级名称 */
    string next_level_name = 6;
    /** 编程符号 */
    string next_program_signal = 7;
    /** 需要经验值 */
    sint32 require_exp = 8;
}

/** 订单汇总信息 */
message SMemberOrderSummary {
    /** 待付款订单数量 */
    sint32 await_payment = 1;
    /** 待发货订单数量 */
    sint32 await_shipment = 2;
    /** 待收货订单数量 */
    sint32 await_receive = 3;
    /** 已完成订单数量 */
    sint32 completed = 4;
}

message MemberRelationResponse {
    // 邀请人（会员）
    sint64 inviterId = 1;
    // 邀请会员编号(depth2)
    sint64 inviter_d2 = 2;
    // 邀请会员编号(depth3)
    sint64 inviter_d3 = 3;
}

/** 凭据 */
enum ECredentials {
    _1 = 0;
    /** 用户名 */
    USER = 1;
    /** 用户代码 */
    CODE = 2;
    /** 邮箱 */
    EMAIL = 3;
    /** 手机号码 */
    PHONE = 4;
    /** 邀请码 */
    INVITE_CODE = 6;
}

message WalletLogRequest {
    sint64 memberId = 1;
    sint64 logId = 2;
}

// 钱包账户日志
message WalletLogResponse {
    // 日志编号
    sint64 logId = 1;
    // 会员编号
    sint64 memberId = 2;
    // 外部单号
    string outerNo = 3;
    // 业务类型
    sint32 kind = 4;
    // 标题
    string title = 5;
    // 金额
    double amount = 6;
    // 手续费
    double trade_fee = 7;
    // 状态
    sint32 ReviewState = 8;
    // 备注
    string remark = 9;
    // 创建时间
    sint64 create_time = 10;
    // 更新时间
    sint64 UpdateTime = 11;
    // 关联操作人,仅在客服操作时,记录操作人
    sint64 relate_user = 12;
}

// 账户类型
enum EAccountType {
    NoAccount = 0;
    // 余额账户
    AccountBalance = 1;
    // 积分账户
    AccountIntegral = 2;
    // 钱包账户, 对应邀请奖励
    AccountWallet = 3;
    // 流通金账户，对应团队推广奖励
    AccountFlow = 4;
}

// 转账账户类型
enum TransferAccountType {
    TA_BALANCE = 0;
    TA_WALLET = 1;
}

// 账户转账请求
message AccountTransferRequest {
    TransferAccountType transfer_account = 1;
    sint64 from_memberId = 2;
    sint64 to_memberId = 3;
    sint32 amount = 4;
    sint32 trade_fee = 5;
    string remark = 6;
}

// 提现申请
message WithdrawRequest {
    sint64 memberId = 1;
    // 提现金额
    int32 amount = 2;
    // 手续费
    int32 trade_fee = 3;
    // 提现方式,21:提现并兑换到余额  22:提现到银行卡(人工提现) 23:第三方钱包
    int32 withdraw_kind = 4;
    // 银行账号或第三方支付钱包
    string accountNo = 5;
}
message WithdrawalResponse {
    sint64 err_code = 1;
    string err_msg = 2;
    string tradeNo = 3;
    sint64 logId = 4;
}

// 获取提现记录
message WithdrawalLogRequest {
    // 会员编号
    sint64 memberId = 1;
    // 数量
    sint32 number = 2;
    // 仅返回完成的提现
    bool only_finished = 3;
}

message WithdrawalLogsResponse {
    sint64 memberId = 1;
    repeated WithdrawalLog data = 2;
}

// 提现日志
message WithdrawalLog {
    sint64 Id = 1;
    // 外部单号
    string outerNo = 2;
    // 业务类型
    sint32 kind = 3;
    // 标题
    string title = 4;
    // 金额
    sint32 amount = 5;
    // 手续费
    sint32 trade_fee = 6;
    // 关联操作人,仅在客服操作时,记录操作人
    sint64 relate_user = 7;
    // 状态
    sint32 ReviewState = 8;
    // 备注
    string remark = 9;
    // 创建时间
    sint64 submit_time = 10;
    // 更新时间
    sint64 UpdateTime = 11;
}

// 申请提现请求
message ReviewWithdrawalRequest {
    int64 memberId = 1;
    int64 infoId = 2;
    bool pass = 3;
    string remark = 4;
}

message FinishWithdrawalRequest {
    int64 memberId = 1;
    // 提现记录编号
    int64 infoId = 2;
    // 汇款/交易单号
    string tradeNo = 3;
}

message MemberInvitationPagingRequest {
    int64 memberId = 1;
    int64 begin = 2;
    int64 end = 3;
}


message MemberInvitationPagingResponse {
    int64 total = 1;
    repeated SInvitationMember data = 2;
}

// 邀请会员数据
message SInvitationMember {
    // 会员编号
    int64 memberId = 1;
    // 用户名
    string user =  2;
    // 等级
    int32 level = 3;
    // 头像
    string avatar = 4;
    // 昵称
    string nick_name = 5;
    // 电话
    string phone = 6;
    // 即时通讯
    string im = 9;
    // 邀请人数
    int32 invitation_num = 10;
}
message IsInvitationRequest {
    // 会员编号
    int64 memberId = 1;
    // 邀请人会员编号
    int64 inviterId = 2;
}

enum PagingCouponState {
    CS_ALL = 0;
    CS_AVAILABLE = 1;
    CS_EXPIRED = 2;
}

message MemberCouponPagingRequest {
    int64 memberId = 1;
    // 状态,-1为全部
    PagingCouponState state = 2;
    int64 begin = 3;
    int64 end = 4;
}

message MemberCouponListResponse {
    int64 total = 1;
    repeated SMemberCoupon data = 2;
}
message SMemberCoupon {
    // 优惠券编号
    int64 couponId = 1;
    // 数量
    int32 number = 2;
    // 优惠券标题
    string title = 3;
    //优惠码
    string code = 4;
    //优惠金额
    int32 discount_fee = 5;
    //订单折扣(不打折为100)
    int32 discount = 6;
    //是否使用
    bool is_used = 7;
    // 获得时间
    int64 get_time = 8;
    //结束日期
    int64 over_time = 9;
}


enum FavoriteType {
    UNUSED = 0;
    SHOP = 1;
    GOOGS = 2;
}

message FavoriteRequest {
    sint64 memberId = 1;
    FavoriteType favorite_type= 2;
    sint64 referId = 3;
}
message DepthRequest {
    sint64 memberId = 1;
    sint32 depth = 2;
}
message InviterIdListResponse {
    repeated sint64 value =  1;

}
message InviteQuantityRequest {
    sint64 memberId = 1;
    map<string, string> data = 2;
}

message MemberIdListResponse {
    repeated sint64 value =  1;
}

