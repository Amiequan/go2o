syntax = "proto3";

option go_package = "./;proto";
option java_package = "com.github.go2o.rpc";

// 商品销售类型
enum EItemSalesType {
    IT_NORMAL = 0;
    IT_WHOLESALE = 1;
}

message SkuId {
    int64 item_id = 1;
    int64 sku_id = 2;
}

message GetItemsByLabelRequest {
    string label = 1;
    string sort_by = 2;
    int64 begin = 3;
    int64 end = 4;
}

message PagingShopGoodsResponse {
    int64 total = 1;
    repeated SGoods data = 2;
}

message PagingGoodsResponse {
    int64 total = 1;
    repeated SUnifiedViewItem data = 2;
}

// 获取商品请求
message GetItemsRequest {
    int64 category_id = 1;
    int64 begin = 2;
    int64 end = 3;
    // 是否随机
    bool random = 4;
    string where = 5;
}

// 简单的商品信息
message SGoods {
    int64 item_id = 1;
    int64 product_id = 2;
    int64 vendor_id = 3;
    int64 shop_id = 4;
    int32 category_id = 5;
    // 标题
    string title = 6;
    string short_title = 7;
    // 货号
    string goods_no = 8;
    string image = 9;
    //定价
    double retail_price = 10;
    //销售价
    double price = 11;
    // 促销价
    double prom_price = 12;
    // 价格区间
    string price_range = 13;
    int64 goods_id = 14;
    int64 sku_id = 15;
    bool is_present = 16;
    // 促销标志
    int32 promotion_flag = 17;
    // 库存
    int32 stock_num = 18;
    // 已售件数
    int32 sale_num = 19;
}

/** SKU */
message SSku {
    sint64 sku_id = 1;
    sint64 item_id = 2;
    sint64 product_id = 3;
    string title = 4;
    string image = 5;
    string spec_data = 6;
    string spec_word = 7;
    string code = 8;
    double retail_price = 9;
    double price = 10;
    double cost = 11;
    sint32 weight = 12;
    sint32 bulk = 13;
    sint32 stock = 14;
    sint32 sale_um = 15;
}

// 统一的商品显示对象
message SUnifiedViewItem {
    sint64 item_id = 1;
    sint64 product_id = 2;
    sint64 category_id = 3;
    sint64 vendor_id = 4;
    sint64 brand_id = 5;
    string title = 6;
    string code = 7;
    int64 sku_id = 8;
    string image = 9;
    double price = 10;
    string price_range = 11;
    int32 stock_num = 12;
    int64 express_tid = 13;
    sint32 shelve_state = 14;
    sint32 review_state = 15;
    sint64 update_time = 16;
    repeated SSku sku_array = 17;
    repeated SLevelPrice level_prices = 18;
    SItemViewData view_data = 19;
    map<string, string> data = 20;
    // 3: sint32 PromFlag
    // 7: sint32 ShopId
    // 8: sint32 ShopCatId
    // 9: s
    // 11: string ShortTitle
    // 14: sint32 IsPresent
    // 23: sint32 Weight
    // 24: sint32 Bulk
    // 18: sint32 SkuNum
    // 28: sint32 SortNum
    // 29: sint64 CreateTime
    // 31: double PromPrice
    // 22: double RetailPrice
    //
    // 20: double Cost
    // 17: sint32 SaleNum
}

message SItemViewData {
    // 商品详情
    string details = 1;
    // 缩略图
    repeated string thumbs = 2;
    // 产品图片
    repeated string images = 3;
    // SKU选择HTML
    string sku_html = 4;
    // SKU JSON数据
    string sku_json = 5;
}

// 完整的商品信息
message SOldItem {
    sint64 item_id = 1;
    sint64 product_id = 2;
    sint32 prom_flag = 3;
    sint32 cat_id = 4;
    sint64 vendor_id = 5;
    sint32 brand_id = 6;
    sint64 shop_id = 7;
    sint32 shop_cat_id = 8;
    sint32 express_tid = 9;
    string title = 10;
    string short_title = 11;
    string code = 12;
    string image = 13;
    sint32 is_present = 14;
    string price_range = 15;
    sint32 stock_num = 16;
    sint32 sale_num = 17;
    sint32 sku_num = 18;
    sint64 sku_id = 19;
    double cost = 20;
    double price = 21;
    double retail_price = 22;
    sint32 weight = 23;
    sint32 bulk = 24;
    sint32 shelve_state = 25;
    sint32 review_state = 26;
    string review_remark = 27;
    sint32 sort_num = 28;
    sint64 create_time = 29;
    sint64 update_time = 30;
    double prom_price = 31;
    repeated SSku sku_array = 32;
    map<string, string> data = 33;
}

message ItemLabelListResponse {
    repeated SItemLabel value =  1;
}

// 销售标签
message SItemLabel {
    int32 id = 1;
    // 标签名
    string name = 2;
    // 标签代码
    string tag_code = 5;
    // 商品的遮盖图
    string label_image = 3;
    // 是否启用
    bool enabled = 4;
}

// 商品库存数据
message SItemStock {
    // 库存数量
    int32 stock_num = 1;
    // 已销售数量
    int32 sale_num = 19;
}

// 商品快照(针对商品)
message SItemSnapshot {
    // 商品编号
    int64 item_id = 1;
    // 产品编号
    int64 product_id = 2;
    // 快照编码
    string key = 3;
    // 分类编号
    int64 category_id = 4;
    // 供货商编号
    int64 vendor_id = 5;
    // 编号
    int64 brand_id = 6;
    // 店铺编号
    int64 shop_id = 7;
    // 编号分类编号
    int64 shop_cat_id = 8;
    // 运费模板
    int64 express_tid = 9;
    // 商品标题
    string title = 10;
    // 短标题
    string short_title = 11;
    // 产品编码
    string product_code = 12;
    // 商品图片
    string main_image = 13;
    // 是否为赠品
    bool is_present = 14;
    // 价格区间
    string price_range = 15;
    // 默认SKU
    int64 sku_id = 16;
    // 成本
    //Cost float32 `db:"cost"`
    // 售价
    int32 price = 17;
    // 零售价
    int32 retail_price = 18;
    // 重量(g)
    //int32 Weight = 19;
    // 体积(ml)
    //Bulk int32 `db:"bulk"`
    // 会员价
    //LevelSales int32

    // 更新时间
    int64 update_time = 19;
    // 库存
    SItemStock stock = 20;
    // SKU
    repeated SSku sku_array = 21;
    // 会员价
    repeated SLevelPrice level_prices = 22;
    // 显示数据
    SItemViewData view_data = 23;
}

// 商品交易快照(针对商品)
message STradeSnapshot {
    //快照编号
    int64 id = 1;
    // 商品编号
    int64 item_id = 2;
    //商品SKU编号
    int64 sku_id = 3;
    //快照编码: 商户编号+g商品编号+快照时间戳
    string snapshot_key = 4;
    // 卖家编号
    int64 seller_id = 5;
    // 卖家名称
    string seller_name = 6;
    //商品标题
    string title = 7;
    //货号
    // GoodsNo string `db:"goods_no"`
    // 产品编码
    string product_code = 8;
    //SKU
    string sku = 9;
    //图片
    string image = 10;
    //销售价
    int32 price = 11;
    // 快照时间
    int64 create_time = 12;
}

// 会员价
message SLevelPrice {
    // 编号
    int64 id = 1;
    // 等级
    int32 level = 2;
    // 价格
    int64 price = 3;
    // 限购数量,-1为不限制
    int32 max_number = 4;
    // 是否启用
    bool enabled = 5;
}

message ItemBySkuRequest {
    int64 product_id = 1;
    int64 sku_id = 2;
}

message ItemIllegalRequest {
    int64 item_id = 1;
    string remark = 2;
}

message ItemReviewRequest {
    int64 item_id = 1;
    bool pass = 2;
    string remark = 3;
}

message SaveLevelPriceRequest {
    int64 item_id = 1;
    repeated SLevelPrice value =  2;
}

message ShelveStateRequest {
    int64 seller_id = 1;
    EItemSalesType item_type= 3;
    int64 item_id = 2;
    bool shelve_on = 4;
    string remark = 5;
}

message SWsSkuPriceListResponse {
    repeated SWsSkuPrice value =  1;
}

message SaveSkuPricesRequest {
    int64 item_id = 1;
    int64 sku_id = 2;
    repeated SWsSkuPrice value =  3;
}

// 商品批发价
message SWsSkuPrice {
    // 编号
    int64 id = 1;
    // 需要数量以上
    int32 require_num = 2;
    // 批发价
    double wholesale_price = 3;
}

message SWsItemDiscountListResponse {
    repeated SWsItemDiscount value =  1;
}
message GetWsDiscountRequest {
    // 商品编号
    int64 item_id = 1;
    // 买家分组编号
    int64 group_id = 2;
}

message SaveItemDiscountRequest {
    int64 item_id = 1;
    int64 group_id = 2;
    repeated SWsItemDiscount value =  3;
}
// 批发商品折扣
message SWsItemDiscount {
    // 编号
    int64 id = 1;
    // 客户分组
    int64 buyer_group_id = 2;
    // 要求金额，默认为0
    int64 require_amount = 3;
    // 折扣率
    int64 discount_rate = 4;
}