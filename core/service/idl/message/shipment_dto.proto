syntax = "proto3";

option go_package = "./;proto";
option java_package = "com.github.go2o.rpc";

// 覆盖区域
message SCoverageValue {
    int64 id = 1;
    string name = 2;
    double lng = 3;
    double lat = 4;
    int32 radius = 5;
    string address = 6;
    int64 area_id = 7;
}

message ShipmentOrderListResponse {
    repeated SShipmentOrder value =  1;
}
// 发货单
message SShipmentOrder {
    // 编号
    int64 id = 1;
    // 订单编号
    int64 order_id = 2;
    // 子订单编号
    int64 sub_order_id = 3;
    // 快递SP编号
    int64 express_sp_id = 4;
    // 快递SP单号
    string ship_order_no = 5;
    // 物流日志
    string shipment_log = 6;
    // 运费
    double amount = 7;
    // 实际运费
    double final_amount = 8;
    // 发货时间
    int64 ship_time = 9;
    // 状态
    int32 state = 10;
    // 更新时间
    int64 update_time = 11;
    // 配送项目
    repeated SShipmentItem items = 12;
}

// 发货单详情
message SShipmentItem {
    // 编号
    int64 id = 1;
    // 商品交易快照编号
    int64 snapshot_id = 2;
    // 商品数量
    int32 quantity = 3;
    // 运费
    double amount = 4;
    // 实际运费
    double final_amount = 5;
}

message LogisticFlowTrackRequest {
    string shipper_code = 1;
    string logistic_code = 2;
    bool invert = 3;
}
message OrderLogisticTrackRequest {
    sint64 ship_order_id = 1;
    bool invert = 2;
}
// 发货单追踪
message SShipOrderTrack {
    // 返回状态码
    sint32 code = 1;
    // 返回错误信息
    string message = 2;
    // 物流单号
    string logistic_code = 3;
    // 承运商代码
    string shipper_code = 4;
    /** 承运商名称 */
    string shipper_name = 5;
    // 发货状态
    string ship_state = 6;
    // 更新时间
    sint64 update_time = 7;
    // 包含发货单流
    repeated SShipFlow flows = 8;
}
// 发货流
message SShipFlow {
    // 记录标题
    string subject = 1;
    // 记录时间
    string create_time = 2;
    // 备注
    string remark = 3;
}