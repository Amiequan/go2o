syntax = "proto3";
option go_package = ".;proto";

import "global.proto";

message SmsApiSaveRequest {
    string provider = 1;
    SSmsApi api = 2;
}

message BoardHookSaveRequest {
    string hookURL = 1;
    string token = 2;
}

// 基础服务
service FoundationService {
    /** 获取短信API凭据, provider 短信服务商, 默认:http */
    rpc GetSmsApi (String) returns (SSmsApi) {
    }
    /** 保存短信API凭据,@provider 短信服务商, 默认:http */
    rpc SaveSmsApi (SmsApiSaveRequest) returns (Result) {
    }
    /** 保存面板HOOK数据,这通常是在第三方应用中初始化或调用,参见文档：BoardHooks */
    rpc SaveBoardHook (BoardHookSaveRequest) returns (Result) {
    }

    // 格式化资源地址并返回
    rpc ResourceUrl (String) returns (String) {
    }
    // 设置键值
    //rpc SetValue (Pair) returns (Result){}
    // 删除值,key
    //rpc DeleteValue (String) returns (Result){}
    // 根据前缀获取值,prefix
    //rpc GetValuesByPrefix (String) returns (StringMap){}
    // 注册单点登录应用,返回值：
    //   -  1. 成功，并返回token
    //   - -1. 接口地址不正确
    //   - -2. 已经注册
    rpc RegisterApp (SSsoApp) returns (String) {
    }
    // 获取应用信息,name
    rpc GetApp (String) returns (SSsoApp) {
    }
    // 获取单点登录应用
    rpc GetAllSsoApp (Empty) returns (StringListResponse) {
    }
    // 验证超级用户账号和密码
    rpc SuperValidate (UserPwd) returns (Bool) {
    }
    // 保存超级用户账号和密码
    rpc FlushSuperPwd (UserPwd) returns (Empty) {
    }
    // 创建同步登录的地址,returnUrl
    rpc GetSyncLoginUrl (String) returns (String) {
    }
    // 获取地区名称
    rpc GetAreaNames (GetAreaNamesRequest) returns (StringListResponse) {
    }
    // 获取省市区字符串
    rpc GetAreaString (AreaStringRequest) returns (String) {
    }
    // 获取下级区域,code
    rpc GetChildAreas (Int32) returns (AreaListResponse) {
    }
    // 获取移动应用设置
    rpc GetMoAppConf (Empty) returns (SMobileAppConfig) {
    }
    // 保存移动应用设置
    rpc SaveMoAppConf (SMobileAppConfig) returns (Result) {
    }
    // 获取微信接口配置
    rpc GetWxApiConfig (Empty) returns (SWxApiConfig) {
    }
    // 保存微信接口配置
    rpc SaveWxApiConfig (SWxApiConfig) returns (Result) {
    }
    // 获取支付平台
    rpc GetPayPlatform (Empty) returns (PaymentPlatformResponse) {
    }
    // 获取全局商户销售设置
    rpc GetGlobMchSaleConf_ (Empty) returns (SGlobMchSaleConf) {
    }
    // 保存全局商户销售设置
    rpc SaveGlobMchSaleConf_ (SGlobMchSaleConf) returns (Result) {
    }
}

message AreaStringRequest {
    int32 Province = 1;
    int32 City = 2;
    int32 District = 3;
}
message AreaListResponse {
    repeated SArea Value = 1;
}
message StringListResponse {
    repeated string Value = 1;
}
message GetAreaNamesRequest {
    repeated sint32 Value = 1;
}

message UserPwd {
    string user = 1;
    string pwd = 2;
}

// 单点登录应用
message SSsoApp {
    // 编号
    sint32 ID = 1;
    // 应用名称
    string Name = 2;
    // API地址
    string ApiUrl = 3;
    // 密钥
    string Token = 4;
}

/** 行政区域 */
message SArea {
    sint32 Code = 1;
    sint32 Parent = 2;
    string Name = 3;
}

/** 短信接口信息 */
message SSmsApi {
    /** 接口地址 */
    string ApiUrl = 1;
    /** 接口KEY */
    string Key = 2;
    /** 接口密钥 */
    string Secret = 3;
    /** 请求数据,如: phone={phone}&content={content}*/
    string Params = 4;
    /** 请求方式, GET或POST */
    string Method = 5;
    /** 编码 */
    string Charset = 6;
    /** 签名 */
    string Signature = 7;
    /** 发送成功，包含的字符，用于检测是否发送成功 */
    string SuccessChar = 8;
}

// 移动应用配置
message SMobileAppConfig {
    // 应用名称
    string AppName = 1;
    // APP图标地址
    string AppIcon = 2;
    // 描述
    string Description = 3;
    // 安卓APP版本
    string AndroidVersion = 4;
    // 安卓APP版发布地址
    string AndroidReleaseUrl = 5;
    // 苹果APP版本
    string IosVersion = 6;
    // 苹果APP版发布地址
    string IosReleaseUrl = 7;
    // 模板文件
    string ShowTplPath_ = 8;
}

message SWxApiConfig {
    //APP ID
    string AppId = 1;
    //APP 密钥
    string AppSecret = 2;
    //通信密钥
    string MpToken = 3;
    //通信AES KEY
    string MpAesKey = 4;
    //原始ID
    string OriId = 5;

    /**===== 用于微信支付 =====**/

    //商户编号
    string MchId = 6;
    //商户接口密钥
    string MchApiKey = 7;
    //微信支付的证书路径(上传)
    string MchCertPath = 8;
    //微信支付的证书公钥路径(上传)
    string MchCertKeyPath = 9;
    //是否启用红包功能
    bool RedPackEnabled = 10;
    //红包金额限制
    double RedPackAmountLimit = 11;
    //红包每日数量限制
    int32 RedPackDayTimeLimit = 12;
}

message PaymentPlatformResponse {
    repeated PaymentPlatform Value = 1;
}

message PaymentPlatform {
    string Id = 1;
    string Name = 2;
    string Sign = 3;
    repeated BankItem Items = 4;
}

message BankItem {
    //标识
    string Id = 1;
    //名称
    string Name = 2;
    //签名/别名
    string Sign = 3;
}

// 全局商户销售设置
message SGlobMchSaleConf {
    // !商户订单结算模式
    //MchOrderSettleMode enum.MchSettleMode
    // !商户订单结算比例
    //MchOrderSettleRate float32
    // 商户交易单是否需上传发票
    //TradeOrderRequireTicket bool
    // 是否启用分销模式
    bool FxSalesEnabled = 1;
    // 返现比例,0则不返现
    double CashBackPercent = 2;
    // 一级比例
    double CashBackTg1Percent = 3;
    // 二级比例
    double CashBackTg2Percent = 4;
    // 会员比例
    double CashBackMemberPercent = 5;

    // 自动设置订单
    int32 AutoSetupOrder = 6;
    // 订单超时分钟数
    int32 OrderTimeOutMinute = 7;
    // 订单自动确认时间
    int32 OrderConfirmAfterMinute = 8;
    // 订单超时自动收货
    int32 OrderTimeOutReceiveHour = 9;
}