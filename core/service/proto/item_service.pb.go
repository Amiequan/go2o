// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.13.0
// source: item_service.proto

package proto

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type ItemDetailRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemId int64 `protobuf:"zigzag64,1,opt,name=itemId,proto3" json:"itemId"`
	IType  int32 `protobuf:"zigzag32,2,opt,name=iType,proto3" json:"iType"`
}

func (x *ItemDetailRequest) Reset() {
	*x = ItemDetailRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_item_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemDetailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemDetailRequest) ProtoMessage() {}

func (x *ItemDetailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_item_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemDetailRequest.ProtoReflect.Descriptor instead.
func (*ItemDetailRequest) Descriptor() ([]byte, []int) {
	return file_item_service_proto_rawDescGZIP(), []int{0}
}

func (x *ItemDetailRequest) GetItemId() int64 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

func (x *ItemDetailRequest) GetIType() int32 {
	if x != nil {
		return x.IType
	}
	return 0
}

type PagingGoodsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemType   EItemSalesType `protobuf:"varint,1,opt,name=ItemType,proto3,enum=EItemSalesType" json:"ItemType"`
	SellerId   int64          `protobuf:"varint,2,opt,name=SellerId,proto3" json:"SellerId"`
	CategoryId int64          `protobuf:"varint,3,opt,name=CategoryId,proto3" json:"CategoryId"`
	// 关键词
	Keyword string         `protobuf:"bytes,4,opt,name=Keyword,proto3" json:"Keyword"`
	Params  *SPagingParams `protobuf:"bytes,5,opt,name=Params,proto3" json:"Params"`
}

func (x *PagingGoodsRequest) Reset() {
	*x = PagingGoodsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_item_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PagingGoodsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PagingGoodsRequest) ProtoMessage() {}

func (x *PagingGoodsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_item_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PagingGoodsRequest.ProtoReflect.Descriptor instead.
func (*PagingGoodsRequest) Descriptor() ([]byte, []int) {
	return file_item_service_proto_rawDescGZIP(), []int{1}
}

func (x *PagingGoodsRequest) GetItemType() EItemSalesType {
	if x != nil {
		return x.ItemType
	}
	return EItemSalesType_IT_NORMAL
}

func (x *PagingGoodsRequest) GetSellerId() int64 {
	if x != nil {
		return x.SellerId
	}
	return 0
}

func (x *PagingGoodsRequest) GetCategoryId() int64 {
	if x != nil {
		return x.CategoryId
	}
	return 0
}

func (x *PagingGoodsRequest) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

func (x *PagingGoodsRequest) GetParams() *SPagingParams {
	if x != nil {
		return x.Params
	}
	return nil
}

type PagingShopGoodsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShopId     int64          `protobuf:"varint,1,opt,name=ShopId,proto3" json:"ShopId"`
	CategoryId int64          `protobuf:"varint,2,opt,name=CategoryId,proto3" json:"CategoryId"`
	Params     *SPagingParams `protobuf:"bytes,3,opt,name=Params,proto3" json:"Params"`
}

func (x *PagingShopGoodsRequest) Reset() {
	*x = PagingShopGoodsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_item_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PagingShopGoodsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PagingShopGoodsRequest) ProtoMessage() {}

func (x *PagingShopGoodsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_item_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PagingShopGoodsRequest.ProtoReflect.Descriptor instead.
func (*PagingShopGoodsRequest) Descriptor() ([]byte, []int) {
	return file_item_service_proto_rawDescGZIP(), []int{2}
}

func (x *PagingShopGoodsRequest) GetShopId() int64 {
	if x != nil {
		return x.ShopId
	}
	return 0
}

func (x *PagingShopGoodsRequest) GetCategoryId() int64 {
	if x != nil {
		return x.CategoryId
	}
	return 0
}

func (x *PagingShopGoodsRequest) GetParams() *SPagingParams {
	if x != nil {
		return x.Params
	}
	return nil
}

type SaleLabelItemsRequest_ struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShopId  int64          `protobuf:"varint,1,opt,name=ShopId,proto3" json:"ShopId"`
	LabelId int32          `protobuf:"varint,2,opt,name=LabelId,proto3" json:"LabelId"`
	Params  *SPagingParams `protobuf:"bytes,3,opt,name=Params,proto3" json:"Params"`
}

func (x *SaleLabelItemsRequest_) Reset() {
	*x = SaleLabelItemsRequest_{}
	if protoimpl.UnsafeEnabled {
		mi := &file_item_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaleLabelItemsRequest_) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaleLabelItemsRequest_) ProtoMessage() {}

func (x *SaleLabelItemsRequest_) ProtoReflect() protoreflect.Message {
	mi := &file_item_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaleLabelItemsRequest_.ProtoReflect.Descriptor instead.
func (*SaleLabelItemsRequest_) Descriptor() ([]byte, []int) {
	return file_item_service_proto_rawDescGZIP(), []int{3}
}

func (x *SaleLabelItemsRequest_) GetShopId() int64 {
	if x != nil {
		return x.ShopId
	}
	return 0
}

func (x *SaleLabelItemsRequest_) GetLabelId() int32 {
	if x != nil {
		return x.LabelId
	}
	return 0
}

func (x *SaleLabelItemsRequest_) GetParams() *SPagingParams {
	if x != nil {
		return x.Params
	}
	return nil
}

var File_item_service_proto protoreflect.FileDescriptor

var file_item_service_proto_rawDesc = []byte{
	0x0a, 0x12, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x16, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2f, 0x69, 0x74, 0x65, 0x6d,
	0x5f, 0x64, 0x74, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x41, 0x0a, 0x11, 0x49, 0x74,
	0x65, 0x6d, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x12, 0x52,
	0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x11, 0x52, 0x05, 0x69, 0x54, 0x79, 0x70, 0x65, 0x22, 0xbf, 0x01,
	0x0a, 0x12, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x08, 0x49, 0x74, 0x65, 0x6d, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x45, 0x49, 0x74, 0x65, 0x6d, 0x53, 0x61,
	0x6c, 0x65, 0x73, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x49, 0x74, 0x65, 0x6d, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x53, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1e, 0x0a,
	0x0a, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x18, 0x0a,
	0x07, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x26, 0x0a, 0x06, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x53, 0x50, 0x61, 0x67, 0x69, 0x6e,
	0x67, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x06, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22,
	0x78, 0x0a, 0x16, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x53, 0x68, 0x6f, 0x70, 0x47, 0x6f, 0x6f,
	0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x68, 0x6f,
	0x70, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x53, 0x68, 0x6f, 0x70, 0x49,
	0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49,
	0x64, 0x12, 0x26, 0x0a, 0x06, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x53, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x52, 0x06, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22, 0x72, 0x0a, 0x16, 0x53, 0x61, 0x6c,
	0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x5f, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x68, 0x6f, 0x70, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x53, 0x68, 0x6f, 0x70, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x4c,
	0x61, 0x62, 0x65, 0x6c, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x4c, 0x61,
	0x62, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x06, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x53, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x06, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x32, 0xb2, 0x0a,
	0x0a, 0x0b, 0x49, 0x74, 0x65, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x26, 0x0a,
	0x07, 0x47, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x06, 0x2e, 0x49, 0x6e, 0x74, 0x36, 0x34,
	0x1a, 0x11, 0x2e, 0x53, 0x55, 0x6e, 0x69, 0x66, 0x69, 0x65, 0x64, 0x56, 0x69, 0x65, 0x77, 0x49,
	0x74, 0x65, 0x6d, 0x22, 0x00, 0x12, 0x28, 0x0a, 0x08, 0x53, 0x61, 0x76, 0x65, 0x49, 0x74, 0x65,
	0x6d, 0x12, 0x11, 0x2e, 0x53, 0x55, 0x6e, 0x69, 0x66, 0x69, 0x65, 0x64, 0x56, 0x69, 0x65, 0x77,
	0x49, 0x74, 0x65, 0x6d, 0x1a, 0x07, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x12,
	0x36, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x42, 0x79, 0x53, 0x6b, 0x75, 0x12,
	0x11, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x42, 0x79, 0x53, 0x6b, 0x75, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x11, 0x2e, 0x53, 0x55, 0x6e, 0x69, 0x66, 0x69, 0x65, 0x64, 0x56, 0x69, 0x65,
	0x77, 0x49, 0x74, 0x65, 0x6d, 0x22, 0x00, 0x12, 0x2b, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x49, 0x74,
	0x65, 0x6d, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x12, 0x06, 0x2e, 0x49, 0x6e, 0x74,
	0x36, 0x34, 0x1a, 0x0e, 0x2e, 0x53, 0x49, 0x74, 0x65, 0x6d, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68,
	0x6f, 0x74, 0x22, 0x00, 0x12, 0x2d, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x64, 0x65,
	0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x12, 0x06, 0x2e, 0x49, 0x6e, 0x74, 0x36, 0x34,
	0x1a, 0x0f, 0x2e, 0x53, 0x54, 0x72, 0x61, 0x64, 0x65, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f,
	0x74, 0x22, 0x00, 0x12, 0x19, 0x0a, 0x06, 0x47, 0x65, 0x74, 0x53, 0x6b, 0x75, 0x12, 0x06, 0x2e,
	0x53, 0x6b, 0x75, 0x49, 0x64, 0x1a, 0x05, 0x2e, 0x53, 0x53, 0x6b, 0x75, 0x22, 0x00, 0x12, 0x2b,
	0x0a, 0x0a, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x12, 0x2e, 0x49,
	0x74, 0x65, 0x6d, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x07, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x12, 0x34, 0x0a, 0x0f, 0x53,
	0x61, 0x76, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x73, 0x12, 0x16,
	0x2e, 0x53, 0x61, 0x76, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x07, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22,
	0x00, 0x12, 0x2f, 0x0a, 0x0d, 0x53, 0x69, 0x67, 0x6e, 0x41, 0x73, 0x49, 0x6c, 0x6c, 0x65, 0x67,
	0x61, 0x6c, 0x12, 0x13, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x6c, 0x6c, 0x65, 0x67, 0x61, 0x6c,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x07, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x22, 0x00, 0x12, 0x30, 0x0a, 0x0e, 0x53, 0x65, 0x74, 0x53, 0x68, 0x65, 0x6c, 0x76, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x12, 0x13, 0x2e, 0x53, 0x68, 0x65, 0x6c, 0x76, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x07, 0x2e, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x22, 0x00, 0x12, 0x32, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x12, 0x12, 0x2e, 0x49, 0x74, 0x65, 0x6d,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x07, 0x2e,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x22, 0x00, 0x12, 0x4f, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x42, 0x79, 0x53, 0x61, 0x6c, 0x65, 0x4c,
	0x61, 0x62, 0x65, 0x6c, 0x12, 0x17, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x42,
	0x79, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e,
	0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x53, 0x68, 0x6f, 0x70, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x51, 0x0a, 0x1a, 0x47, 0x65, 0x74,
	0x53, 0x68, 0x6f, 0x70, 0x50, 0x61, 0x67, 0x65, 0x64, 0x4f, 0x6e, 0x53, 0x68, 0x65, 0x6c, 0x76,
	0x65, 0x73, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x12, 0x17, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67,
	0x53, 0x68, 0x6f, 0x70, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x18, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x53, 0x68, 0x6f, 0x70, 0x47, 0x6f, 0x6f,
	0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x44, 0x0a, 0x15,
	0x47, 0x65, 0x74, 0x50, 0x61, 0x67, 0x65, 0x64, 0x4f, 0x6e, 0x53, 0x68, 0x65, 0x6c, 0x76, 0x65,
	0x73, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x13, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x47, 0x6f,
	0x6f, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x50, 0x61, 0x67,
	0x69, 0x6e, 0x67, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x34, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x10,
	0x2e, 0x47, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x14, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3c, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x57,
	0x68, 0x6f, 0x6c, 0x65, 0x73, 0x61, 0x6c, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x41, 0x72, 0x72,
	0x61, 0x79, 0x12, 0x06, 0x2e, 0x53, 0x6b, 0x75, 0x49, 0x64, 0x1a, 0x18, 0x2e, 0x53, 0x57, 0x73,
	0x53, 0x6b, 0x75, 0x50, 0x72, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x36, 0x0a, 0x12, 0x53, 0x61, 0x76, 0x65, 0x57, 0x68,
	0x6f, 0x6c, 0x65, 0x73, 0x61, 0x6c, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x15, 0x2e, 0x53,
	0x61, 0x76, 0x65, 0x53, 0x6b, 0x75, 0x50, 0x72, 0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x07, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x12, 0x52,
	0x0a, 0x19, 0x47, 0x65, 0x74, 0x57, 0x68, 0x6f, 0x6c, 0x65, 0x73, 0x61, 0x6c, 0x65, 0x44, 0x69,
	0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x72, 0x72, 0x61, 0x79, 0x12, 0x15, 0x2e, 0x47, 0x65,
	0x74, 0x57, 0x73, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x53, 0x57, 0x73, 0x49, 0x74, 0x65, 0x6d, 0x44, 0x69, 0x73, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x3c, 0x0a, 0x15, 0x53, 0x61, 0x76, 0x65, 0x57, 0x68, 0x6f, 0x6c, 0x65, 0x73,
	0x61, 0x6c, 0x65, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x18, 0x2e, 0x53, 0x61,
	0x76, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x07, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00,
	0x12, 0x34, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x53, 0x61, 0x6c, 0x65, 0x4c, 0x61,
	0x62, 0x65, 0x6c, 0x73, 0x12, 0x06, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x16, 0x2e, 0x49,
	0x74, 0x65, 0x6d, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x28, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x53, 0x61, 0x6c,
	0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x09, 0x2e, 0x49, 0x64, 0x4f, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x1a, 0x0b, 0x2e, 0x53, 0x49, 0x74, 0x65, 0x6d, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x22, 0x00,
	0x12, 0x27, 0x0a, 0x0d, 0x53, 0x61, 0x76, 0x65, 0x53, 0x61, 0x6c, 0x65, 0x4c, 0x61, 0x62, 0x65,
	0x6c, 0x12, 0x0b, 0x2e, 0x53, 0x49, 0x74, 0x65, 0x6d, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x1a, 0x07,
	0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x12, 0x24, 0x0a, 0x0f, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x53, 0x61, 0x6c, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x06, 0x2e, 0x49,
	0x6e, 0x74, 0x36, 0x34, 0x1a, 0x07, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x12,
	0x51, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x67, 0x65, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x47, 0x6f, 0x6f, 0x64, 0x73, 0x42, 0x79, 0x53, 0x61, 0x6c, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c,
	0x5f, 0x12, 0x17, 0x2e, 0x53, 0x61, 0x6c, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x49, 0x74, 0x65,
	0x6d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x1a, 0x14, 0x2e, 0x50, 0x61, 0x67,
	0x69, 0x6e, 0x67, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x42, 0x1e, 0x0a, 0x13, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x67, 0x6f, 0x32, 0x6f, 0x2e, 0x72, 0x70, 0x63, 0x5a, 0x07, 0x2e, 0x3b, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_item_service_proto_rawDescOnce sync.Once
	file_item_service_proto_rawDescData = file_item_service_proto_rawDesc
)

func file_item_service_proto_rawDescGZIP() []byte {
	file_item_service_proto_rawDescOnce.Do(func() {
		file_item_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_item_service_proto_rawDescData)
	})
	return file_item_service_proto_rawDescData
}

var file_item_service_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_item_service_proto_goTypes = []interface{}{
	(*ItemDetailRequest)(nil),           // 0: ItemDetailRequest
	(*PagingGoodsRequest)(nil),          // 1: PagingGoodsRequest
	(*PagingShopGoodsRequest)(nil),      // 2: PagingShopGoodsRequest
	(*SaleLabelItemsRequest_)(nil),      // 3: SaleLabelItemsRequest_
	(EItemSalesType)(0),                 // 4: EItemSalesType
	(*SPagingParams)(nil),               // 5: SPagingParams
	(*Int64)(nil),                       // 6: Int64
	(*SUnifiedViewItem)(nil),            // 7: SUnifiedViewItem
	(*ItemBySkuRequest)(nil),            // 8: ItemBySkuRequest
	(*SkuId)(nil),                       // 9: SkuId
	(*ItemReviewRequest)(nil),           // 10: ItemReviewRequest
	(*SaveLevelPriceRequest)(nil),       // 11: SaveLevelPriceRequest
	(*ItemIllegalRequest)(nil),          // 12: ItemIllegalRequest
	(*ShelveStateRequest)(nil),          // 13: ShelveStateRequest
	(*GetItemsByLabelRequest)(nil),      // 14: GetItemsByLabelRequest
	(*GetItemsRequest)(nil),             // 15: GetItemsRequest
	(*SaveSkuPricesRequest)(nil),        // 16: SaveSkuPricesRequest
	(*GetWsDiscountRequest)(nil),        // 17: GetWsDiscountRequest
	(*SaveItemDiscountRequest)(nil),     // 18: SaveItemDiscountRequest
	(*Empty)(nil),                       // 19: Empty
	(*IdOrName)(nil),                    // 20: IdOrName
	(*SItemLabel)(nil),                  // 21: SItemLabel
	(*Result)(nil),                      // 22: Result
	(*SItemSnapshot)(nil),               // 23: SItemSnapshot
	(*STradeSnapshot)(nil),              // 24: STradeSnapshot
	(*SSku)(nil),                        // 25: SSku
	(*String)(nil),                      // 26: String
	(*PagingShopGoodsResponse)(nil),     // 27: PagingShopGoodsResponse
	(*PagingGoodsResponse)(nil),         // 28: PagingGoodsResponse
	(*SWsSkuPriceListResponse)(nil),     // 29: SWsSkuPriceListResponse
	(*SWsItemDiscountListResponse)(nil), // 30: SWsItemDiscountListResponse
	(*ItemLabelListResponse)(nil),       // 31: ItemLabelListResponse
}
var file_item_service_proto_depIdxs = []int32{
	4,  // 0: PagingGoodsRequest.ItemType:type_name -> EItemSalesType
	5,  // 1: PagingGoodsRequest.Params:type_name -> SPagingParams
	5,  // 2: PagingShopGoodsRequest.Params:type_name -> SPagingParams
	5,  // 3: SaleLabelItemsRequest_.Params:type_name -> SPagingParams
	6,  // 4: ItemService.GetItem:input_type -> Int64
	7,  // 5: ItemService.SaveItem:input_type -> SUnifiedViewItem
	8,  // 6: ItemService.GetItemBySku:input_type -> ItemBySkuRequest
	6,  // 7: ItemService.GetItemSnapshot:input_type -> Int64
	6,  // 8: ItemService.GetTradeSnapshot:input_type -> Int64
	9,  // 9: ItemService.GetSku:input_type -> SkuId
	10, // 10: ItemService.ReviewItem:input_type -> ItemReviewRequest
	11, // 11: ItemService.SaveLevelPrices:input_type -> SaveLevelPriceRequest
	12, // 12: ItemService.SignAsIllegal:input_type -> ItemIllegalRequest
	13, // 13: ItemService.SetShelveState:input_type -> ShelveStateRequest
	0,  // 14: ItemService.GetItemDetailData:input_type -> ItemDetailRequest
	14, // 15: ItemService.GetValueGoodsBySaleLabel:input_type -> GetItemsByLabelRequest
	2,  // 16: ItemService.GetShopPagedOnShelvesGoods:input_type -> PagingShopGoodsRequest
	1,  // 17: ItemService.GetPagedOnShelvesItem:input_type -> PagingGoodsRequest
	15, // 18: ItemService.GetItems:input_type -> GetItemsRequest
	9,  // 19: ItemService.GetWholesalePriceArray:input_type -> SkuId
	16, // 20: ItemService.SaveWholesalePrice:input_type -> SaveSkuPricesRequest
	17, // 21: ItemService.GetWholesaleDiscountArray:input_type -> GetWsDiscountRequest
	18, // 22: ItemService.SaveWholesaleDiscount:input_type -> SaveItemDiscountRequest
	19, // 23: ItemService.GetAllSaleLabels:input_type -> Empty
	20, // 24: ItemService.GetSaleLabel:input_type -> IdOrName
	21, // 25: ItemService.SaveSaleLabel:input_type -> SItemLabel
	6,  // 26: ItemService.DeleteSaleLabel:input_type -> Int64
	3,  // 27: ItemService.GetPagedValueGoodsBySaleLabel_:input_type -> SaleLabelItemsRequest_
	7,  // 28: ItemService.GetItem:output_type -> SUnifiedViewItem
	22, // 29: ItemService.SaveItem:output_type -> Result
	7,  // 30: ItemService.GetItemBySku:output_type -> SUnifiedViewItem
	23, // 31: ItemService.GetItemSnapshot:output_type -> SItemSnapshot
	24, // 32: ItemService.GetTradeSnapshot:output_type -> STradeSnapshot
	25, // 33: ItemService.GetSku:output_type -> SSku
	22, // 34: ItemService.ReviewItem:output_type -> Result
	22, // 35: ItemService.SaveLevelPrices:output_type -> Result
	22, // 36: ItemService.SignAsIllegal:output_type -> Result
	22, // 37: ItemService.SetShelveState:output_type -> Result
	26, // 38: ItemService.GetItemDetailData:output_type -> String
	27, // 39: ItemService.GetValueGoodsBySaleLabel:output_type -> PagingShopGoodsResponse
	27, // 40: ItemService.GetShopPagedOnShelvesGoods:output_type -> PagingShopGoodsResponse
	28, // 41: ItemService.GetPagedOnShelvesItem:output_type -> PagingGoodsResponse
	28, // 42: ItemService.GetItems:output_type -> PagingGoodsResponse
	29, // 43: ItemService.GetWholesalePriceArray:output_type -> SWsSkuPriceListResponse
	22, // 44: ItemService.SaveWholesalePrice:output_type -> Result
	30, // 45: ItemService.GetWholesaleDiscountArray:output_type -> SWsItemDiscountListResponse
	22, // 46: ItemService.SaveWholesaleDiscount:output_type -> Result
	31, // 47: ItemService.GetAllSaleLabels:output_type -> ItemLabelListResponse
	21, // 48: ItemService.GetSaleLabel:output_type -> SItemLabel
	22, // 49: ItemService.SaveSaleLabel:output_type -> Result
	22, // 50: ItemService.DeleteSaleLabel:output_type -> Result
	28, // 51: ItemService.GetPagedValueGoodsBySaleLabel_:output_type -> PagingGoodsResponse
	28, // [28:52] is the sub-list for method output_type
	4,  // [4:28] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_item_service_proto_init() }
func file_item_service_proto_init() {
	if File_item_service_proto != nil {
		return
	}
	file_global_proto_init()
	file_message_item_dto_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_item_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ItemDetailRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_item_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PagingGoodsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_item_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PagingShopGoodsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_item_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaleLabelItemsRequest_); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_item_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_item_service_proto_goTypes,
		DependencyIndexes: file_item_service_proto_depIdxs,
		MessageInfos:      file_item_service_proto_msgTypes,
	}.Build()
	File_item_service_proto = out.File
	file_item_service_proto_rawDesc = nil
	file_item_service_proto_goTypes = nil
	file_item_service_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ItemServiceClient is the client API for ItemService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ItemServiceClient interface {
	// 获取商品
	GetItem(ctx context.Context, in *Int64, opts ...grpc.CallOption) (*SUnifiedViewItem, error)
	// 保存商品
	SaveItem(ctx context.Context, in *SUnifiedViewItem, opts ...grpc.CallOption) (*Result, error)
	// 根据SKU获取商品
	GetItemBySku(ctx context.Context, in *ItemBySkuRequest, opts ...grpc.CallOption) (*SUnifiedViewItem, error)
	// 获取商品用于销售的快照和信息
	GetItemSnapshot(ctx context.Context, in *Int64, opts ...grpc.CallOption) (*SItemSnapshot, error)
	// 获取商品交易快照,参数传递:snapshotId
	GetTradeSnapshot(ctx context.Context, in *Int64, opts ...grpc.CallOption) (*STradeSnapshot, error)
	// 获取SKU
	GetSku(ctx context.Context, in *SkuId, opts ...grpc.CallOption) (*SSku, error)
	// 设置商品货架状态
	ReviewItem(ctx context.Context, in *ItemReviewRequest, opts ...grpc.CallOption) (*Result, error)
	// 保存商品的会员价
	SaveLevelPrices(ctx context.Context, in *SaveLevelPriceRequest, opts ...grpc.CallOption) (*Result, error)
	// 商品标记为违规
	SignAsIllegal(ctx context.Context, in *ItemIllegalRequest, opts ...grpc.CallOption) (*Result, error)
	// 设置商品货架状态
	SetShelveState(ctx context.Context, in *ShelveStateRequest, opts ...grpc.CallOption) (*Result, error)
	// 获取商品详细数据
	GetItemDetailData(ctx context.Context, in *ItemDetailRequest, opts ...grpc.CallOption) (*String, error)
	// 根据销售标签获取指定数目的商品
	GetValueGoodsBySaleLabel(ctx context.Context, in *GetItemsByLabelRequest, opts ...grpc.CallOption) (*PagingShopGoodsResponse, error)
	// 获取店铺分页上架的商品
	GetShopPagedOnShelvesGoods(ctx context.Context, in *PagingShopGoodsRequest, opts ...grpc.CallOption) (*PagingShopGoodsResponse, error)
	// 获取上架商品数据（分页）
	GetPagedOnShelvesItem(ctx context.Context, in *PagingGoodsRequest, opts ...grpc.CallOption) (*PagingGoodsResponse, error)
	// 获取上架商品数据
	GetItems(ctx context.Context, in *GetItemsRequest, opts ...grpc.CallOption) (*PagingGoodsResponse, error)
	// 获取批发价格数组
	GetWholesalePriceArray(ctx context.Context, in *SkuId, opts ...grpc.CallOption) (*SWsSkuPriceListResponse, error)
	// 保存批发价格
	SaveWholesalePrice(ctx context.Context, in *SaveSkuPricesRequest, opts ...grpc.CallOption) (*Result, error)
	// 获取批发折扣数组
	GetWholesaleDiscountArray(ctx context.Context, in *GetWsDiscountRequest, opts ...grpc.CallOption) (*SWsItemDiscountListResponse, error)
	// 保存批发折扣
	SaveWholesaleDiscount(ctx context.Context, in *SaveItemDiscountRequest, opts ...grpc.CallOption) (*Result, error)
	// 获取所有的商品标签
	GetAllSaleLabels(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*ItemLabelListResponse, error)
	// 获取销售标签
	GetSaleLabel(ctx context.Context, in *IdOrName, opts ...grpc.CallOption) (*SItemLabel, error)
	// 保存销售标签
	SaveSaleLabel(ctx context.Context, in *SItemLabel, opts ...grpc.CallOption) (*Result, error)
	// 删除销售标签
	DeleteSaleLabel(ctx context.Context, in *Int64, opts ...grpc.CallOption) (*Result, error)
	// 根据分页销售标签获取指定数目的商品
	GetPagedValueGoodsBySaleLabel_(ctx context.Context, in *SaleLabelItemsRequest_, opts ...grpc.CallOption) (*PagingGoodsResponse, error)
}

type itemServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewItemServiceClient(cc grpc.ClientConnInterface) ItemServiceClient {
	return &itemServiceClient{cc}
}

func (c *itemServiceClient) GetItem(ctx context.Context, in *Int64, opts ...grpc.CallOption) (*SUnifiedViewItem, error) {
	out := new(SUnifiedViewItem)
	err := c.cc.Invoke(ctx, "/ItemService/GetItem", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *itemServiceClient) SaveItem(ctx context.Context, in *SUnifiedViewItem, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := c.cc.Invoke(ctx, "/ItemService/SaveItem", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *itemServiceClient) GetItemBySku(ctx context.Context, in *ItemBySkuRequest, opts ...grpc.CallOption) (*SUnifiedViewItem, error) {
	out := new(SUnifiedViewItem)
	err := c.cc.Invoke(ctx, "/ItemService/GetItemBySku", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *itemServiceClient) GetItemSnapshot(ctx context.Context, in *Int64, opts ...grpc.CallOption) (*SItemSnapshot, error) {
	out := new(SItemSnapshot)
	err := c.cc.Invoke(ctx, "/ItemService/GetItemSnapshot", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *itemServiceClient) GetTradeSnapshot(ctx context.Context, in *Int64, opts ...grpc.CallOption) (*STradeSnapshot, error) {
	out := new(STradeSnapshot)
	err := c.cc.Invoke(ctx, "/ItemService/GetTradeSnapshot", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *itemServiceClient) GetSku(ctx context.Context, in *SkuId, opts ...grpc.CallOption) (*SSku, error) {
	out := new(SSku)
	err := c.cc.Invoke(ctx, "/ItemService/GetSku", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *itemServiceClient) ReviewItem(ctx context.Context, in *ItemReviewRequest, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := c.cc.Invoke(ctx, "/ItemService/ReviewItem", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *itemServiceClient) SaveLevelPrices(ctx context.Context, in *SaveLevelPriceRequest, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := c.cc.Invoke(ctx, "/ItemService/SaveLevelPrices", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *itemServiceClient) SignAsIllegal(ctx context.Context, in *ItemIllegalRequest, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := c.cc.Invoke(ctx, "/ItemService/SignAsIllegal", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *itemServiceClient) SetShelveState(ctx context.Context, in *ShelveStateRequest, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := c.cc.Invoke(ctx, "/ItemService/SetShelveState", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *itemServiceClient) GetItemDetailData(ctx context.Context, in *ItemDetailRequest, opts ...grpc.CallOption) (*String, error) {
	out := new(String)
	err := c.cc.Invoke(ctx, "/ItemService/GetItemDetailData", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *itemServiceClient) GetValueGoodsBySaleLabel(ctx context.Context, in *GetItemsByLabelRequest, opts ...grpc.CallOption) (*PagingShopGoodsResponse, error) {
	out := new(PagingShopGoodsResponse)
	err := c.cc.Invoke(ctx, "/ItemService/GetValueGoodsBySaleLabel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *itemServiceClient) GetShopPagedOnShelvesGoods(ctx context.Context, in *PagingShopGoodsRequest, opts ...grpc.CallOption) (*PagingShopGoodsResponse, error) {
	out := new(PagingShopGoodsResponse)
	err := c.cc.Invoke(ctx, "/ItemService/GetShopPagedOnShelvesGoods", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *itemServiceClient) GetPagedOnShelvesItem(ctx context.Context, in *PagingGoodsRequest, opts ...grpc.CallOption) (*PagingGoodsResponse, error) {
	out := new(PagingGoodsResponse)
	err := c.cc.Invoke(ctx, "/ItemService/GetPagedOnShelvesItem", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *itemServiceClient) GetItems(ctx context.Context, in *GetItemsRequest, opts ...grpc.CallOption) (*PagingGoodsResponse, error) {
	out := new(PagingGoodsResponse)
	err := c.cc.Invoke(ctx, "/ItemService/GetItems", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *itemServiceClient) GetWholesalePriceArray(ctx context.Context, in *SkuId, opts ...grpc.CallOption) (*SWsSkuPriceListResponse, error) {
	out := new(SWsSkuPriceListResponse)
	err := c.cc.Invoke(ctx, "/ItemService/GetWholesalePriceArray", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *itemServiceClient) SaveWholesalePrice(ctx context.Context, in *SaveSkuPricesRequest, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := c.cc.Invoke(ctx, "/ItemService/SaveWholesalePrice", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *itemServiceClient) GetWholesaleDiscountArray(ctx context.Context, in *GetWsDiscountRequest, opts ...grpc.CallOption) (*SWsItemDiscountListResponse, error) {
	out := new(SWsItemDiscountListResponse)
	err := c.cc.Invoke(ctx, "/ItemService/GetWholesaleDiscountArray", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *itemServiceClient) SaveWholesaleDiscount(ctx context.Context, in *SaveItemDiscountRequest, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := c.cc.Invoke(ctx, "/ItemService/SaveWholesaleDiscount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *itemServiceClient) GetAllSaleLabels(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*ItemLabelListResponse, error) {
	out := new(ItemLabelListResponse)
	err := c.cc.Invoke(ctx, "/ItemService/GetAllSaleLabels", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *itemServiceClient) GetSaleLabel(ctx context.Context, in *IdOrName, opts ...grpc.CallOption) (*SItemLabel, error) {
	out := new(SItemLabel)
	err := c.cc.Invoke(ctx, "/ItemService/GetSaleLabel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *itemServiceClient) SaveSaleLabel(ctx context.Context, in *SItemLabel, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := c.cc.Invoke(ctx, "/ItemService/SaveSaleLabel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *itemServiceClient) DeleteSaleLabel(ctx context.Context, in *Int64, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := c.cc.Invoke(ctx, "/ItemService/DeleteSaleLabel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *itemServiceClient) GetPagedValueGoodsBySaleLabel_(ctx context.Context, in *SaleLabelItemsRequest_, opts ...grpc.CallOption) (*PagingGoodsResponse, error) {
	out := new(PagingGoodsResponse)
	err := c.cc.Invoke(ctx, "/ItemService/GetPagedValueGoodsBySaleLabel_", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ItemServiceServer is the server API for ItemService service.
type ItemServiceServer interface {
	// 获取商品
	GetItem(context.Context, *Int64) (*SUnifiedViewItem, error)
	// 保存商品
	SaveItem(context.Context, *SUnifiedViewItem) (*Result, error)
	// 根据SKU获取商品
	GetItemBySku(context.Context, *ItemBySkuRequest) (*SUnifiedViewItem, error)
	// 获取商品用于销售的快照和信息
	GetItemSnapshot(context.Context, *Int64) (*SItemSnapshot, error)
	// 获取商品交易快照,参数传递:snapshotId
	GetTradeSnapshot(context.Context, *Int64) (*STradeSnapshot, error)
	// 获取SKU
	GetSku(context.Context, *SkuId) (*SSku, error)
	// 设置商品货架状态
	ReviewItem(context.Context, *ItemReviewRequest) (*Result, error)
	// 保存商品的会员价
	SaveLevelPrices(context.Context, *SaveLevelPriceRequest) (*Result, error)
	// 商品标记为违规
	SignAsIllegal(context.Context, *ItemIllegalRequest) (*Result, error)
	// 设置商品货架状态
	SetShelveState(context.Context, *ShelveStateRequest) (*Result, error)
	// 获取商品详细数据
	GetItemDetailData(context.Context, *ItemDetailRequest) (*String, error)
	// 根据销售标签获取指定数目的商品
	GetValueGoodsBySaleLabel(context.Context, *GetItemsByLabelRequest) (*PagingShopGoodsResponse, error)
	// 获取店铺分页上架的商品
	GetShopPagedOnShelvesGoods(context.Context, *PagingShopGoodsRequest) (*PagingShopGoodsResponse, error)
	// 获取上架商品数据（分页）
	GetPagedOnShelvesItem(context.Context, *PagingGoodsRequest) (*PagingGoodsResponse, error)
	// 获取上架商品数据
	GetItems(context.Context, *GetItemsRequest) (*PagingGoodsResponse, error)
	// 获取批发价格数组
	GetWholesalePriceArray(context.Context, *SkuId) (*SWsSkuPriceListResponse, error)
	// 保存批发价格
	SaveWholesalePrice(context.Context, *SaveSkuPricesRequest) (*Result, error)
	// 获取批发折扣数组
	GetWholesaleDiscountArray(context.Context, *GetWsDiscountRequest) (*SWsItemDiscountListResponse, error)
	// 保存批发折扣
	SaveWholesaleDiscount(context.Context, *SaveItemDiscountRequest) (*Result, error)
	// 获取所有的商品标签
	GetAllSaleLabels(context.Context, *Empty) (*ItemLabelListResponse, error)
	// 获取销售标签
	GetSaleLabel(context.Context, *IdOrName) (*SItemLabel, error)
	// 保存销售标签
	SaveSaleLabel(context.Context, *SItemLabel) (*Result, error)
	// 删除销售标签
	DeleteSaleLabel(context.Context, *Int64) (*Result, error)
	// 根据分页销售标签获取指定数目的商品
	GetPagedValueGoodsBySaleLabel_(context.Context, *SaleLabelItemsRequest_) (*PagingGoodsResponse, error)
}

// UnimplementedItemServiceServer can be embedded to have forward compatible implementations.
type UnimplementedItemServiceServer struct {
}

func (*UnimplementedItemServiceServer) GetItem(context.Context, *Int64) (*SUnifiedViewItem, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetItem not implemented")
}
func (*UnimplementedItemServiceServer) SaveItem(context.Context, *SUnifiedViewItem) (*Result, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SaveItem not implemented")
}
func (*UnimplementedItemServiceServer) GetItemBySku(context.Context, *ItemBySkuRequest) (*SUnifiedViewItem, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetItemBySku not implemented")
}
func (*UnimplementedItemServiceServer) GetItemSnapshot(context.Context, *Int64) (*SItemSnapshot, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetItemSnapshot not implemented")
}
func (*UnimplementedItemServiceServer) GetTradeSnapshot(context.Context, *Int64) (*STradeSnapshot, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTradeSnapshot not implemented")
}
func (*UnimplementedItemServiceServer) GetSku(context.Context, *SkuId) (*SSku, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSku not implemented")
}
func (*UnimplementedItemServiceServer) ReviewItem(context.Context, *ItemReviewRequest) (*Result, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReviewItem not implemented")
}
func (*UnimplementedItemServiceServer) SaveLevelPrices(context.Context, *SaveLevelPriceRequest) (*Result, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SaveLevelPrices not implemented")
}
func (*UnimplementedItemServiceServer) SignAsIllegal(context.Context, *ItemIllegalRequest) (*Result, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SignAsIllegal not implemented")
}
func (*UnimplementedItemServiceServer) SetShelveState(context.Context, *ShelveStateRequest) (*Result, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetShelveState not implemented")
}
func (*UnimplementedItemServiceServer) GetItemDetailData(context.Context, *ItemDetailRequest) (*String, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetItemDetailData not implemented")
}
func (*UnimplementedItemServiceServer) GetValueGoodsBySaleLabel(context.Context, *GetItemsByLabelRequest) (*PagingShopGoodsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetValueGoodsBySaleLabel not implemented")
}
func (*UnimplementedItemServiceServer) GetShopPagedOnShelvesGoods(context.Context, *PagingShopGoodsRequest) (*PagingShopGoodsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetShopPagedOnShelvesGoods not implemented")
}
func (*UnimplementedItemServiceServer) GetPagedOnShelvesItem(context.Context, *PagingGoodsRequest) (*PagingGoodsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPagedOnShelvesItem not implemented")
}
func (*UnimplementedItemServiceServer) GetItems(context.Context, *GetItemsRequest) (*PagingGoodsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetItems not implemented")
}
func (*UnimplementedItemServiceServer) GetWholesalePriceArray(context.Context, *SkuId) (*SWsSkuPriceListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetWholesalePriceArray not implemented")
}
func (*UnimplementedItemServiceServer) SaveWholesalePrice(context.Context, *SaveSkuPricesRequest) (*Result, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SaveWholesalePrice not implemented")
}
func (*UnimplementedItemServiceServer) GetWholesaleDiscountArray(context.Context, *GetWsDiscountRequest) (*SWsItemDiscountListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetWholesaleDiscountArray not implemented")
}
func (*UnimplementedItemServiceServer) SaveWholesaleDiscount(context.Context, *SaveItemDiscountRequest) (*Result, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SaveWholesaleDiscount not implemented")
}
func (*UnimplementedItemServiceServer) GetAllSaleLabels(context.Context, *Empty) (*ItemLabelListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAllSaleLabels not implemented")
}
func (*UnimplementedItemServiceServer) GetSaleLabel(context.Context, *IdOrName) (*SItemLabel, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSaleLabel not implemented")
}
func (*UnimplementedItemServiceServer) SaveSaleLabel(context.Context, *SItemLabel) (*Result, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SaveSaleLabel not implemented")
}
func (*UnimplementedItemServiceServer) DeleteSaleLabel(context.Context, *Int64) (*Result, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteSaleLabel not implemented")
}
func (*UnimplementedItemServiceServer) GetPagedValueGoodsBySaleLabel_(context.Context, *SaleLabelItemsRequest_) (*PagingGoodsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPagedValueGoodsBySaleLabel_ not implemented")
}

func RegisterItemServiceServer(s *grpc.Server, srv ItemServiceServer) {
	s.RegisterService(&_ItemService_serviceDesc, srv)
}

func _ItemService_GetItem_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ItemServiceServer).GetItem(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ItemService/GetItem",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ItemServiceServer).GetItem(ctx, req.(*Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _ItemService_SaveItem_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SUnifiedViewItem)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ItemServiceServer).SaveItem(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ItemService/SaveItem",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ItemServiceServer).SaveItem(ctx, req.(*SUnifiedViewItem))
	}
	return interceptor(ctx, in, info, handler)
}

func _ItemService_GetItemBySku_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ItemBySkuRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ItemServiceServer).GetItemBySku(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ItemService/GetItemBySku",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ItemServiceServer).GetItemBySku(ctx, req.(*ItemBySkuRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ItemService_GetItemSnapshot_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ItemServiceServer).GetItemSnapshot(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ItemService/GetItemSnapshot",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ItemServiceServer).GetItemSnapshot(ctx, req.(*Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _ItemService_GetTradeSnapshot_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ItemServiceServer).GetTradeSnapshot(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ItemService/GetTradeSnapshot",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ItemServiceServer).GetTradeSnapshot(ctx, req.(*Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _ItemService_GetSku_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SkuId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ItemServiceServer).GetSku(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ItemService/GetSku",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ItemServiceServer).GetSku(ctx, req.(*SkuId))
	}
	return interceptor(ctx, in, info, handler)
}

func _ItemService_ReviewItem_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ItemReviewRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ItemServiceServer).ReviewItem(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ItemService/ReviewItem",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ItemServiceServer).ReviewItem(ctx, req.(*ItemReviewRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ItemService_SaveLevelPrices_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SaveLevelPriceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ItemServiceServer).SaveLevelPrices(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ItemService/SaveLevelPrices",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ItemServiceServer).SaveLevelPrices(ctx, req.(*SaveLevelPriceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ItemService_SignAsIllegal_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ItemIllegalRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ItemServiceServer).SignAsIllegal(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ItemService/SignAsIllegal",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ItemServiceServer).SignAsIllegal(ctx, req.(*ItemIllegalRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ItemService_SetShelveState_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ShelveStateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ItemServiceServer).SetShelveState(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ItemService/SetShelveState",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ItemServiceServer).SetShelveState(ctx, req.(*ShelveStateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ItemService_GetItemDetailData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ItemDetailRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ItemServiceServer).GetItemDetailData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ItemService/GetItemDetailData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ItemServiceServer).GetItemDetailData(ctx, req.(*ItemDetailRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ItemService_GetValueGoodsBySaleLabel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetItemsByLabelRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ItemServiceServer).GetValueGoodsBySaleLabel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ItemService/GetValueGoodsBySaleLabel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ItemServiceServer).GetValueGoodsBySaleLabel(ctx, req.(*GetItemsByLabelRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ItemService_GetShopPagedOnShelvesGoods_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PagingShopGoodsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ItemServiceServer).GetShopPagedOnShelvesGoods(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ItemService/GetShopPagedOnShelvesGoods",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ItemServiceServer).GetShopPagedOnShelvesGoods(ctx, req.(*PagingShopGoodsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ItemService_GetPagedOnShelvesItem_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PagingGoodsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ItemServiceServer).GetPagedOnShelvesItem(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ItemService/GetPagedOnShelvesItem",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ItemServiceServer).GetPagedOnShelvesItem(ctx, req.(*PagingGoodsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ItemService_GetItems_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetItemsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ItemServiceServer).GetItems(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ItemService/GetItems",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ItemServiceServer).GetItems(ctx, req.(*GetItemsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ItemService_GetWholesalePriceArray_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SkuId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ItemServiceServer).GetWholesalePriceArray(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ItemService/GetWholesalePriceArray",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ItemServiceServer).GetWholesalePriceArray(ctx, req.(*SkuId))
	}
	return interceptor(ctx, in, info, handler)
}

func _ItemService_SaveWholesalePrice_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SaveSkuPricesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ItemServiceServer).SaveWholesalePrice(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ItemService/SaveWholesalePrice",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ItemServiceServer).SaveWholesalePrice(ctx, req.(*SaveSkuPricesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ItemService_GetWholesaleDiscountArray_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetWsDiscountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ItemServiceServer).GetWholesaleDiscountArray(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ItemService/GetWholesaleDiscountArray",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ItemServiceServer).GetWholesaleDiscountArray(ctx, req.(*GetWsDiscountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ItemService_SaveWholesaleDiscount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SaveItemDiscountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ItemServiceServer).SaveWholesaleDiscount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ItemService/SaveWholesaleDiscount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ItemServiceServer).SaveWholesaleDiscount(ctx, req.(*SaveItemDiscountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ItemService_GetAllSaleLabels_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ItemServiceServer).GetAllSaleLabels(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ItemService/GetAllSaleLabels",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ItemServiceServer).GetAllSaleLabels(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _ItemService_GetSaleLabel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IdOrName)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ItemServiceServer).GetSaleLabel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ItemService/GetSaleLabel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ItemServiceServer).GetSaleLabel(ctx, req.(*IdOrName))
	}
	return interceptor(ctx, in, info, handler)
}

func _ItemService_SaveSaleLabel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SItemLabel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ItemServiceServer).SaveSaleLabel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ItemService/SaveSaleLabel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ItemServiceServer).SaveSaleLabel(ctx, req.(*SItemLabel))
	}
	return interceptor(ctx, in, info, handler)
}

func _ItemService_DeleteSaleLabel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ItemServiceServer).DeleteSaleLabel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ItemService/DeleteSaleLabel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ItemServiceServer).DeleteSaleLabel(ctx, req.(*Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _ItemService_GetPagedValueGoodsBySaleLabel__Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SaleLabelItemsRequest_)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ItemServiceServer).GetPagedValueGoodsBySaleLabel_(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ItemService/GetPagedValueGoodsBySaleLabel_",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ItemServiceServer).GetPagedValueGoodsBySaleLabel_(ctx, req.(*SaleLabelItemsRequest_))
	}
	return interceptor(ctx, in, info, handler)
}

var _ItemService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ItemService",
	HandlerType: (*ItemServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetItem",
			Handler:    _ItemService_GetItem_Handler,
		},
		{
			MethodName: "SaveItem",
			Handler:    _ItemService_SaveItem_Handler,
		},
		{
			MethodName: "GetItemBySku",
			Handler:    _ItemService_GetItemBySku_Handler,
		},
		{
			MethodName: "GetItemSnapshot",
			Handler:    _ItemService_GetItemSnapshot_Handler,
		},
		{
			MethodName: "GetTradeSnapshot",
			Handler:    _ItemService_GetTradeSnapshot_Handler,
		},
		{
			MethodName: "GetSku",
			Handler:    _ItemService_GetSku_Handler,
		},
		{
			MethodName: "ReviewItem",
			Handler:    _ItemService_ReviewItem_Handler,
		},
		{
			MethodName: "SaveLevelPrices",
			Handler:    _ItemService_SaveLevelPrices_Handler,
		},
		{
			MethodName: "SignAsIllegal",
			Handler:    _ItemService_SignAsIllegal_Handler,
		},
		{
			MethodName: "SetShelveState",
			Handler:    _ItemService_SetShelveState_Handler,
		},
		{
			MethodName: "GetItemDetailData",
			Handler:    _ItemService_GetItemDetailData_Handler,
		},
		{
			MethodName: "GetValueGoodsBySaleLabel",
			Handler:    _ItemService_GetValueGoodsBySaleLabel_Handler,
		},
		{
			MethodName: "GetShopPagedOnShelvesGoods",
			Handler:    _ItemService_GetShopPagedOnShelvesGoods_Handler,
		},
		{
			MethodName: "GetPagedOnShelvesItem",
			Handler:    _ItemService_GetPagedOnShelvesItem_Handler,
		},
		{
			MethodName: "GetItems",
			Handler:    _ItemService_GetItems_Handler,
		},
		{
			MethodName: "GetWholesalePriceArray",
			Handler:    _ItemService_GetWholesalePriceArray_Handler,
		},
		{
			MethodName: "SaveWholesalePrice",
			Handler:    _ItemService_SaveWholesalePrice_Handler,
		},
		{
			MethodName: "GetWholesaleDiscountArray",
			Handler:    _ItemService_GetWholesaleDiscountArray_Handler,
		},
		{
			MethodName: "SaveWholesaleDiscount",
			Handler:    _ItemService_SaveWholesaleDiscount_Handler,
		},
		{
			MethodName: "GetAllSaleLabels",
			Handler:    _ItemService_GetAllSaleLabels_Handler,
		},
		{
			MethodName: "GetSaleLabel",
			Handler:    _ItemService_GetSaleLabel_Handler,
		},
		{
			MethodName: "SaveSaleLabel",
			Handler:    _ItemService_SaveSaleLabel_Handler,
		},
		{
			MethodName: "DeleteSaleLabel",
			Handler:    _ItemService_DeleteSaleLabel_Handler,
		},
		{
			MethodName: "GetPagedValueGoodsBySaleLabel_",
			Handler:    _ItemService_GetPagedValueGoodsBySaleLabel__Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "item_service.proto",
}
