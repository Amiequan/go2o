// Code generated by protoc-gen-go. DO NOT EDIT.
// source: finance_service.proto

package proto // import "./"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type TransferInRequest struct {
	PersonId             int64    `protobuf:"zigzag64,1,opt,name=person_id,json=personId,proto3" json:"person_id"`
	TransferWith         int32    `protobuf:"zigzag32,2,opt,name=transferWith,proto3" json:"transferWith"`
	Amount               float64  `protobuf:"fixed64,3,opt,name=amount,proto3" json:"amount"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TransferInRequest) Reset()         { *m = TransferInRequest{} }
func (m *TransferInRequest) String() string { return proto.CompactTextString(m) }
func (*TransferInRequest) ProtoMessage()    {}
func (*TransferInRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_finance_service_0dc0d8c8f81c9a3d, []int{0}
}
func (m *TransferInRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TransferInRequest.Unmarshal(m, b)
}
func (m *TransferInRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TransferInRequest.Marshal(b, m, deterministic)
}
func (dst *TransferInRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransferInRequest.Merge(dst, src)
}
func (m *TransferInRequest) XXX_Size() int {
	return xxx_messageInfo_TransferInRequest.Size(m)
}
func (m *TransferInRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TransferInRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TransferInRequest proto.InternalMessageInfo

func (m *TransferInRequest) GetPersonId() int64 {
	if m != nil {
		return m.PersonId
	}
	return 0
}

func (m *TransferInRequest) GetTransferWith() int32 {
	if m != nil {
		return m.TransferWith
	}
	return 0
}

func (m *TransferInRequest) GetAmount() float64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

type PersonId struct {
	Value                int64    `protobuf:"varint,1,opt,name=value,proto3" json:"value"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PersonId) Reset()         { *m = PersonId{} }
func (m *PersonId) String() string { return proto.CompactTextString(m) }
func (*PersonId) ProtoMessage()    {}
func (*PersonId) Descriptor() ([]byte, []int) {
	return fileDescriptor_finance_service_0dc0d8c8f81c9a3d, []int{1}
}
func (m *PersonId) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PersonId.Unmarshal(m, b)
}
func (m *PersonId) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PersonId.Marshal(b, m, deterministic)
}
func (dst *PersonId) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PersonId.Merge(dst, src)
}
func (m *PersonId) XXX_Size() int {
	return xxx_messageInfo_PersonId.Size(m)
}
func (m *PersonId) XXX_DiscardUnknown() {
	xxx_messageInfo_PersonId.DiscardUnknown(m)
}

var xxx_messageInfo_PersonId proto.InternalMessageInfo

func (m *PersonId) GetValue() int64 {
	if m != nil {
		return m.Value
	}
	return 0
}

// 收益总记录
type SRiseInfo struct {
	// 人员编号
	PersonId int64 `protobuf:"varint,1,opt,name=Person_id,json=PersonId,proto3" json:"Person_id"`
	// 本金及收益的余额
	Balance float64 `protobuf:"fixed64,2,opt,name=Balance,proto3" json:"Balance"`
	// 结算金额
	SettlementAmount float64 `protobuf:"fixed64,3,opt,name=SettlementAmount,proto3" json:"SettlementAmount"`
	// 当前的收益
	Rise float64 `protobuf:"fixed64,4,opt,name=Rise,proto3" json:"Rise"`
	// 今日转入
	TransferIn float64 `protobuf:"fixed64,5,opt,name=TransferIn,proto3" json:"TransferIn"`
	// 总金额
	TotalAmount float64 `protobuf:"fixed64,6,opt,name=TotalAmount,proto3" json:"TotalAmount"`
	// 总收益
	TotalRise float64 `protobuf:"fixed64,7,opt,name=TotalRise,proto3" json:"TotalRise"`
	// 结算日期,用于筛选需要结算的数据
	SettledDate int64 `protobuf:"varint,8,opt,name=SettledDate,proto3" json:"SettledDate"`
	// 更新时间
	UpdateTime           int64    `protobuf:"varint,9,opt,name=UpdateTime,proto3" json:"UpdateTime"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SRiseInfo) Reset()         { *m = SRiseInfo{} }
func (m *SRiseInfo) String() string { return proto.CompactTextString(m) }
func (*SRiseInfo) ProtoMessage()    {}
func (*SRiseInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_finance_service_0dc0d8c8f81c9a3d, []int{2}
}
func (m *SRiseInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SRiseInfo.Unmarshal(m, b)
}
func (m *SRiseInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SRiseInfo.Marshal(b, m, deterministic)
}
func (dst *SRiseInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SRiseInfo.Merge(dst, src)
}
func (m *SRiseInfo) XXX_Size() int {
	return xxx_messageInfo_SRiseInfo.Size(m)
}
func (m *SRiseInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_SRiseInfo.DiscardUnknown(m)
}

var xxx_messageInfo_SRiseInfo proto.InternalMessageInfo

func (m *SRiseInfo) GetPersonId() int64 {
	if m != nil {
		return m.PersonId
	}
	return 0
}

func (m *SRiseInfo) GetBalance() float64 {
	if m != nil {
		return m.Balance
	}
	return 0
}

func (m *SRiseInfo) GetSettlementAmount() float64 {
	if m != nil {
		return m.SettlementAmount
	}
	return 0
}

func (m *SRiseInfo) GetRise() float64 {
	if m != nil {
		return m.Rise
	}
	return 0
}

func (m *SRiseInfo) GetTransferIn() float64 {
	if m != nil {
		return m.TransferIn
	}
	return 0
}

func (m *SRiseInfo) GetTotalAmount() float64 {
	if m != nil {
		return m.TotalAmount
	}
	return 0
}

func (m *SRiseInfo) GetTotalRise() float64 {
	if m != nil {
		return m.TotalRise
	}
	return 0
}

func (m *SRiseInfo) GetSettledDate() int64 {
	if m != nil {
		return m.SettledDate
	}
	return 0
}

func (m *SRiseInfo) GetUpdateTime() int64 {
	if m != nil {
		return m.UpdateTime
	}
	return 0
}

type RiseSettleRequest struct {
	PersonId             int64    `protobuf:"varint,1,opt,name=Person_id,json=PersonId,proto3" json:"Person_id"`
	SettleDay            int64    `protobuf:"varint,2,opt,name=SettleDay,proto3" json:"SettleDay"`
	Ratio                float64  `protobuf:"fixed64,3,opt,name=Ratio,proto3" json:"Ratio"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RiseSettleRequest) Reset()         { *m = RiseSettleRequest{} }
func (m *RiseSettleRequest) String() string { return proto.CompactTextString(m) }
func (*RiseSettleRequest) ProtoMessage()    {}
func (*RiseSettleRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_finance_service_0dc0d8c8f81c9a3d, []int{3}
}
func (m *RiseSettleRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RiseSettleRequest.Unmarshal(m, b)
}
func (m *RiseSettleRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RiseSettleRequest.Marshal(b, m, deterministic)
}
func (dst *RiseSettleRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RiseSettleRequest.Merge(dst, src)
}
func (m *RiseSettleRequest) XXX_Size() int {
	return xxx_messageInfo_RiseSettleRequest.Size(m)
}
func (m *RiseSettleRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RiseSettleRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RiseSettleRequest proto.InternalMessageInfo

func (m *RiseSettleRequest) GetPersonId() int64 {
	if m != nil {
		return m.PersonId
	}
	return 0
}

func (m *RiseSettleRequest) GetSettleDay() int64 {
	if m != nil {
		return m.SettleDay
	}
	return 0
}

func (m *RiseSettleRequest) GetRatio() float64 {
	if m != nil {
		return m.Ratio
	}
	return 0
}

type RiseTransferOutRequest struct {
	PersonId     int64   `protobuf:"varint,1,opt,name=Person_id,json=PersonId,proto3" json:"Person_id"`
	TransferWith int64   `protobuf:"varint,2,opt,name=TransferWith,proto3" json:"TransferWith"`
	Amount       float64 `protobuf:"fixed64,3,opt,name=amount,proto3" json:"amount"`
	// 提现银行账号
	BankAccountNo        string   `protobuf:"bytes,4,opt,name=BankAccountNo,proto3" json:"BankAccountNo"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RiseTransferOutRequest) Reset()         { *m = RiseTransferOutRequest{} }
func (m *RiseTransferOutRequest) String() string { return proto.CompactTextString(m) }
func (*RiseTransferOutRequest) ProtoMessage()    {}
func (*RiseTransferOutRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_finance_service_0dc0d8c8f81c9a3d, []int{4}
}
func (m *RiseTransferOutRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RiseTransferOutRequest.Unmarshal(m, b)
}
func (m *RiseTransferOutRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RiseTransferOutRequest.Marshal(b, m, deterministic)
}
func (dst *RiseTransferOutRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RiseTransferOutRequest.Merge(dst, src)
}
func (m *RiseTransferOutRequest) XXX_Size() int {
	return xxx_messageInfo_RiseTransferOutRequest.Size(m)
}
func (m *RiseTransferOutRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RiseTransferOutRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RiseTransferOutRequest proto.InternalMessageInfo

func (m *RiseTransferOutRequest) GetPersonId() int64 {
	if m != nil {
		return m.PersonId
	}
	return 0
}

func (m *RiseTransferOutRequest) GetTransferWith() int64 {
	if m != nil {
		return m.TransferWith
	}
	return 0
}

func (m *RiseTransferOutRequest) GetAmount() float64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *RiseTransferOutRequest) GetBankAccountNo() string {
	if m != nil {
		return m.BankAccountNo
	}
	return ""
}

type CommitTransferRequest struct {
	PersonId             int64    `protobuf:"varint,1,opt,name=Person_id,json=PersonId,proto3" json:"Person_id"`
	LogId                int64    `protobuf:"varint,2,opt,name=Log_id,json=LogId,proto3" json:"Log_id"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CommitTransferRequest) Reset()         { *m = CommitTransferRequest{} }
func (m *CommitTransferRequest) String() string { return proto.CompactTextString(m) }
func (*CommitTransferRequest) ProtoMessage()    {}
func (*CommitTransferRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_finance_service_0dc0d8c8f81c9a3d, []int{5}
}
func (m *CommitTransferRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommitTransferRequest.Unmarshal(m, b)
}
func (m *CommitTransferRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommitTransferRequest.Marshal(b, m, deterministic)
}
func (dst *CommitTransferRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommitTransferRequest.Merge(dst, src)
}
func (m *CommitTransferRequest) XXX_Size() int {
	return xxx_messageInfo_CommitTransferRequest.Size(m)
}
func (m *CommitTransferRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CommitTransferRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CommitTransferRequest proto.InternalMessageInfo

func (m *CommitTransferRequest) GetPersonId() int64 {
	if m != nil {
		return m.PersonId
	}
	return 0
}

func (m *CommitTransferRequest) GetLogId() int64 {
	if m != nil {
		return m.LogId
	}
	return 0
}

func init() {
	proto.RegisterType((*TransferInRequest)(nil), "TransferInRequest")
	proto.RegisterType((*PersonId)(nil), "PersonId")
	proto.RegisterType((*SRiseInfo)(nil), "SRiseInfo")
	proto.RegisterType((*RiseSettleRequest)(nil), "RiseSettleRequest")
	proto.RegisterType((*RiseTransferOutRequest)(nil), "RiseTransferOutRequest")
	proto.RegisterType((*CommitTransferRequest)(nil), "CommitTransferRequest")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// FinanceServiceClient is the client API for FinanceService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type FinanceServiceClient interface {
	// 获取用户的账户信息
	GetRiseInfo(ctx context.Context, in *PersonId, opts ...grpc.CallOption) (*SRiseInfo, error)
	// 转入
	RiseTransferIn(ctx context.Context, in *TransferInRequest, opts ...grpc.CallOption) (*Result, error)
	// 转出
	RiseTransferOut(ctx context.Context, in *RiseTransferOutRequest, opts ...grpc.CallOption) (*Result, error)
	// 结算收益(按日期每天结息)
	RiseSettleByDay(ctx context.Context, in *RiseSettleRequest, opts ...grpc.CallOption) (*Result, error)
	// 提交转入/转出日志
	CommitTransfer(ctx context.Context, in *CommitTransferRequest, opts ...grpc.CallOption) (*Result, error)
	// 开通增利服务
	OpenRiseService(ctx context.Context, in *PersonId, opts ...grpc.CallOption) (*Result, error)
}

type financeServiceClient struct {
	cc *grpc.ClientConn
}

func NewFinanceServiceClient(cc *grpc.ClientConn) FinanceServiceClient {
	return &financeServiceClient{cc}
}

func (c *financeServiceClient) GetRiseInfo(ctx context.Context, in *PersonId, opts ...grpc.CallOption) (*SRiseInfo, error) {
	out := new(SRiseInfo)
	err := c.cc.Invoke(ctx, "/FinanceService/GetRiseInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *financeServiceClient) RiseTransferIn(ctx context.Context, in *TransferInRequest, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := c.cc.Invoke(ctx, "/FinanceService/RiseTransferIn", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *financeServiceClient) RiseTransferOut(ctx context.Context, in *RiseTransferOutRequest, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := c.cc.Invoke(ctx, "/FinanceService/RiseTransferOut", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *financeServiceClient) RiseSettleByDay(ctx context.Context, in *RiseSettleRequest, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := c.cc.Invoke(ctx, "/FinanceService/RiseSettleByDay", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *financeServiceClient) CommitTransfer(ctx context.Context, in *CommitTransferRequest, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := c.cc.Invoke(ctx, "/FinanceService/CommitTransfer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *financeServiceClient) OpenRiseService(ctx context.Context, in *PersonId, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := c.cc.Invoke(ctx, "/FinanceService/OpenRiseService", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// FinanceServiceServer is the server API for FinanceService service.
type FinanceServiceServer interface {
	// 获取用户的账户信息
	GetRiseInfo(context.Context, *PersonId) (*SRiseInfo, error)
	// 转入
	RiseTransferIn(context.Context, *TransferInRequest) (*Result, error)
	// 转出
	RiseTransferOut(context.Context, *RiseTransferOutRequest) (*Result, error)
	// 结算收益(按日期每天结息)
	RiseSettleByDay(context.Context, *RiseSettleRequest) (*Result, error)
	// 提交转入/转出日志
	CommitTransfer(context.Context, *CommitTransferRequest) (*Result, error)
	// 开通增利服务
	OpenRiseService(context.Context, *PersonId) (*Result, error)
}

func RegisterFinanceServiceServer(s *grpc.Server, srv FinanceServiceServer) {
	s.RegisterService(&_FinanceService_serviceDesc, srv)
}

func _FinanceService_GetRiseInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PersonId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FinanceServiceServer).GetRiseInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/FinanceService/GetRiseInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FinanceServiceServer).GetRiseInfo(ctx, req.(*PersonId))
	}
	return interceptor(ctx, in, info, handler)
}

func _FinanceService_RiseTransferIn_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TransferInRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FinanceServiceServer).RiseTransferIn(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/FinanceService/RiseTransferIn",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FinanceServiceServer).RiseTransferIn(ctx, req.(*TransferInRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FinanceService_RiseTransferOut_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RiseTransferOutRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FinanceServiceServer).RiseTransferOut(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/FinanceService/RiseTransferOut",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FinanceServiceServer).RiseTransferOut(ctx, req.(*RiseTransferOutRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FinanceService_RiseSettleByDay_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RiseSettleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FinanceServiceServer).RiseSettleByDay(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/FinanceService/RiseSettleByDay",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FinanceServiceServer).RiseSettleByDay(ctx, req.(*RiseSettleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FinanceService_CommitTransfer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CommitTransferRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FinanceServiceServer).CommitTransfer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/FinanceService/CommitTransfer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FinanceServiceServer).CommitTransfer(ctx, req.(*CommitTransferRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FinanceService_OpenRiseService_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PersonId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FinanceServiceServer).OpenRiseService(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/FinanceService/OpenRiseService",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FinanceServiceServer).OpenRiseService(ctx, req.(*PersonId))
	}
	return interceptor(ctx, in, info, handler)
}

var _FinanceService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "FinanceService",
	HandlerType: (*FinanceServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetRiseInfo",
			Handler:    _FinanceService_GetRiseInfo_Handler,
		},
		{
			MethodName: "RiseTransferIn",
			Handler:    _FinanceService_RiseTransferIn_Handler,
		},
		{
			MethodName: "RiseTransferOut",
			Handler:    _FinanceService_RiseTransferOut_Handler,
		},
		{
			MethodName: "RiseSettleByDay",
			Handler:    _FinanceService_RiseSettleByDay_Handler,
		},
		{
			MethodName: "CommitTransfer",
			Handler:    _FinanceService_CommitTransfer_Handler,
		},
		{
			MethodName: "OpenRiseService",
			Handler:    _FinanceService_OpenRiseService_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "finance_service.proto",
}

func init() {
	proto.RegisterFile("finance_service.proto", fileDescriptor_finance_service_0dc0d8c8f81c9a3d)
}

var fileDescriptor_finance_service_0dc0d8c8f81c9a3d = []byte{
	// 539 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x54, 0xdd, 0x6e, 0x13, 0x3d,
	0x10, 0xed, 0x26, 0xcd, 0xcf, 0x4e, 0xf3, 0xa5, 0x5f, 0x0c, 0x09, 0xab, 0x50, 0x41, 0x64, 0x21,
	0x88, 0xb8, 0x70, 0x51, 0x2b, 0xae, 0xb8, 0x6a, 0xa8, 0x40, 0x11, 0x15, 0xad, 0x9c, 0x20, 0x24,
	0x6e, 0x2a, 0x67, 0xd7, 0x49, 0x57, 0xec, 0xda, 0x61, 0xd7, 0x5b, 0xa9, 0x4f, 0xc2, 0x0b, 0xf0,
	0x00, 0x3c, 0x22, 0xb2, 0x9d, 0x34, 0xde, 0xa6, 0x95, 0x7a, 0x95, 0xcc, 0xb1, 0xe7, 0xcc, 0x99,
	0x33, 0xe3, 0x85, 0xee, 0x3c, 0x16, 0x4c, 0x84, 0xfc, 0x32, 0xe7, 0xd9, 0x75, 0x1c, 0x72, 0xb2,
	0xcc, 0xa4, 0x92, 0xfd, 0xd6, 0x22, 0x91, 0x33, 0x96, 0xd8, 0x08, 0x27, 0xd0, 0x99, 0x66, 0x4c,
	0xe4, 0x73, 0x9e, 0x8d, 0x05, 0xe5, 0xbf, 0x0a, 0x9e, 0x2b, 0xf4, 0x1c, 0xfc, 0x25, 0xcf, 0x72,
	0x29, 0x2e, 0xe3, 0x28, 0xf0, 0x06, 0xde, 0x10, 0xd1, 0xa6, 0x05, 0xc6, 0x11, 0xc2, 0xd0, 0x52,
	0xab, 0x8c, 0xef, 0xb1, 0xba, 0x0a, 0x2a, 0x03, 0x6f, 0xd8, 0xa1, 0x25, 0x0c, 0xf5, 0xa0, 0xce,
	0x52, 0x59, 0x08, 0x15, 0x54, 0x07, 0xde, 0xd0, 0xa3, 0xab, 0x08, 0x0f, 0xa0, 0x79, 0xb1, 0xe6,
	0x79, 0x0a, 0xb5, 0x6b, 0x96, 0x14, 0xdc, 0x14, 0xa8, 0x52, 0x1b, 0xe0, 0x3f, 0x15, 0xf0, 0x27,
	0x34, 0xce, 0xf9, 0x58, 0xcc, 0xa5, 0x16, 0x72, 0x51, 0x12, 0x52, 0xa5, 0x1b, 0x82, 0x00, 0x1a,
	0x23, 0x96, 0xe8, 0x0e, 0x8d, 0x06, 0x8f, 0xae, 0x43, 0xf4, 0x16, 0xfe, 0x9f, 0x70, 0xa5, 0x12,
	0x9e, 0x72, 0xa1, 0x4e, 0x5c, 0x21, 0x5b, 0x38, 0x42, 0xb0, 0xab, 0xcb, 0x05, 0xbb, 0xe6, 0xdc,
	0xfc, 0x47, 0x2f, 0x00, 0x36, 0xa6, 0x04, 0x35, 0x73, 0xe2, 0x20, 0x68, 0x00, 0x7b, 0x53, 0xa9,
	0x58, 0xb2, 0xa2, 0xae, 0x9b, 0x0b, 0x2e, 0x84, 0x0e, 0xc0, 0x37, 0xa1, 0xa1, 0x6e, 0x98, 0xf3,
	0x0d, 0xa0, 0xf3, 0xad, 0x8e, 0xe8, 0x94, 0x29, 0x1e, 0x34, 0x4d, 0x63, 0x2e, 0xa4, 0x15, 0x7c,
	0x5b, 0x46, 0x4c, 0xf1, 0x69, 0x9c, 0xf2, 0xc0, 0x37, 0x17, 0x1c, 0x04, 0x47, 0xd0, 0xd1, 0x4c,
	0x36, 0xc5, 0x19, 0xdb, 0xc3, 0x6e, 0x1d, 0x80, 0x6f, 0x6f, 0x9f, 0xb2, 0x1b, 0xe3, 0x57, 0x95,
	0x6e, 0x00, 0x3d, 0x0c, 0xca, 0x54, 0x2c, 0x57, 0x36, 0xd9, 0x00, 0xff, 0xf6, 0xa0, 0xa7, 0xcb,
	0xac, 0x5b, 0x3f, 0x2f, 0xd4, 0xa3, 0x6a, 0x61, 0x68, 0x4d, 0xef, 0xae, 0x48, 0x95, 0x96, 0xb0,
	0x87, 0x56, 0x04, 0xbd, 0x82, 0xff, 0x46, 0x4c, 0xfc, 0x3c, 0x09, 0x43, 0x1d, 0x7e, 0x95, 0x66,
	0x30, 0x3e, 0x2d, 0x83, 0xf8, 0x0b, 0x74, 0x3f, 0xca, 0x34, 0x8d, 0xd5, 0x9a, 0xf3, 0x51, 0xba,
	0xba, 0x50, 0x3f, 0x93, 0x0b, 0x7d, 0x62, 0x15, 0xd5, 0xce, 0xe4, 0x62, 0x1c, 0x1d, 0xfd, 0xad,
	0x40, 0xfb, 0x93, 0x7d, 0x2b, 0x13, 0xfb, 0x54, 0xd0, 0x6b, 0xd8, 0xfb, 0xcc, 0xd5, 0xed, 0x1e,
	0xfa, 0x64, 0xcd, 0xd1, 0x07, 0x72, 0xbb, 0x9e, 0x78, 0x07, 0x1d, 0x42, 0xdb, 0x35, 0x68, 0x2c,
	0x10, 0x22, 0x5b, 0xef, 0xa9, 0xdf, 0x20, 0x94, 0xe7, 0x45, 0xa2, 0xf0, 0x0e, 0x7a, 0x0f, 0xfb,
	0x77, 0x1c, 0x45, 0xcf, 0xc8, 0xfd, 0x1e, 0xbb, 0x69, 0xef, 0x6c, 0x9a, 0x1d, 0xd8, 0xe8, 0x46,
	0x8f, 0x0c, 0x91, 0xad, 0x0d, 0x70, 0x33, 0x8e, 0xa1, 0x5d, 0x76, 0x08, 0xf5, 0xc8, 0xbd, 0x96,
	0xb9, 0x49, 0x6f, 0x60, 0xff, 0x7c, 0xc9, 0x85, 0x25, 0xb6, 0x4e, 0x38, 0xad, 0x6f, 0x2e, 0x8e,
	0x5e, 0xc2, 0x93, 0x50, 0xa6, 0x64, 0x11, 0xab, 0xab, 0x62, 0x46, 0x16, 0xf2, 0x48, 0x92, 0x6c,
	0x19, 0xfe, 0x68, 0x92, 0xc3, 0x0f, 0xe6, 0xbb, 0x32, 0xab, 0x9b, 0x9f, 0xe3, 0x7f, 0x01, 0x00,
	0x00, 0xff, 0xff, 0x1b, 0xe6, 0x8c, 0xdb, 0x85, 0x04, 0x00, 0x00,
}
