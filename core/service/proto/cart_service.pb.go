// Code generated by protoc-gen-go. DO NOT EDIT.
// source: cart_service.proto

package proto // import "."

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CartServiceClient is the client API for CartService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CartServiceClient interface {
	// 批发购物车接口
	WholesaleCartV1(ctx context.Context, in *WsCartRequest, opts ...grpc.CallOption) (*Result, error)
	// 普通购物车接口
	NormalCartV1(ctx context.Context, in *NormalCartRequest, opts ...grpc.CallOption) (*Result, error)
}

type cartServiceClient struct {
	cc *grpc.ClientConn
}

func NewCartServiceClient(cc *grpc.ClientConn) CartServiceClient {
	return &cartServiceClient{cc}
}

func (c *cartServiceClient) WholesaleCartV1(ctx context.Context, in *WsCartRequest, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := c.cc.Invoke(ctx, "/CartService/WholesaleCartV1", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cartServiceClient) NormalCartV1(ctx context.Context, in *NormalCartRequest, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := c.cc.Invoke(ctx, "/CartService/NormalCartV1", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CartServiceServer is the server API for CartService service.
type CartServiceServer interface {
	// 批发购物车接口
	WholesaleCartV1(context.Context, *WsCartRequest) (*Result, error)
	// 普通购物车接口
	NormalCartV1(context.Context, *NormalCartRequest) (*Result, error)
}

func RegisterCartServiceServer(s *grpc.Server, srv CartServiceServer) {
	s.RegisterService(&_CartService_serviceDesc, srv)
}

func _CartService_WholesaleCartV1_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WsCartRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CartServiceServer).WholesaleCartV1(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/CartService/WholesaleCartV1",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CartServiceServer).WholesaleCartV1(ctx, req.(*WsCartRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CartService_NormalCartV1_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NormalCartRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CartServiceServer).NormalCartV1(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/CartService/NormalCartV1",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CartServiceServer).NormalCartV1(ctx, req.(*NormalCartRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _CartService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "CartService",
	HandlerType: (*CartServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "WholesaleCartV1",
			Handler:    _CartService_WholesaleCartV1_Handler,
		},
		{
			MethodName: "NormalCartV1",
			Handler:    _CartService_NormalCartV1_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "cart_service.proto",
}

func init() { proto.RegisterFile("cart_service.proto", fileDescriptor_cart_service_8940db17a9181bd2) }

var fileDescriptor_cart_service_8940db17a9181bd2 = []byte{
	// 150 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x4a, 0x4e, 0x2c, 0x2a,
	0x89, 0x2f, 0x4e, 0x2d, 0x2a, 0xcb, 0x4c, 0x4e, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x97, 0xe2,
	0x49, 0xcf, 0xc9, 0x4f, 0x4a, 0xcc, 0x81, 0xf2, 0x84, 0x72, 0x53, 0x8b, 0x8b, 0x13, 0xd3, 0x53,
	0xf5, 0x41, 0x2a, 0x21, 0x62, 0x46, 0x59, 0x5c, 0xdc, 0xce, 0x89, 0x45, 0x25, 0xc1, 0x10, 0x6d,
	0x42, 0x3a, 0x5c, 0xfc, 0xe1, 0x19, 0xf9, 0x39, 0xa9, 0xc5, 0x89, 0x39, 0xa9, 0x20, 0xf1, 0x30,
	0x43, 0x21, 0x3e, 0xbd, 0xf0, 0x62, 0x10, 0x33, 0x28, 0xb5, 0xb0, 0x34, 0xb5, 0xb8, 0x44, 0x8a,
	0x5d, 0x2f, 0x28, 0xb5, 0xb8, 0x34, 0xa7, 0x44, 0x89, 0x41, 0x48, 0x97, 0x8b, 0xc7, 0x2f, 0xbf,
	0x28, 0x37, 0x31, 0x07, 0xaa, 0x54, 0x48, 0x0f, 0xc1, 0xc5, 0x54, 0xee, 0xc4, 0x19, 0xc5, 0xae,
	0x67, 0x0d, 0xb6, 0x36, 0x89, 0x0d, 0x4c, 0x19, 0x03, 0x02, 0x00, 0x00, 0xff, 0xff, 0x35, 0x77,
	0xa4, 0xb2, 0xb5, 0x00, 0x00, 0x00,
}
