// Code generated by protoc-gen-go. DO NOT EDIT.
// source: 2.rbac_service.proto

package proto // import "."

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type RoleId struct {
	Value                int64    `protobuf:"varint,1,opt,name=Value,proto3" json:"Value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RoleId) Reset()         { *m = RoleId{} }
func (m *RoleId) String() string { return proto.CompactTextString(m) }
func (*RoleId) ProtoMessage()    {}
func (*RoleId) Descriptor() ([]byte, []int) {
	return fileDescriptor_2_rbac_service_f553a45a5377b596, []int{0}
}
func (m *RoleId) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RoleId.Unmarshal(m, b)
}
func (m *RoleId) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RoleId.Marshal(b, m, deterministic)
}
func (dst *RoleId) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RoleId.Merge(dst, src)
}
func (m *RoleId) XXX_Size() int {
	return xxx_messageInfo_RoleId.Size(m)
}
func (m *RoleId) XXX_DiscardUnknown() {
	xxx_messageInfo_RoleId.DiscardUnknown(m)
}

var xxx_messageInfo_RoleId proto.InternalMessageInfo

func (m *RoleId) GetValue() int64 {
	if m != nil {
		return m.Value
	}
	return 0
}

type UserId struct {
	Value                int64    `protobuf:"varint,1,opt,name=Value,proto3" json:"Value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserId) Reset()         { *m = UserId{} }
func (m *UserId) String() string { return proto.CompactTextString(m) }
func (*UserId) ProtoMessage()    {}
func (*UserId) Descriptor() ([]byte, []int) {
	return fileDescriptor_2_rbac_service_f553a45a5377b596, []int{1}
}
func (m *UserId) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserId.Unmarshal(m, b)
}
func (m *UserId) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserId.Marshal(b, m, deterministic)
}
func (dst *UserId) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserId.Merge(dst, src)
}
func (m *UserId) XXX_Size() int {
	return xxx_messageInfo_UserId.Size(m)
}
func (m *UserId) XXX_DiscardUnknown() {
	xxx_messageInfo_UserId.DiscardUnknown(m)
}

var xxx_messageInfo_UserId proto.InternalMessageInfo

func (m *UserId) GetValue() int64 {
	if m != nil {
		return m.Value
	}
	return 0
}

type RbacTree struct {
	Id                   int64       `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string      `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Pid                  int64       `protobuf:"varint,3,opt,name=pid,proto3" json:"pid,omitempty"`
	Children             []*RbacTree `protobuf:"bytes,4,rep,name=Children,proto3" json:"Children,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *RbacTree) Reset()         { *m = RbacTree{} }
func (m *RbacTree) String() string { return proto.CompactTextString(m) }
func (*RbacTree) ProtoMessage()    {}
func (*RbacTree) Descriptor() ([]byte, []int) {
	return fileDescriptor_2_rbac_service_f553a45a5377b596, []int{2}
}
func (m *RbacTree) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RbacTree.Unmarshal(m, b)
}
func (m *RbacTree) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RbacTree.Marshal(b, m, deterministic)
}
func (dst *RbacTree) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RbacTree.Merge(dst, src)
}
func (m *RbacTree) XXX_Size() int {
	return xxx_messageInfo_RbacTree.Size(m)
}
func (m *RbacTree) XXX_DiscardUnknown() {
	xxx_messageInfo_RbacTree.DiscardUnknown(m)
}

var xxx_messageInfo_RbacTree proto.InternalMessageInfo

func (m *RbacTree) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *RbacTree) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *RbacTree) GetPid() int64 {
	if m != nil {
		return m.Pid
	}
	return 0
}

func (m *RbacTree) GetChildren() []*RbacTree {
	if m != nil {
		return m.Children
	}
	return nil
}

type SavePermDeptRequest struct {
	// * ID
	Id int64 `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	// * 名称
	Name string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	// * 上级部门
	Pid int64 `protobuf:"varint,3,opt,name=Pid,proto3" json:"Pid,omitempty"`
	// * 状态
	Enabled int32 `protobuf:"varint,4,opt,name=Enabled,proto3" json:"Enabled,omitempty"`
	// * 创建日期
	CreateTime           int64    `protobuf:"varint,5,opt,name=CreateTime,proto3" json:"CreateTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SavePermDeptRequest) Reset()         { *m = SavePermDeptRequest{} }
func (m *SavePermDeptRequest) String() string { return proto.CompactTextString(m) }
func (*SavePermDeptRequest) ProtoMessage()    {}
func (*SavePermDeptRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2_rbac_service_f553a45a5377b596, []int{3}
}
func (m *SavePermDeptRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SavePermDeptRequest.Unmarshal(m, b)
}
func (m *SavePermDeptRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SavePermDeptRequest.Marshal(b, m, deterministic)
}
func (dst *SavePermDeptRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SavePermDeptRequest.Merge(dst, src)
}
func (m *SavePermDeptRequest) XXX_Size() int {
	return xxx_messageInfo_SavePermDeptRequest.Size(m)
}
func (m *SavePermDeptRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SavePermDeptRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SavePermDeptRequest proto.InternalMessageInfo

func (m *SavePermDeptRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *SavePermDeptRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SavePermDeptRequest) GetPid() int64 {
	if m != nil {
		return m.Pid
	}
	return 0
}

func (m *SavePermDeptRequest) GetEnabled() int32 {
	if m != nil {
		return m.Enabled
	}
	return 0
}

func (m *SavePermDeptRequest) GetCreateTime() int64 {
	if m != nil {
		return m.CreateTime
	}
	return 0
}

type SavePermDeptResponse struct {
	ErrCode              int64    `protobuf:"varint,1,opt,name=ErrCode,proto3" json:"ErrCode,omitempty"`
	ErrMsg               string   `protobuf:"bytes,2,opt,name=ErrMsg,proto3" json:"ErrMsg,omitempty"`
	Id                   int64    `protobuf:"varint,3,opt,name=Id,proto3" json:"Id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SavePermDeptResponse) Reset()         { *m = SavePermDeptResponse{} }
func (m *SavePermDeptResponse) String() string { return proto.CompactTextString(m) }
func (*SavePermDeptResponse) ProtoMessage()    {}
func (*SavePermDeptResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2_rbac_service_f553a45a5377b596, []int{4}
}
func (m *SavePermDeptResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SavePermDeptResponse.Unmarshal(m, b)
}
func (m *SavePermDeptResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SavePermDeptResponse.Marshal(b, m, deterministic)
}
func (dst *SavePermDeptResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SavePermDeptResponse.Merge(dst, src)
}
func (m *SavePermDeptResponse) XXX_Size() int {
	return xxx_messageInfo_SavePermDeptResponse.Size(m)
}
func (m *SavePermDeptResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SavePermDeptResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SavePermDeptResponse proto.InternalMessageInfo

func (m *SavePermDeptResponse) GetErrCode() int64 {
	if m != nil {
		return m.ErrCode
	}
	return 0
}

func (m *SavePermDeptResponse) GetErrMsg() string {
	if m != nil {
		return m.ErrMsg
	}
	return ""
}

func (m *SavePermDeptResponse) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type PermDeptId struct {
	Value                int64    `protobuf:"varint,1,opt,name=Value,proto3" json:"Value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PermDeptId) Reset()         { *m = PermDeptId{} }
func (m *PermDeptId) String() string { return proto.CompactTextString(m) }
func (*PermDeptId) ProtoMessage()    {}
func (*PermDeptId) Descriptor() ([]byte, []int) {
	return fileDescriptor_2_rbac_service_f553a45a5377b596, []int{5}
}
func (m *PermDeptId) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PermDeptId.Unmarshal(m, b)
}
func (m *PermDeptId) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PermDeptId.Marshal(b, m, deterministic)
}
func (dst *PermDeptId) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PermDeptId.Merge(dst, src)
}
func (m *PermDeptId) XXX_Size() int {
	return xxx_messageInfo_PermDeptId.Size(m)
}
func (m *PermDeptId) XXX_DiscardUnknown() {
	xxx_messageInfo_PermDeptId.DiscardUnknown(m)
}

var xxx_messageInfo_PermDeptId proto.InternalMessageInfo

func (m *PermDeptId) GetValue() int64 {
	if m != nil {
		return m.Value
	}
	return 0
}

type SPermDept struct {
	// * ID
	Id int64 `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	// * 名称
	Name string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	// * 上级部门
	Pid int64 `protobuf:"varint,3,opt,name=Pid,proto3" json:"Pid,omitempty"`
	// * 状态
	Enabled int32 `protobuf:"varint,4,opt,name=Enabled,proto3" json:"Enabled,omitempty"`
	// * 创建日期
	CreateTime           int64    `protobuf:"varint,5,opt,name=CreateTime,proto3" json:"CreateTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SPermDept) Reset()         { *m = SPermDept{} }
func (m *SPermDept) String() string { return proto.CompactTextString(m) }
func (*SPermDept) ProtoMessage()    {}
func (*SPermDept) Descriptor() ([]byte, []int) {
	return fileDescriptor_2_rbac_service_f553a45a5377b596, []int{6}
}
func (m *SPermDept) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SPermDept.Unmarshal(m, b)
}
func (m *SPermDept) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SPermDept.Marshal(b, m, deterministic)
}
func (dst *SPermDept) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SPermDept.Merge(dst, src)
}
func (m *SPermDept) XXX_Size() int {
	return xxx_messageInfo_SPermDept.Size(m)
}
func (m *SPermDept) XXX_DiscardUnknown() {
	xxx_messageInfo_SPermDept.DiscardUnknown(m)
}

var xxx_messageInfo_SPermDept proto.InternalMessageInfo

func (m *SPermDept) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *SPermDept) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SPermDept) GetPid() int64 {
	if m != nil {
		return m.Pid
	}
	return 0
}

func (m *SPermDept) GetEnabled() int32 {
	if m != nil {
		return m.Enabled
	}
	return 0
}

func (m *SPermDept) GetCreateTime() int64 {
	if m != nil {
		return m.CreateTime
	}
	return 0
}

type QueryPermDeptRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QueryPermDeptRequest) Reset()         { *m = QueryPermDeptRequest{} }
func (m *QueryPermDeptRequest) String() string { return proto.CompactTextString(m) }
func (*QueryPermDeptRequest) ProtoMessage()    {}
func (*QueryPermDeptRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2_rbac_service_f553a45a5377b596, []int{7}
}
func (m *QueryPermDeptRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryPermDeptRequest.Unmarshal(m, b)
}
func (m *QueryPermDeptRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryPermDeptRequest.Marshal(b, m, deterministic)
}
func (dst *QueryPermDeptRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryPermDeptRequest.Merge(dst, src)
}
func (m *QueryPermDeptRequest) XXX_Size() int {
	return xxx_messageInfo_QueryPermDeptRequest.Size(m)
}
func (m *QueryPermDeptRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryPermDeptRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryPermDeptRequest proto.InternalMessageInfo

type QueryPermDeptResponse struct {
	List                 []*SPermDept `protobuf:"bytes,1,rep,name=List,proto3" json:"List,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *QueryPermDeptResponse) Reset()         { *m = QueryPermDeptResponse{} }
func (m *QueryPermDeptResponse) String() string { return proto.CompactTextString(m) }
func (*QueryPermDeptResponse) ProtoMessage()    {}
func (*QueryPermDeptResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2_rbac_service_f553a45a5377b596, []int{8}
}
func (m *QueryPermDeptResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryPermDeptResponse.Unmarshal(m, b)
}
func (m *QueryPermDeptResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryPermDeptResponse.Marshal(b, m, deterministic)
}
func (dst *QueryPermDeptResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryPermDeptResponse.Merge(dst, src)
}
func (m *QueryPermDeptResponse) XXX_Size() int {
	return xxx_messageInfo_QueryPermDeptResponse.Size(m)
}
func (m *QueryPermDeptResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryPermDeptResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QueryPermDeptResponse proto.InternalMessageInfo

func (m *QueryPermDeptResponse) GetList() []*SPermDept {
	if m != nil {
		return m.List
	}
	return nil
}

func init() {
	proto.RegisterType((*RoleId)(nil), "RoleId")
	proto.RegisterType((*UserId)(nil), "UserId")
	proto.RegisterType((*RbacTree)(nil), "RbacTree")
	proto.RegisterType((*SavePermDeptRequest)(nil), "SavePermDeptRequest")
	proto.RegisterType((*SavePermDeptResponse)(nil), "SavePermDeptResponse")
	proto.RegisterType((*PermDeptId)(nil), "PermDeptId")
	proto.RegisterType((*SPermDept)(nil), "SPermDept")
	proto.RegisterType((*QueryPermDeptRequest)(nil), "QueryPermDeptRequest")
	proto.RegisterType((*QueryPermDeptResponse)(nil), "QueryPermDeptResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// RBACServiceClient is the client API for RBACService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RBACServiceClient interface {
	// 部分树形数据
	DepartTree(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*RbacTree, error)
	// 保存部门
	SavePermDept(ctx context.Context, in *SavePermDeptRequest, opts ...grpc.CallOption) (*SavePermDeptResponse, error)
	// 获取部门
	GetPermDept(ctx context.Context, in *PermDeptId, opts ...grpc.CallOption) (*SPermDept, error)
	// 删除部门
	DeletePermDept(ctx context.Context, in *PermDeptId, opts ...grpc.CallOption) (*Result, error)
	// 获取部门列表
	QueryPermDeptList(ctx context.Context, in *QueryPermDeptRequest, opts ...grpc.CallOption) (*QueryPermDeptResponse, error)
}

type rBACServiceClient struct {
	cc *grpc.ClientConn
}

func NewRBACServiceClient(cc *grpc.ClientConn) RBACServiceClient {
	return &rBACServiceClient{cc}
}

func (c *rBACServiceClient) DepartTree(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*RbacTree, error) {
	out := new(RbacTree)
	err := c.cc.Invoke(ctx, "/RBACService/DepartTree", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rBACServiceClient) SavePermDept(ctx context.Context, in *SavePermDeptRequest, opts ...grpc.CallOption) (*SavePermDeptResponse, error) {
	out := new(SavePermDeptResponse)
	err := c.cc.Invoke(ctx, "/RBACService/SavePermDept", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rBACServiceClient) GetPermDept(ctx context.Context, in *PermDeptId, opts ...grpc.CallOption) (*SPermDept, error) {
	out := new(SPermDept)
	err := c.cc.Invoke(ctx, "/RBACService/GetPermDept", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rBACServiceClient) DeletePermDept(ctx context.Context, in *PermDeptId, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := c.cc.Invoke(ctx, "/RBACService/DeletePermDept", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rBACServiceClient) QueryPermDeptList(ctx context.Context, in *QueryPermDeptRequest, opts ...grpc.CallOption) (*QueryPermDeptResponse, error) {
	out := new(QueryPermDeptResponse)
	err := c.cc.Invoke(ctx, "/RBACService/QueryPermDeptList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RBACServiceServer is the server API for RBACService service.
type RBACServiceServer interface {
	// 部分树形数据
	DepartTree(context.Context, *Empty) (*RbacTree, error)
	// 保存部门
	SavePermDept(context.Context, *SavePermDeptRequest) (*SavePermDeptResponse, error)
	// 获取部门
	GetPermDept(context.Context, *PermDeptId) (*SPermDept, error)
	// 删除部门
	DeletePermDept(context.Context, *PermDeptId) (*Result, error)
	// 获取部门列表
	QueryPermDeptList(context.Context, *QueryPermDeptRequest) (*QueryPermDeptResponse, error)
}

func RegisterRBACServiceServer(s *grpc.Server, srv RBACServiceServer) {
	s.RegisterService(&_RBACService_serviceDesc, srv)
}

func _RBACService_DepartTree_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RBACServiceServer).DepartTree(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/RBACService/DepartTree",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RBACServiceServer).DepartTree(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _RBACService_SavePermDept_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SavePermDeptRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RBACServiceServer).SavePermDept(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/RBACService/SavePermDept",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RBACServiceServer).SavePermDept(ctx, req.(*SavePermDeptRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RBACService_GetPermDept_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PermDeptId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RBACServiceServer).GetPermDept(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/RBACService/GetPermDept",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RBACServiceServer).GetPermDept(ctx, req.(*PermDeptId))
	}
	return interceptor(ctx, in, info, handler)
}

func _RBACService_DeletePermDept_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PermDeptId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RBACServiceServer).DeletePermDept(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/RBACService/DeletePermDept",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RBACServiceServer).DeletePermDept(ctx, req.(*PermDeptId))
	}
	return interceptor(ctx, in, info, handler)
}

func _RBACService_QueryPermDeptList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryPermDeptRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RBACServiceServer).QueryPermDeptList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/RBACService/QueryPermDeptList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RBACServiceServer).QueryPermDeptList(ctx, req.(*QueryPermDeptRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _RBACService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "RBACService",
	HandlerType: (*RBACServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "DepartTree",
			Handler:    _RBACService_DepartTree_Handler,
		},
		{
			MethodName: "SavePermDept",
			Handler:    _RBACService_SavePermDept_Handler,
		},
		{
			MethodName: "GetPermDept",
			Handler:    _RBACService_GetPermDept_Handler,
		},
		{
			MethodName: "DeletePermDept",
			Handler:    _RBACService_DeletePermDept_Handler,
		},
		{
			MethodName: "QueryPermDeptList",
			Handler:    _RBACService_QueryPermDeptList_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "2.rbac_service.proto",
}

func init() {
	proto.RegisterFile("2.rbac_service.proto", fileDescriptor_2_rbac_service_f553a45a5377b596)
}

var fileDescriptor_2_rbac_service_f553a45a5377b596 = []byte{
	// 465 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x53, 0x4d, 0x6b, 0xdb, 0x40,
	0x10, 0x8d, 0x2c, 0x7f, 0xc4, 0xe3, 0x10, 0xda, 0x8d, 0x6c, 0x84, 0x0e, 0xc6, 0x15, 0x14, 0x74,
	0xda, 0x83, 0x7b, 0xe8, 0xa1, 0xf4, 0xd0, 0xd8, 0xa6, 0x18, 0xda, 0xe0, 0xae, 0xd3, 0x52, 0x7a,
	0x29, 0x2b, 0x69, 0x50, 0x16, 0x24, 0xaf, 0xba, 0x5a, 0x05, 0x42, 0xcf, 0x3d, 0xf4, 0x5f, 0x17,
	0xad, 0x25, 0xdb, 0x09, 0xca, 0xb5, 0x27, 0xed, 0xec, 0xbc, 0x9d, 0xf7, 0xe6, 0xcd, 0x08, 0x9c,
	0x39, 0x55, 0x21, 0x8f, 0x7e, 0x16, 0xa8, 0xee, 0x45, 0x84, 0x34, 0x57, 0x52, 0x4b, 0xef, 0x22,
	0x49, 0x65, 0xc8, 0xd3, 0x7d, 0xe4, 0x4f, 0xa1, 0xcf, 0x64, 0x8a, 0xeb, 0x98, 0x38, 0xd0, 0xfb,
	0xc6, 0xd3, 0x12, 0x5d, 0x6b, 0x66, 0x05, 0x36, 0xdb, 0x07, 0x55, 0xfe, 0x6b, 0x81, 0xea, 0xd9,
	0x7c, 0x02, 0xe7, 0x2c, 0xe4, 0xd1, 0xad, 0x42, 0x24, 0x97, 0xd0, 0x11, 0x71, 0x9d, 0xee, 0x88,
	0x98, 0x10, 0xe8, 0xee, 0x78, 0x86, 0x6e, 0x67, 0x66, 0x05, 0x43, 0x66, 0xce, 0xe4, 0x05, 0xd8,
	0xb9, 0x88, 0x5d, 0xdb, 0x80, 0xaa, 0x23, 0x79, 0x0d, 0xe7, 0x8b, 0x3b, 0x91, 0xc6, 0x0a, 0x77,
	0x6e, 0x77, 0x66, 0x07, 0xa3, 0xf9, 0x90, 0x36, 0x25, 0xd9, 0x21, 0xe5, 0xff, 0xb1, 0xe0, 0x6a,
	0xcb, 0xef, 0x71, 0x83, 0x2a, 0x5b, 0x62, 0xae, 0x19, 0xfe, 0x2a, 0xb1, 0xd0, 0x15, 0xe9, 0xfa,
	0x40, 0xba, 0x36, 0xa4, 0x37, 0x27, 0xa4, 0x37, 0x35, 0xe9, 0xe6, 0x48, 0xba, 0x11, 0x31, 0x71,
	0x61, 0xb0, 0xda, 0xf1, 0x30, 0xc5, 0xd8, 0xed, 0xce, 0xac, 0xa0, 0xc7, 0x9a, 0x90, 0x4c, 0x01,
	0x16, 0x0a, 0xb9, 0xc6, 0x5b, 0x91, 0xa1, 0xdb, 0x33, 0x4f, 0x4e, 0x6e, 0xfc, 0xef, 0xe0, 0x3c,
	0x96, 0x51, 0xe4, 0x72, 0x57, 0xa0, 0xa9, 0xa8, 0xd4, 0x42, 0xc6, 0x8d, 0x41, 0x4d, 0x48, 0x26,
	0xd0, 0x5f, 0x29, 0xf5, 0xb9, 0x48, 0x6a, 0x4d, 0x75, 0x54, 0x2b, 0xb7, 0x1b, 0xe5, 0xbe, 0x0f,
	0xd0, 0x54, 0x7d, 0xd6, 0xee, 0xdf, 0x30, 0xdc, 0x36, 0xa0, 0xff, 0xde, 0xfa, 0x04, 0x9c, 0x2f,
	0x25, 0xaa, 0x87, 0x27, 0x23, 0xf0, 0xdf, 0xc2, 0xf8, 0xc9, 0x7d, 0xed, 0xc9, 0x14, 0xba, 0x9f,
	0x44, 0xa1, 0x5d, 0xcb, 0x8c, 0x15, 0xe8, 0x41, 0x3a, 0x33, 0xf7, 0xf3, 0xbf, 0x1d, 0x18, 0xb1,
	0xeb, 0x0f, 0x8b, 0xed, 0x7e, 0x41, 0xc9, 0x2b, 0x80, 0x25, 0xe6, 0x5c, 0x69, 0xb3, 0x4e, 0x7d,
	0xba, 0xca, 0x72, 0xfd, 0xe0, 0x1d, 0xd7, 0xc1, 0x3f, 0x23, 0xef, 0xe1, 0xe2, 0xd4, 0x7e, 0xe2,
	0xd0, 0x96, 0xa5, 0xf0, 0xc6, 0xb4, 0x6d, 0x46, 0xfe, 0x19, 0x09, 0x60, 0xf4, 0x11, 0xf5, 0xe1,
	0xf5, 0x88, 0x1e, 0x1d, 0xf7, 0x4e, 0xf4, 0x19, 0xe4, 0xe5, 0x12, 0x53, 0xd4, 0xd8, 0x0e, 0x1e,
	0x50, 0x86, 0x45, 0x99, 0x56, 0xc8, 0x25, 0xbc, 0x7c, 0xd4, 0x7e, 0xd5, 0x1a, 0x19, 0xd3, 0x36,
	0xab, 0xbc, 0x09, 0x6d, 0x75, 0xca, 0x3f, 0xbb, 0x9e, 0xc2, 0x55, 0x24, 0x33, 0x9a, 0x08, 0x7d,
	0x57, 0x86, 0x34, 0x91, 0x73, 0x49, 0x55, 0x1e, 0xfd, 0x18, 0xd0, 0x77, 0xe6, 0x47, 0x0d, 0xfb,
	0xe6, 0xf3, 0xe6, 0x5f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0x6e, 0x12, 0x73, 0xd5, 0x03, 0x00,
	0x00,
}
