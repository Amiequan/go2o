// Code generated by protoc-gen-go. DO NOT EDIT.
// source: 2.rbac_service.proto

package proto // import "."

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type RoleId struct {
	Value                int64    `protobuf:"varint,1,opt,name=Value,proto3" json:"Value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RoleId) Reset()         { *m = RoleId{} }
func (m *RoleId) String() string { return proto.CompactTextString(m) }
func (*RoleId) ProtoMessage()    {}
func (*RoleId) Descriptor() ([]byte, []int) {
	return fileDescriptor_2_rbac_service_ff717d3833750e05, []int{0}
}
func (m *RoleId) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RoleId.Unmarshal(m, b)
}
func (m *RoleId) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RoleId.Marshal(b, m, deterministic)
}
func (dst *RoleId) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RoleId.Merge(dst, src)
}
func (m *RoleId) XXX_Size() int {
	return xxx_messageInfo_RoleId.Size(m)
}
func (m *RoleId) XXX_DiscardUnknown() {
	xxx_messageInfo_RoleId.DiscardUnknown(m)
}

var xxx_messageInfo_RoleId proto.InternalMessageInfo

func (m *RoleId) GetValue() int64 {
	if m != nil {
		return m.Value
	}
	return 0
}

type UserId struct {
	Value                int64    `protobuf:"varint,1,opt,name=Value,proto3" json:"Value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserId) Reset()         { *m = UserId{} }
func (m *UserId) String() string { return proto.CompactTextString(m) }
func (*UserId) ProtoMessage()    {}
func (*UserId) Descriptor() ([]byte, []int) {
	return fileDescriptor_2_rbac_service_ff717d3833750e05, []int{1}
}
func (m *UserId) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserId.Unmarshal(m, b)
}
func (m *UserId) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserId.Marshal(b, m, deterministic)
}
func (dst *UserId) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserId.Merge(dst, src)
}
func (m *UserId) XXX_Size() int {
	return xxx_messageInfo_UserId.Size(m)
}
func (m *UserId) XXX_DiscardUnknown() {
	xxx_messageInfo_UserId.DiscardUnknown(m)
}

var xxx_messageInfo_UserId proto.InternalMessageInfo

func (m *UserId) GetValue() int64 {
	if m != nil {
		return m.Value
	}
	return 0
}

type RbacTree struct {
	Id                   int64       `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Label                string      `protobuf:"bytes,2,opt,name=Label,proto3" json:"Label,omitempty"`
	Children             []*RbacTree `protobuf:"bytes,3,rep,name=Children,proto3" json:"Children,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *RbacTree) Reset()         { *m = RbacTree{} }
func (m *RbacTree) String() string { return proto.CompactTextString(m) }
func (*RbacTree) ProtoMessage()    {}
func (*RbacTree) Descriptor() ([]byte, []int) {
	return fileDescriptor_2_rbac_service_ff717d3833750e05, []int{2}
}
func (m *RbacTree) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RbacTree.Unmarshal(m, b)
}
func (m *RbacTree) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RbacTree.Marshal(b, m, deterministic)
}
func (dst *RbacTree) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RbacTree.Merge(dst, src)
}
func (m *RbacTree) XXX_Size() int {
	return xxx_messageInfo_RbacTree.Size(m)
}
func (m *RbacTree) XXX_DiscardUnknown() {
	xxx_messageInfo_RbacTree.DiscardUnknown(m)
}

var xxx_messageInfo_RbacTree proto.InternalMessageInfo

func (m *RbacTree) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *RbacTree) GetLabel() string {
	if m != nil {
		return m.Label
	}
	return ""
}

func (m *RbacTree) GetChildren() []*RbacTree {
	if m != nil {
		return m.Children
	}
	return nil
}

type SavePermDeptRequest struct {
	// * ID
	Id int64 `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	// * 名称
	Name string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	// * 上级部门
	Pid int64 `protobuf:"varint,3,opt,name=Pid,proto3" json:"Pid,omitempty"`
	// * 状态
	Enabled int32 `protobuf:"varint,4,opt,name=Enabled,proto3" json:"Enabled,omitempty"`
	// * 创建日期
	CreateTime           int64    `protobuf:"varint,5,opt,name=CreateTime,proto3" json:"CreateTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SavePermDeptRequest) Reset()         { *m = SavePermDeptRequest{} }
func (m *SavePermDeptRequest) String() string { return proto.CompactTextString(m) }
func (*SavePermDeptRequest) ProtoMessage()    {}
func (*SavePermDeptRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2_rbac_service_ff717d3833750e05, []int{3}
}
func (m *SavePermDeptRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SavePermDeptRequest.Unmarshal(m, b)
}
func (m *SavePermDeptRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SavePermDeptRequest.Marshal(b, m, deterministic)
}
func (dst *SavePermDeptRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SavePermDeptRequest.Merge(dst, src)
}
func (m *SavePermDeptRequest) XXX_Size() int {
	return xxx_messageInfo_SavePermDeptRequest.Size(m)
}
func (m *SavePermDeptRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SavePermDeptRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SavePermDeptRequest proto.InternalMessageInfo

func (m *SavePermDeptRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *SavePermDeptRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SavePermDeptRequest) GetPid() int64 {
	if m != nil {
		return m.Pid
	}
	return 0
}

func (m *SavePermDeptRequest) GetEnabled() int32 {
	if m != nil {
		return m.Enabled
	}
	return 0
}

func (m *SavePermDeptRequest) GetCreateTime() int64 {
	if m != nil {
		return m.CreateTime
	}
	return 0
}

type SavePermDeptResponse struct {
	ErrCode              int64    `protobuf:"varint,1,opt,name=ErrCode,proto3" json:"ErrCode,omitempty"`
	ErrMsg               string   `protobuf:"bytes,2,opt,name=ErrMsg,proto3" json:"ErrMsg,omitempty"`
	Id                   int64    `protobuf:"varint,3,opt,name=Id,proto3" json:"Id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SavePermDeptResponse) Reset()         { *m = SavePermDeptResponse{} }
func (m *SavePermDeptResponse) String() string { return proto.CompactTextString(m) }
func (*SavePermDeptResponse) ProtoMessage()    {}
func (*SavePermDeptResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2_rbac_service_ff717d3833750e05, []int{4}
}
func (m *SavePermDeptResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SavePermDeptResponse.Unmarshal(m, b)
}
func (m *SavePermDeptResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SavePermDeptResponse.Marshal(b, m, deterministic)
}
func (dst *SavePermDeptResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SavePermDeptResponse.Merge(dst, src)
}
func (m *SavePermDeptResponse) XXX_Size() int {
	return xxx_messageInfo_SavePermDeptResponse.Size(m)
}
func (m *SavePermDeptResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SavePermDeptResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SavePermDeptResponse proto.InternalMessageInfo

func (m *SavePermDeptResponse) GetErrCode() int64 {
	if m != nil {
		return m.ErrCode
	}
	return 0
}

func (m *SavePermDeptResponse) GetErrMsg() string {
	if m != nil {
		return m.ErrMsg
	}
	return ""
}

func (m *SavePermDeptResponse) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type PermDeptId struct {
	Value                int64    `protobuf:"varint,1,opt,name=Value,proto3" json:"Value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PermDeptId) Reset()         { *m = PermDeptId{} }
func (m *PermDeptId) String() string { return proto.CompactTextString(m) }
func (*PermDeptId) ProtoMessage()    {}
func (*PermDeptId) Descriptor() ([]byte, []int) {
	return fileDescriptor_2_rbac_service_ff717d3833750e05, []int{5}
}
func (m *PermDeptId) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PermDeptId.Unmarshal(m, b)
}
func (m *PermDeptId) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PermDeptId.Marshal(b, m, deterministic)
}
func (dst *PermDeptId) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PermDeptId.Merge(dst, src)
}
func (m *PermDeptId) XXX_Size() int {
	return xxx_messageInfo_PermDeptId.Size(m)
}
func (m *PermDeptId) XXX_DiscardUnknown() {
	xxx_messageInfo_PermDeptId.DiscardUnknown(m)
}

var xxx_messageInfo_PermDeptId proto.InternalMessageInfo

func (m *PermDeptId) GetValue() int64 {
	if m != nil {
		return m.Value
	}
	return 0
}

type SPermDept struct {
	// * ID
	Id int64 `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	// * 名称
	Name string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	// * 上级部门
	Pid int64 `protobuf:"varint,3,opt,name=Pid,proto3" json:"Pid,omitempty"`
	// * 状态
	Enabled int32 `protobuf:"varint,4,opt,name=Enabled,proto3" json:"Enabled,omitempty"`
	// * 创建日期
	CreateTime           int64    `protobuf:"varint,5,opt,name=CreateTime,proto3" json:"CreateTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SPermDept) Reset()         { *m = SPermDept{} }
func (m *SPermDept) String() string { return proto.CompactTextString(m) }
func (*SPermDept) ProtoMessage()    {}
func (*SPermDept) Descriptor() ([]byte, []int) {
	return fileDescriptor_2_rbac_service_ff717d3833750e05, []int{6}
}
func (m *SPermDept) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SPermDept.Unmarshal(m, b)
}
func (m *SPermDept) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SPermDept.Marshal(b, m, deterministic)
}
func (dst *SPermDept) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SPermDept.Merge(dst, src)
}
func (m *SPermDept) XXX_Size() int {
	return xxx_messageInfo_SPermDept.Size(m)
}
func (m *SPermDept) XXX_DiscardUnknown() {
	xxx_messageInfo_SPermDept.DiscardUnknown(m)
}

var xxx_messageInfo_SPermDept proto.InternalMessageInfo

func (m *SPermDept) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *SPermDept) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SPermDept) GetPid() int64 {
	if m != nil {
		return m.Pid
	}
	return 0
}

func (m *SPermDept) GetEnabled() int32 {
	if m != nil {
		return m.Enabled
	}
	return 0
}

func (m *SPermDept) GetCreateTime() int64 {
	if m != nil {
		return m.CreateTime
	}
	return 0
}

type QueryPermDeptRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QueryPermDeptRequest) Reset()         { *m = QueryPermDeptRequest{} }
func (m *QueryPermDeptRequest) String() string { return proto.CompactTextString(m) }
func (*QueryPermDeptRequest) ProtoMessage()    {}
func (*QueryPermDeptRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2_rbac_service_ff717d3833750e05, []int{7}
}
func (m *QueryPermDeptRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryPermDeptRequest.Unmarshal(m, b)
}
func (m *QueryPermDeptRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryPermDeptRequest.Marshal(b, m, deterministic)
}
func (dst *QueryPermDeptRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryPermDeptRequest.Merge(dst, src)
}
func (m *QueryPermDeptRequest) XXX_Size() int {
	return xxx_messageInfo_QueryPermDeptRequest.Size(m)
}
func (m *QueryPermDeptRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryPermDeptRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryPermDeptRequest proto.InternalMessageInfo

type QueryPermDeptResponse struct {
	List                 []*SPermDept `protobuf:"bytes,1,rep,name=List,proto3" json:"List,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *QueryPermDeptResponse) Reset()         { *m = QueryPermDeptResponse{} }
func (m *QueryPermDeptResponse) String() string { return proto.CompactTextString(m) }
func (*QueryPermDeptResponse) ProtoMessage()    {}
func (*QueryPermDeptResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2_rbac_service_ff717d3833750e05, []int{8}
}
func (m *QueryPermDeptResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryPermDeptResponse.Unmarshal(m, b)
}
func (m *QueryPermDeptResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryPermDeptResponse.Marshal(b, m, deterministic)
}
func (dst *QueryPermDeptResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryPermDeptResponse.Merge(dst, src)
}
func (m *QueryPermDeptResponse) XXX_Size() int {
	return xxx_messageInfo_QueryPermDeptResponse.Size(m)
}
func (m *QueryPermDeptResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryPermDeptResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QueryPermDeptResponse proto.InternalMessageInfo

func (m *QueryPermDeptResponse) GetList() []*SPermDept {
	if m != nil {
		return m.List
	}
	return nil
}

type SavePermJobRequest struct {
	// * ID
	Id int64 `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	// * 岗位名称
	Name string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	// * 岗位状态
	Enabled int32 `protobuf:"varint,3,opt,name=Enabled,proto3" json:"Enabled,omitempty"`
	// * 岗位排序
	Sort int32 `protobuf:"varint,4,opt,name=Sort,proto3" json:"Sort,omitempty"`
	// * 部门ID
	DeptId int64 `protobuf:"varint,5,opt,name=DeptId,proto3" json:"DeptId,omitempty"`
	// * 创建日期
	CreateTime           int64    `protobuf:"varint,6,opt,name=CreateTime,proto3" json:"CreateTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SavePermJobRequest) Reset()         { *m = SavePermJobRequest{} }
func (m *SavePermJobRequest) String() string { return proto.CompactTextString(m) }
func (*SavePermJobRequest) ProtoMessage()    {}
func (*SavePermJobRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2_rbac_service_ff717d3833750e05, []int{9}
}
func (m *SavePermJobRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SavePermJobRequest.Unmarshal(m, b)
}
func (m *SavePermJobRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SavePermJobRequest.Marshal(b, m, deterministic)
}
func (dst *SavePermJobRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SavePermJobRequest.Merge(dst, src)
}
func (m *SavePermJobRequest) XXX_Size() int {
	return xxx_messageInfo_SavePermJobRequest.Size(m)
}
func (m *SavePermJobRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SavePermJobRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SavePermJobRequest proto.InternalMessageInfo

func (m *SavePermJobRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *SavePermJobRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SavePermJobRequest) GetEnabled() int32 {
	if m != nil {
		return m.Enabled
	}
	return 0
}

func (m *SavePermJobRequest) GetSort() int32 {
	if m != nil {
		return m.Sort
	}
	return 0
}

func (m *SavePermJobRequest) GetDeptId() int64 {
	if m != nil {
		return m.DeptId
	}
	return 0
}

func (m *SavePermJobRequest) GetCreateTime() int64 {
	if m != nil {
		return m.CreateTime
	}
	return 0
}

type SavePermJobResponse struct {
	ErrCode              int64    `protobuf:"varint,1,opt,name=ErrCode,proto3" json:"ErrCode,omitempty"`
	ErrMsg               string   `protobuf:"bytes,2,opt,name=ErrMsg,proto3" json:"ErrMsg,omitempty"`
	Id                   int64    `protobuf:"varint,3,opt,name=Id,proto3" json:"Id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SavePermJobResponse) Reset()         { *m = SavePermJobResponse{} }
func (m *SavePermJobResponse) String() string { return proto.CompactTextString(m) }
func (*SavePermJobResponse) ProtoMessage()    {}
func (*SavePermJobResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2_rbac_service_ff717d3833750e05, []int{10}
}
func (m *SavePermJobResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SavePermJobResponse.Unmarshal(m, b)
}
func (m *SavePermJobResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SavePermJobResponse.Marshal(b, m, deterministic)
}
func (dst *SavePermJobResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SavePermJobResponse.Merge(dst, src)
}
func (m *SavePermJobResponse) XXX_Size() int {
	return xxx_messageInfo_SavePermJobResponse.Size(m)
}
func (m *SavePermJobResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SavePermJobResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SavePermJobResponse proto.InternalMessageInfo

func (m *SavePermJobResponse) GetErrCode() int64 {
	if m != nil {
		return m.ErrCode
	}
	return 0
}

func (m *SavePermJobResponse) GetErrMsg() string {
	if m != nil {
		return m.ErrMsg
	}
	return ""
}

func (m *SavePermJobResponse) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type PermJobId struct {
	Value                int64    `protobuf:"varint,1,opt,name=Value,proto3" json:"Value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PermJobId) Reset()         { *m = PermJobId{} }
func (m *PermJobId) String() string { return proto.CompactTextString(m) }
func (*PermJobId) ProtoMessage()    {}
func (*PermJobId) Descriptor() ([]byte, []int) {
	return fileDescriptor_2_rbac_service_ff717d3833750e05, []int{11}
}
func (m *PermJobId) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PermJobId.Unmarshal(m, b)
}
func (m *PermJobId) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PermJobId.Marshal(b, m, deterministic)
}
func (dst *PermJobId) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PermJobId.Merge(dst, src)
}
func (m *PermJobId) XXX_Size() int {
	return xxx_messageInfo_PermJobId.Size(m)
}
func (m *PermJobId) XXX_DiscardUnknown() {
	xxx_messageInfo_PermJobId.DiscardUnknown(m)
}

var xxx_messageInfo_PermJobId proto.InternalMessageInfo

func (m *PermJobId) GetValue() int64 {
	if m != nil {
		return m.Value
	}
	return 0
}

type SPermJob struct {
	// * ID
	Id int64 `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	// * 岗位名称
	Name string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	// * 岗位状态
	Enabled int32 `protobuf:"varint,3,opt,name=Enabled,proto3" json:"Enabled,omitempty"`
	// * 岗位排序
	Sort int32 `protobuf:"varint,4,opt,name=Sort,proto3" json:"Sort,omitempty"`
	// * 部门ID
	DeptId int64 `protobuf:"varint,5,opt,name=DeptId,proto3" json:"DeptId,omitempty"`
	// * 创建日期
	CreateTime           int64    `protobuf:"varint,6,opt,name=CreateTime,proto3" json:"CreateTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SPermJob) Reset()         { *m = SPermJob{} }
func (m *SPermJob) String() string { return proto.CompactTextString(m) }
func (*SPermJob) ProtoMessage()    {}
func (*SPermJob) Descriptor() ([]byte, []int) {
	return fileDescriptor_2_rbac_service_ff717d3833750e05, []int{12}
}
func (m *SPermJob) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SPermJob.Unmarshal(m, b)
}
func (m *SPermJob) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SPermJob.Marshal(b, m, deterministic)
}
func (dst *SPermJob) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SPermJob.Merge(dst, src)
}
func (m *SPermJob) XXX_Size() int {
	return xxx_messageInfo_SPermJob.Size(m)
}
func (m *SPermJob) XXX_DiscardUnknown() {
	xxx_messageInfo_SPermJob.DiscardUnknown(m)
}

var xxx_messageInfo_SPermJob proto.InternalMessageInfo

func (m *SPermJob) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *SPermJob) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SPermJob) GetEnabled() int32 {
	if m != nil {
		return m.Enabled
	}
	return 0
}

func (m *SPermJob) GetSort() int32 {
	if m != nil {
		return m.Sort
	}
	return 0
}

func (m *SPermJob) GetDeptId() int64 {
	if m != nil {
		return m.DeptId
	}
	return 0
}

func (m *SPermJob) GetCreateTime() int64 {
	if m != nil {
		return m.CreateTime
	}
	return 0
}

type QueryPermJobRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QueryPermJobRequest) Reset()         { *m = QueryPermJobRequest{} }
func (m *QueryPermJobRequest) String() string { return proto.CompactTextString(m) }
func (*QueryPermJobRequest) ProtoMessage()    {}
func (*QueryPermJobRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2_rbac_service_ff717d3833750e05, []int{13}
}
func (m *QueryPermJobRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryPermJobRequest.Unmarshal(m, b)
}
func (m *QueryPermJobRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryPermJobRequest.Marshal(b, m, deterministic)
}
func (dst *QueryPermJobRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryPermJobRequest.Merge(dst, src)
}
func (m *QueryPermJobRequest) XXX_Size() int {
	return xxx_messageInfo_QueryPermJobRequest.Size(m)
}
func (m *QueryPermJobRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryPermJobRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryPermJobRequest proto.InternalMessageInfo

type QueryPermJobResponse struct {
	List                 []*SPermJob `protobuf:"bytes,1,rep,name=List,proto3" json:"List,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *QueryPermJobResponse) Reset()         { *m = QueryPermJobResponse{} }
func (m *QueryPermJobResponse) String() string { return proto.CompactTextString(m) }
func (*QueryPermJobResponse) ProtoMessage()    {}
func (*QueryPermJobResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2_rbac_service_ff717d3833750e05, []int{14}
}
func (m *QueryPermJobResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryPermJobResponse.Unmarshal(m, b)
}
func (m *QueryPermJobResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryPermJobResponse.Marshal(b, m, deterministic)
}
func (dst *QueryPermJobResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryPermJobResponse.Merge(dst, src)
}
func (m *QueryPermJobResponse) XXX_Size() int {
	return xxx_messageInfo_QueryPermJobResponse.Size(m)
}
func (m *QueryPermJobResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryPermJobResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QueryPermJobResponse proto.InternalMessageInfo

func (m *QueryPermJobResponse) GetList() []*SPermJob {
	if m != nil {
		return m.List
	}
	return nil
}

type PagingPermJob struct {
	// * ID
	Id int64 `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	// * 岗位名称
	Name string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	// * 岗位状态
	Enabled int32 `protobuf:"varint,3,opt,name=Enabled,proto3" json:"Enabled,omitempty"`
	// * 岗位排序
	Sort int32 `protobuf:"varint,4,opt,name=Sort,proto3" json:"Sort,omitempty"`
	// * 部门ID
	DeptId int64 `protobuf:"varint,5,opt,name=DeptId,proto3" json:"DeptId,omitempty"`
	// * 创建日期
	CreateTime           int64    `protobuf:"varint,6,opt,name=CreateTime,proto3" json:"CreateTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PagingPermJob) Reset()         { *m = PagingPermJob{} }
func (m *PagingPermJob) String() string { return proto.CompactTextString(m) }
func (*PagingPermJob) ProtoMessage()    {}
func (*PagingPermJob) Descriptor() ([]byte, []int) {
	return fileDescriptor_2_rbac_service_ff717d3833750e05, []int{15}
}
func (m *PagingPermJob) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PagingPermJob.Unmarshal(m, b)
}
func (m *PagingPermJob) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PagingPermJob.Marshal(b, m, deterministic)
}
func (dst *PagingPermJob) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PagingPermJob.Merge(dst, src)
}
func (m *PagingPermJob) XXX_Size() int {
	return xxx_messageInfo_PagingPermJob.Size(m)
}
func (m *PagingPermJob) XXX_DiscardUnknown() {
	xxx_messageInfo_PagingPermJob.DiscardUnknown(m)
}

var xxx_messageInfo_PagingPermJob proto.InternalMessageInfo

func (m *PagingPermJob) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *PagingPermJob) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *PagingPermJob) GetEnabled() int32 {
	if m != nil {
		return m.Enabled
	}
	return 0
}

func (m *PagingPermJob) GetSort() int32 {
	if m != nil {
		return m.Sort
	}
	return 0
}

func (m *PagingPermJob) GetDeptId() int64 {
	if m != nil {
		return m.DeptId
	}
	return 0
}

func (m *PagingPermJob) GetCreateTime() int64 {
	if m != nil {
		return m.CreateTime
	}
	return 0
}

type PermJobPagingRequest struct {
	// 分页参数
	Params               *SPagingParams `protobuf:"bytes,1,opt,name=Params,proto3" json:"Params,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *PermJobPagingRequest) Reset()         { *m = PermJobPagingRequest{} }
func (m *PermJobPagingRequest) String() string { return proto.CompactTextString(m) }
func (*PermJobPagingRequest) ProtoMessage()    {}
func (*PermJobPagingRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2_rbac_service_ff717d3833750e05, []int{16}
}
func (m *PermJobPagingRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PermJobPagingRequest.Unmarshal(m, b)
}
func (m *PermJobPagingRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PermJobPagingRequest.Marshal(b, m, deterministic)
}
func (dst *PermJobPagingRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PermJobPagingRequest.Merge(dst, src)
}
func (m *PermJobPagingRequest) XXX_Size() int {
	return xxx_messageInfo_PermJobPagingRequest.Size(m)
}
func (m *PermJobPagingRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PermJobPagingRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PermJobPagingRequest proto.InternalMessageInfo

func (m *PermJobPagingRequest) GetParams() *SPagingParams {
	if m != nil {
		return m.Params
	}
	return nil
}

type PermJobPagingResponse struct {
	Total                int64            `protobuf:"varint,1,opt,name=Total,proto3" json:"Total,omitempty"`
	Value                []*PagingPermJob `protobuf:"bytes,2,rep,name=Value,proto3" json:"Value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *PermJobPagingResponse) Reset()         { *m = PermJobPagingResponse{} }
func (m *PermJobPagingResponse) String() string { return proto.CompactTextString(m) }
func (*PermJobPagingResponse) ProtoMessage()    {}
func (*PermJobPagingResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2_rbac_service_ff717d3833750e05, []int{17}
}
func (m *PermJobPagingResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PermJobPagingResponse.Unmarshal(m, b)
}
func (m *PermJobPagingResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PermJobPagingResponse.Marshal(b, m, deterministic)
}
func (dst *PermJobPagingResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PermJobPagingResponse.Merge(dst, src)
}
func (m *PermJobPagingResponse) XXX_Size() int {
	return xxx_messageInfo_PermJobPagingResponse.Size(m)
}
func (m *PermJobPagingResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PermJobPagingResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PermJobPagingResponse proto.InternalMessageInfo

func (m *PermJobPagingResponse) GetTotal() int64 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *PermJobPagingResponse) GetValue() []*PagingPermJob {
	if m != nil {
		return m.Value
	}
	return nil
}

func init() {
	proto.RegisterType((*RoleId)(nil), "RoleId")
	proto.RegisterType((*UserId)(nil), "UserId")
	proto.RegisterType((*RbacTree)(nil), "RbacTree")
	proto.RegisterType((*SavePermDeptRequest)(nil), "SavePermDeptRequest")
	proto.RegisterType((*SavePermDeptResponse)(nil), "SavePermDeptResponse")
	proto.RegisterType((*PermDeptId)(nil), "PermDeptId")
	proto.RegisterType((*SPermDept)(nil), "SPermDept")
	proto.RegisterType((*QueryPermDeptRequest)(nil), "QueryPermDeptRequest")
	proto.RegisterType((*QueryPermDeptResponse)(nil), "QueryPermDeptResponse")
	proto.RegisterType((*SavePermJobRequest)(nil), "SavePermJobRequest")
	proto.RegisterType((*SavePermJobResponse)(nil), "SavePermJobResponse")
	proto.RegisterType((*PermJobId)(nil), "PermJobId")
	proto.RegisterType((*SPermJob)(nil), "SPermJob")
	proto.RegisterType((*QueryPermJobRequest)(nil), "QueryPermJobRequest")
	proto.RegisterType((*QueryPermJobResponse)(nil), "QueryPermJobResponse")
	proto.RegisterType((*PagingPermJob)(nil), "PagingPermJob")
	proto.RegisterType((*PermJobPagingRequest)(nil), "PermJobPagingRequest")
	proto.RegisterType((*PermJobPagingResponse)(nil), "PermJobPagingResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// RBACServiceClient is the client API for RBACService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RBACServiceClient interface {
	// 部门树形数据
	DepartTree(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*RbacTree, error)
	// 保存部门
	SavePermDept(ctx context.Context, in *SavePermDeptRequest, opts ...grpc.CallOption) (*SavePermDeptResponse, error)
	// 获取部门
	GetPermDept(ctx context.Context, in *PermDeptId, opts ...grpc.CallOption) (*SPermDept, error)
	// 删除部门
	DeletePermDept(ctx context.Context, in *PermDeptId, opts ...grpc.CallOption) (*Result, error)
	// 获取部门列表
	QueryPermDeptList(ctx context.Context, in *QueryPermDeptRequest, opts ...grpc.CallOption) (*QueryPermDeptResponse, error)
	// 保存岗位
	SavePermJob(ctx context.Context, in *SavePermJobRequest, opts ...grpc.CallOption) (*SavePermJobResponse, error)
	// 获取岗位
	GetPermJob(ctx context.Context, in *PermJobId, opts ...grpc.CallOption) (*SPermJob, error)
	// 获取岗位列表
	QueryPermJobList(ctx context.Context, in *QueryPermJobRequest, opts ...grpc.CallOption) (*QueryPermJobResponse, error)
	// 删除岗位
	DeletePermJob(ctx context.Context, in *PermJobId, opts ...grpc.CallOption) (*Result, error)
	// 获取岗位分页数据
	PagingPermJob(ctx context.Context, in *PermJobPagingRequest, opts ...grpc.CallOption) (*PermJobPagingResponse, error)
}

type rBACServiceClient struct {
	cc *grpc.ClientConn
}

func NewRBACServiceClient(cc *grpc.ClientConn) RBACServiceClient {
	return &rBACServiceClient{cc}
}

func (c *rBACServiceClient) DepartTree(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*RbacTree, error) {
	out := new(RbacTree)
	err := c.cc.Invoke(ctx, "/RBACService/DepartTree", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rBACServiceClient) SavePermDept(ctx context.Context, in *SavePermDeptRequest, opts ...grpc.CallOption) (*SavePermDeptResponse, error) {
	out := new(SavePermDeptResponse)
	err := c.cc.Invoke(ctx, "/RBACService/SavePermDept", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rBACServiceClient) GetPermDept(ctx context.Context, in *PermDeptId, opts ...grpc.CallOption) (*SPermDept, error) {
	out := new(SPermDept)
	err := c.cc.Invoke(ctx, "/RBACService/GetPermDept", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rBACServiceClient) DeletePermDept(ctx context.Context, in *PermDeptId, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := c.cc.Invoke(ctx, "/RBACService/DeletePermDept", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rBACServiceClient) QueryPermDeptList(ctx context.Context, in *QueryPermDeptRequest, opts ...grpc.CallOption) (*QueryPermDeptResponse, error) {
	out := new(QueryPermDeptResponse)
	err := c.cc.Invoke(ctx, "/RBACService/QueryPermDeptList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rBACServiceClient) SavePermJob(ctx context.Context, in *SavePermJobRequest, opts ...grpc.CallOption) (*SavePermJobResponse, error) {
	out := new(SavePermJobResponse)
	err := c.cc.Invoke(ctx, "/RBACService/SavePermJob", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rBACServiceClient) GetPermJob(ctx context.Context, in *PermJobId, opts ...grpc.CallOption) (*SPermJob, error) {
	out := new(SPermJob)
	err := c.cc.Invoke(ctx, "/RBACService/GetPermJob", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rBACServiceClient) QueryPermJobList(ctx context.Context, in *QueryPermJobRequest, opts ...grpc.CallOption) (*QueryPermJobResponse, error) {
	out := new(QueryPermJobResponse)
	err := c.cc.Invoke(ctx, "/RBACService/QueryPermJobList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rBACServiceClient) DeletePermJob(ctx context.Context, in *PermJobId, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := c.cc.Invoke(ctx, "/RBACService/DeletePermJob", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rBACServiceClient) PagingPermJob(ctx context.Context, in *PermJobPagingRequest, opts ...grpc.CallOption) (*PermJobPagingResponse, error) {
	out := new(PermJobPagingResponse)
	err := c.cc.Invoke(ctx, "/RBACService/PagingPermJob", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RBACServiceServer is the server API for RBACService service.
type RBACServiceServer interface {
	// 部门树形数据
	DepartTree(context.Context, *Empty) (*RbacTree, error)
	// 保存部门
	SavePermDept(context.Context, *SavePermDeptRequest) (*SavePermDeptResponse, error)
	// 获取部门
	GetPermDept(context.Context, *PermDeptId) (*SPermDept, error)
	// 删除部门
	DeletePermDept(context.Context, *PermDeptId) (*Result, error)
	// 获取部门列表
	QueryPermDeptList(context.Context, *QueryPermDeptRequest) (*QueryPermDeptResponse, error)
	// 保存岗位
	SavePermJob(context.Context, *SavePermJobRequest) (*SavePermJobResponse, error)
	// 获取岗位
	GetPermJob(context.Context, *PermJobId) (*SPermJob, error)
	// 获取岗位列表
	QueryPermJobList(context.Context, *QueryPermJobRequest) (*QueryPermJobResponse, error)
	// 删除岗位
	DeletePermJob(context.Context, *PermJobId) (*Result, error)
	// 获取岗位分页数据
	PagingPermJob(context.Context, *PermJobPagingRequest) (*PermJobPagingResponse, error)
}

func RegisterRBACServiceServer(s *grpc.Server, srv RBACServiceServer) {
	s.RegisterService(&_RBACService_serviceDesc, srv)
}

func _RBACService_DepartTree_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RBACServiceServer).DepartTree(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/RBACService/DepartTree",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RBACServiceServer).DepartTree(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _RBACService_SavePermDept_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SavePermDeptRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RBACServiceServer).SavePermDept(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/RBACService/SavePermDept",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RBACServiceServer).SavePermDept(ctx, req.(*SavePermDeptRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RBACService_GetPermDept_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PermDeptId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RBACServiceServer).GetPermDept(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/RBACService/GetPermDept",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RBACServiceServer).GetPermDept(ctx, req.(*PermDeptId))
	}
	return interceptor(ctx, in, info, handler)
}

func _RBACService_DeletePermDept_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PermDeptId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RBACServiceServer).DeletePermDept(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/RBACService/DeletePermDept",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RBACServiceServer).DeletePermDept(ctx, req.(*PermDeptId))
	}
	return interceptor(ctx, in, info, handler)
}

func _RBACService_QueryPermDeptList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryPermDeptRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RBACServiceServer).QueryPermDeptList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/RBACService/QueryPermDeptList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RBACServiceServer).QueryPermDeptList(ctx, req.(*QueryPermDeptRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RBACService_SavePermJob_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SavePermJobRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RBACServiceServer).SavePermJob(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/RBACService/SavePermJob",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RBACServiceServer).SavePermJob(ctx, req.(*SavePermJobRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RBACService_GetPermJob_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PermJobId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RBACServiceServer).GetPermJob(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/RBACService/GetPermJob",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RBACServiceServer).GetPermJob(ctx, req.(*PermJobId))
	}
	return interceptor(ctx, in, info, handler)
}

func _RBACService_QueryPermJobList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryPermJobRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RBACServiceServer).QueryPermJobList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/RBACService/QueryPermJobList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RBACServiceServer).QueryPermJobList(ctx, req.(*QueryPermJobRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RBACService_DeletePermJob_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PermJobId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RBACServiceServer).DeletePermJob(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/RBACService/DeletePermJob",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RBACServiceServer).DeletePermJob(ctx, req.(*PermJobId))
	}
	return interceptor(ctx, in, info, handler)
}

func _RBACService_PagingPermJob_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PermJobPagingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RBACServiceServer).PagingPermJob(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/RBACService/PagingPermJob",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RBACServiceServer).PagingPermJob(ctx, req.(*PermJobPagingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _RBACService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "RBACService",
	HandlerType: (*RBACServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "DepartTree",
			Handler:    _RBACService_DepartTree_Handler,
		},
		{
			MethodName: "SavePermDept",
			Handler:    _RBACService_SavePermDept_Handler,
		},
		{
			MethodName: "GetPermDept",
			Handler:    _RBACService_GetPermDept_Handler,
		},
		{
			MethodName: "DeletePermDept",
			Handler:    _RBACService_DeletePermDept_Handler,
		},
		{
			MethodName: "QueryPermDeptList",
			Handler:    _RBACService_QueryPermDeptList_Handler,
		},
		{
			MethodName: "SavePermJob",
			Handler:    _RBACService_SavePermJob_Handler,
		},
		{
			MethodName: "GetPermJob",
			Handler:    _RBACService_GetPermJob_Handler,
		},
		{
			MethodName: "QueryPermJobList",
			Handler:    _RBACService_QueryPermJobList_Handler,
		},
		{
			MethodName: "DeletePermJob",
			Handler:    _RBACService_DeletePermJob_Handler,
		},
		{
			MethodName: "PagingPermJob",
			Handler:    _RBACService_PagingPermJob_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "2.rbac_service.proto",
}

func init() {
	proto.RegisterFile("2.rbac_service.proto", fileDescriptor_2_rbac_service_ff717d3833750e05)
}

var fileDescriptor_2_rbac_service_ff717d3833750e05 = []byte{
	// 691 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x55, 0x51, 0x6b, 0xda, 0x50,
	0x14, 0x36, 0x46, 0x6d, 0x3d, 0xb6, 0xd2, 0x5d, 0x13, 0x09, 0x81, 0x89, 0xbd, 0xac, 0xc5, 0xa7,
	0xfb, 0xe0, 0x18, 0x83, 0x8d, 0x15, 0x5a, 0x2d, 0xa3, 0xa3, 0x1b, 0x2e, 0xe9, 0xd6, 0xb1, 0x97,
	0x71, 0xa3, 0x07, 0x1b, 0x88, 0xc6, 0xdd, 0xc4, 0x42, 0xd9, 0xf3, 0xfe, 0xc1, 0x60, 0xec, 0x65,
	0xbf, 0x75, 0x78, 0x73, 0xa3, 0xd1, 0xc6, 0x87, 0xc1, 0x18, 0x7d, 0x32, 0xe7, 0xde, 0x73, 0xef,
	0x3d, 0xdf, 0x77, 0xbe, 0xf3, 0x09, 0x46, 0x97, 0x09, 0x8f, 0x0f, 0xbf, 0x44, 0x28, 0x6e, 0xfd,
	0x21, 0xb2, 0x99, 0x08, 0xe3, 0xd0, 0xde, 0x1b, 0x07, 0xa1, 0xc7, 0x83, 0x24, 0xa2, 0x2d, 0xa8,
	0x38, 0x61, 0x80, 0x17, 0x23, 0x62, 0x40, 0xf9, 0x23, 0x0f, 0xe6, 0x68, 0x69, 0x6d, 0xad, 0xa3,
	0x3b, 0x49, 0xb0, 0xd8, 0xff, 0x10, 0xa1, 0xd8, 0xba, 0x7f, 0x0d, 0xbb, 0x8e, 0xc7, 0x87, 0x57,
	0x02, 0x91, 0xd4, 0xa1, 0x78, 0x31, 0x52, 0xdb, 0xc5, 0xe4, 0xc4, 0x25, 0xf7, 0x30, 0xb0, 0x8a,
	0x6d, 0xad, 0x53, 0x75, 0x92, 0x80, 0x1c, 0xc1, 0x6e, 0xef, 0xc6, 0x0f, 0x46, 0x02, 0xa7, 0x96,
	0xde, 0xd6, 0x3b, 0xb5, 0x6e, 0x95, 0xa5, 0x57, 0x38, 0xcb, 0x2d, 0xfa, 0x5d, 0x83, 0x86, 0xcb,
	0x6f, 0x71, 0x80, 0x62, 0xd2, 0xc7, 0x59, 0xec, 0xe0, 0xd7, 0x39, 0x46, 0xf1, 0xbd, 0x47, 0x08,
	0x94, 0xde, 0xf1, 0x09, 0xaa, 0x37, 0xe4, 0x37, 0x39, 0x00, 0x7d, 0xe0, 0x8f, 0x2c, 0x5d, 0x26,
	0x2d, 0x3e, 0x89, 0x05, 0x3b, 0xe7, 0x53, 0xee, 0x05, 0x38, 0xb2, 0x4a, 0x6d, 0xad, 0x53, 0x76,
	0xd2, 0x90, 0xb4, 0x00, 0x7a, 0x02, 0x79, 0x8c, 0x57, 0xfe, 0x04, 0xad, 0xb2, 0x3c, 0x92, 0x59,
	0xa1, 0x9f, 0xc0, 0x58, 0x2f, 0x23, 0x9a, 0x85, 0xd3, 0x08, 0xe5, 0x8d, 0x42, 0xf4, 0xc2, 0x51,
	0x4a, 0x48, 0x1a, 0x92, 0x26, 0x54, 0xce, 0x85, 0x78, 0x1b, 0x8d, 0x55, 0x4d, 0x2a, 0x52, 0x95,
	0xeb, 0x69, 0xe5, 0x94, 0x02, 0xa4, 0xb7, 0x6e, 0xa5, 0xf7, 0x1b, 0x54, 0xdd, 0x34, 0xe9, 0xbf,
	0x43, 0x6f, 0x82, 0xf1, 0x7e, 0x8e, 0xe2, 0x6e, 0xa3, 0x05, 0xf4, 0x39, 0x98, 0x1b, 0xeb, 0x8a,
	0x93, 0x16, 0x94, 0x2e, 0xfd, 0x28, 0xb6, 0x34, 0xd9, 0x56, 0x60, 0xcb, 0xd2, 0x1d, 0xb9, 0x4e,
	0x7f, 0x6b, 0x40, 0x52, 0x32, 0xdf, 0x84, 0xde, 0xdf, 0xb4, 0x34, 0x83, 0x42, 0x5f, 0x47, 0x41,
	0xa0, 0xe4, 0x86, 0x22, 0x56, 0xe0, 0xe4, 0xf7, 0xa2, 0x05, 0x09, 0xad, 0x0a, 0x95, 0x8a, 0x36,
	0x10, 0x57, 0xee, 0x21, 0xbe, 0x5e, 0x69, 0x4e, 0xd6, 0xf7, 0xcf, 0x7a, 0x7d, 0x08, 0x55, 0x75,
	0xe9, 0xd6, 0x56, 0xff, 0xd0, 0x60, 0xd7, 0x55, 0x49, 0x0f, 0x88, 0x12, 0x13, 0x1a, 0xcb, 0x66,
	0xaf, 0x7a, 0x46, 0x9f, 0x65, 0xb4, 0x91, 0xa5, 0xea, 0xf1, 0x9a, 0x04, 0xaa, 0x2c, 0x45, 0xa4,
	0x14, 0xf0, 0x4b, 0x83, 0xfd, 0x01, 0x1f, 0xfb, 0xd3, 0xf1, 0xc3, 0x43, 0x7a, 0x02, 0x86, 0x2a,
	0x2a, 0xa9, 0x30, 0x95, 0xe7, 0x31, 0x54, 0x06, 0x5c, 0xf0, 0x49, 0x24, 0xab, 0xac, 0x75, 0xeb,
	0xcc, 0x55, 0x10, 0xe4, 0xaa, 0xa3, 0x76, 0xa9, 0x0b, 0xe6, 0xc6, 0x79, 0xc5, 0x89, 0x01, 0xe5,
	0xab, 0x30, 0xe6, 0x41, 0xda, 0x6f, 0x19, 0x90, 0x27, 0xa9, 0x0a, 0x8a, 0x92, 0xaa, 0x3a, 0x5b,
	0xe3, 0x45, 0xa9, 0xa2, 0xfb, 0xb3, 0x04, 0x35, 0xe7, 0xec, 0xb4, 0xe7, 0x26, 0x1e, 0x4e, 0x0e,
	0x01, 0xfa, 0x38, 0xe3, 0x22, 0x96, 0x8e, 0x5b, 0x61, 0xe7, 0x93, 0x59, 0x7c, 0x67, 0xaf, 0x1c,
	0x94, 0x16, 0xc8, 0x2b, 0xd8, 0xcb, 0x3a, 0x16, 0x31, 0x58, 0x8e, 0x8f, 0xda, 0x26, 0xcb, 0xb3,
	0x35, 0x5a, 0x20, 0x1d, 0xa8, 0xbd, 0xc6, 0x78, 0x79, 0xba, 0xc6, 0x56, 0x26, 0x65, 0x67, 0x46,
	0x5a, 0x66, 0xd6, 0xfb, 0x18, 0x60, 0x8c, 0xf9, 0xc9, 0x3b, 0xcc, 0xc1, 0x68, 0x1e, 0x2c, 0x32,
	0xfb, 0xf0, 0x68, 0xcd, 0x31, 0x16, 0x5a, 0x20, 0x26, 0xcb, 0x73, 0x17, 0xbb, 0xc9, 0x72, 0xcd,
	0x85, 0x16, 0xc8, 0x0b, 0xa8, 0x65, 0xa6, 0x93, 0x34, 0xd8, 0x7d, 0x2f, 0xb1, 0x0d, 0x96, 0x33,
	0xc0, 0xb4, 0x40, 0x8e, 0x00, 0x14, 0xaa, 0xc5, 0x51, 0x60, 0xcb, 0x69, 0xb4, 0x57, 0x1a, 0xa5,
	0x05, 0x72, 0x0a, 0x07, 0x59, 0x59, 0xcb, 0x3a, 0x0d, 0x96, 0x33, 0x00, 0xb6, 0xc9, 0xf2, 0xf4,
	0x4f, 0x0b, 0xe4, 0x18, 0xf6, 0x57, 0xac, 0x6c, 0x3e, 0x96, 0xe1, 0xe4, 0x64, 0x73, 0x12, 0x4c,
	0x96, 0x27, 0x3f, 0xbb, 0xc9, 0x72, 0x55, 0x75, 0xd6, 0x82, 0xc6, 0x30, 0x9c, 0xb0, 0xb1, 0x1f,
	0xdf, 0xcc, 0x3d, 0x36, 0x0e, 0xbb, 0x21, 0x13, 0xb3, 0xe1, 0xe7, 0x1d, 0xf6, 0x52, 0xfe, 0xb3,
	0x7b, 0x15, 0xf9, 0xf3, 0xf4, 0x4f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x59, 0x6a, 0xaa, 0x24, 0x06,
	0x08, 0x00, 0x00,
}
