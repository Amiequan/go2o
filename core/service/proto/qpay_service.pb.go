// Code generated by protoc-gen-go. DO NOT EDIT.
// source: qpay_service.proto

package proto // import "."

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// 银行卡号
type BankCardNo struct {
	CardNo               string   `protobuf:"bytes,1,opt,name=CardNo,proto3" json:"CardNo,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BankCardNo) Reset()         { *m = BankCardNo{} }
func (m *BankCardNo) String() string { return proto.CompactTextString(m) }
func (*BankCardNo) ProtoMessage()    {}
func (*BankCardNo) Descriptor() ([]byte, []int) {
	return fileDescriptor_qpay_service_939ad209c216ddcf, []int{0}
}
func (m *BankCardNo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BankCardNo.Unmarshal(m, b)
}
func (m *BankCardNo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BankCardNo.Marshal(b, m, deterministic)
}
func (dst *BankCardNo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BankCardNo.Merge(dst, src)
}
func (m *BankCardNo) XXX_Size() int {
	return xxx_messageInfo_BankCardNo.Size(m)
}
func (m *BankCardNo) XXX_DiscardUnknown() {
	xxx_messageInfo_BankCardNo.DiscardUnknown(m)
}

var xxx_messageInfo_BankCardNo proto.InternalMessageInfo

func (m *BankCardNo) GetCardNo() string {
	if m != nil {
		return m.CardNo
	}
	return ""
}

// 银行卡查询结果
type CardBinQueryResponse struct {
	// 银行名称
	BankName string `protobuf:"bytes,1,opt,name=BankName,proto3" json:"BankName,omitempty"`
	// 用户银行卡号
	BankCardNo string `protobuf:"bytes,2,opt,name=BankCardNo,proto3" json:"BankCardNo,omitempty"`
	// 返回的银行代号
	BankCode string `protobuf:"bytes,3,opt,name=BankCode,proto3" json:"BankCode,omitempty"`
	// 银行卡类型（0=储蓄卡,1=信用卡）
	CardType int32 `protobuf:"varint,4,opt,name=CardType,proto3" json:"CardType,omitempty"`
	// 是否需要银行端授权,如果否,则直接使用短信既可授权
	RequireBankSideAuth  bool     `protobuf:"varint,5,opt,name=RequireBankSideAuth,proto3" json:"RequireBankSideAuth,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CardBinQueryResponse) Reset()         { *m = CardBinQueryResponse{} }
func (m *CardBinQueryResponse) String() string { return proto.CompactTextString(m) }
func (*CardBinQueryResponse) ProtoMessage()    {}
func (*CardBinQueryResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_qpay_service_939ad209c216ddcf, []int{1}
}
func (m *CardBinQueryResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CardBinQueryResponse.Unmarshal(m, b)
}
func (m *CardBinQueryResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CardBinQueryResponse.Marshal(b, m, deterministic)
}
func (dst *CardBinQueryResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CardBinQueryResponse.Merge(dst, src)
}
func (m *CardBinQueryResponse) XXX_Size() int {
	return xxx_messageInfo_CardBinQueryResponse.Size(m)
}
func (m *CardBinQueryResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CardBinQueryResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CardBinQueryResponse proto.InternalMessageInfo

func (m *CardBinQueryResponse) GetBankName() string {
	if m != nil {
		return m.BankName
	}
	return ""
}

func (m *CardBinQueryResponse) GetBankCardNo() string {
	if m != nil {
		return m.BankCardNo
	}
	return ""
}

func (m *CardBinQueryResponse) GetBankCode() string {
	if m != nil {
		return m.BankCode
	}
	return ""
}

func (m *CardBinQueryResponse) GetCardType() int32 {
	if m != nil {
		return m.CardType
	}
	return 0
}

func (m *CardBinQueryResponse) GetRequireBankSideAuth() bool {
	if m != nil {
		return m.RequireBankSideAuth
	}
	return false
}

type BankAuthRequest struct {
	// 随机Id,用于查询授权结果,并防止重复提起申请
	NonceId string `protobuf:"bytes,1,opt,name=NonceId,proto3" json:"NonceId,omitempty"`
	// 用户银行卡号,如：620000000000000000
	BankCardNo string `protobuf:"bytes,2,opt,name=BankCardNo,proto3" json:"BankCardNo,omitempty"`
	// 用户名,如：张三
	BankAccountName string `protobuf:"bytes,3,opt,name=BankAccountName,proto3" json:"BankAccountName,omitempty"`
	// 用户银行绑定的手机号
	Mobile string `protobuf:"bytes,4,opt,name=Mobile,proto3" json:"Mobile,omitempty"`
	// 用户身份证号码,如：100100052000000000
	IdCardNo             string   `protobuf:"bytes,5,opt,name=IdCardNo,proto3" json:"IdCardNo,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BankAuthRequest) Reset()         { *m = BankAuthRequest{} }
func (m *BankAuthRequest) String() string { return proto.CompactTextString(m) }
func (*BankAuthRequest) ProtoMessage()    {}
func (*BankAuthRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_qpay_service_939ad209c216ddcf, []int{2}
}
func (m *BankAuthRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BankAuthRequest.Unmarshal(m, b)
}
func (m *BankAuthRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BankAuthRequest.Marshal(b, m, deterministic)
}
func (dst *BankAuthRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BankAuthRequest.Merge(dst, src)
}
func (m *BankAuthRequest) XXX_Size() int {
	return xxx_messageInfo_BankAuthRequest.Size(m)
}
func (m *BankAuthRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BankAuthRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BankAuthRequest proto.InternalMessageInfo

func (m *BankAuthRequest) GetNonceId() string {
	if m != nil {
		return m.NonceId
	}
	return ""
}

func (m *BankAuthRequest) GetBankCardNo() string {
	if m != nil {
		return m.BankCardNo
	}
	return ""
}

func (m *BankAuthRequest) GetBankAccountName() string {
	if m != nil {
		return m.BankAccountName
	}
	return ""
}

func (m *BankAuthRequest) GetMobile() string {
	if m != nil {
		return m.Mobile
	}
	return ""
}

func (m *BankAuthRequest) GetIdCardNo() string {
	if m != nil {
		return m.IdCardNo
	}
	return ""
}

// 申请认证返回结果,通常直接使用返回的表单提交获取银行的授权, 并再查询授权
type BankAuthResponse struct {
	// 随机Id
	NonceId string `protobuf:"bytes,1,opt,name=NonceId,proto3" json:"NonceId,omitempty"`
	// 错误消息
	ErrMsg string `protobuf:"bytes,2,opt,name=ErrMsg,proto3" json:"ErrMsg,omitempty"`
	// 认证的Form表单
	AuthForm string `protobuf:"bytes,3,opt,name=AuthForm,proto3" json:"AuthForm,omitempty"`
	// 认证需要的其他数据
	AuthData             map[string]string `protobuf:"bytes,4,rep,name=AuthData,proto3" json:"AuthData,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *BankAuthResponse) Reset()         { *m = BankAuthResponse{} }
func (m *BankAuthResponse) String() string { return proto.CompactTextString(m) }
func (*BankAuthResponse) ProtoMessage()    {}
func (*BankAuthResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_qpay_service_939ad209c216ddcf, []int{3}
}
func (m *BankAuthResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BankAuthResponse.Unmarshal(m, b)
}
func (m *BankAuthResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BankAuthResponse.Marshal(b, m, deterministic)
}
func (dst *BankAuthResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BankAuthResponse.Merge(dst, src)
}
func (m *BankAuthResponse) XXX_Size() int {
	return xxx_messageInfo_BankAuthResponse.Size(m)
}
func (m *BankAuthResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_BankAuthResponse.DiscardUnknown(m)
}

var xxx_messageInfo_BankAuthResponse proto.InternalMessageInfo

func (m *BankAuthResponse) GetNonceId() string {
	if m != nil {
		return m.NonceId
	}
	return ""
}

func (m *BankAuthResponse) GetErrMsg() string {
	if m != nil {
		return m.ErrMsg
	}
	return ""
}

func (m *BankAuthResponse) GetAuthForm() string {
	if m != nil {
		return m.AuthForm
	}
	return ""
}

func (m *BankAuthResponse) GetAuthData() map[string]string {
	if m != nil {
		return m.AuthData
	}
	return nil
}

// 银行授权查询请求
type BankAuthQueryRequest struct {
	// 申请认证的随机Id,如果传递空,则必须传入BankCardNo
	NonceId string `protobuf:"bytes,1,opt,name=NonceId,proto3" json:"NonceId,omitempty"`
	// 用户银行卡号,如：620000000000000000
	BankCardNo           string   `protobuf:"bytes,2,opt,name=BankCardNo,proto3" json:"BankCardNo,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BankAuthQueryRequest) Reset()         { *m = BankAuthQueryRequest{} }
func (m *BankAuthQueryRequest) String() string { return proto.CompactTextString(m) }
func (*BankAuthQueryRequest) ProtoMessage()    {}
func (*BankAuthQueryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_qpay_service_939ad209c216ddcf, []int{4}
}
func (m *BankAuthQueryRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BankAuthQueryRequest.Unmarshal(m, b)
}
func (m *BankAuthQueryRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BankAuthQueryRequest.Marshal(b, m, deterministic)
}
func (dst *BankAuthQueryRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BankAuthQueryRequest.Merge(dst, src)
}
func (m *BankAuthQueryRequest) XXX_Size() int {
	return xxx_messageInfo_BankAuthQueryRequest.Size(m)
}
func (m *BankAuthQueryRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BankAuthQueryRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BankAuthQueryRequest proto.InternalMessageInfo

func (m *BankAuthQueryRequest) GetNonceId() string {
	if m != nil {
		return m.NonceId
	}
	return ""
}

func (m *BankAuthQueryRequest) GetBankCardNo() string {
	if m != nil {
		return m.BankCardNo
	}
	return ""
}

// 银行授权查询响应
type BankAuthQueryResponse struct {
	// 状态码，0表示成功
	Code string `protobuf:"bytes,1,opt,name=Code,proto3" json:"Code,omitempty"`
	// 错误信息,成功返回空
	ErrMsg string `protobuf:"bytes,2,opt,name=ErrMsg,proto3" json:"ErrMsg,omitempty"`
	// 银行授权认证返回的Token,未处理授权时为空
	BankAuthToken        string   `protobuf:"bytes,3,opt,name=BankAuthToken,proto3" json:"BankAuthToken,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BankAuthQueryResponse) Reset()         { *m = BankAuthQueryResponse{} }
func (m *BankAuthQueryResponse) String() string { return proto.CompactTextString(m) }
func (*BankAuthQueryResponse) ProtoMessage()    {}
func (*BankAuthQueryResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_qpay_service_939ad209c216ddcf, []int{5}
}
func (m *BankAuthQueryResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BankAuthQueryResponse.Unmarshal(m, b)
}
func (m *BankAuthQueryResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BankAuthQueryResponse.Marshal(b, m, deterministic)
}
func (dst *BankAuthQueryResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BankAuthQueryResponse.Merge(dst, src)
}
func (m *BankAuthQueryResponse) XXX_Size() int {
	return xxx_messageInfo_BankAuthQueryResponse.Size(m)
}
func (m *BankAuthQueryResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_BankAuthQueryResponse.DiscardUnknown(m)
}

var xxx_messageInfo_BankAuthQueryResponse proto.InternalMessageInfo

func (m *BankAuthQueryResponse) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *BankAuthQueryResponse) GetErrMsg() string {
	if m != nil {
		return m.ErrMsg
	}
	return ""
}

func (m *BankAuthQueryResponse) GetBankAuthToken() string {
	if m != nil {
		return m.BankAuthToken
	}
	return ""
}

// 直接支付请求
type QPaymentRequest struct {
	// 商户订单号
	OrderNo string `protobuf:"bytes,1,opt,name=OrderNo,proto3" json:"OrderNo,omitempty"`
	// 支付金额,实际金额*100,无小数
	TradeFee int32 `protobuf:"varint,2,opt,name=TradeFee,proto3" json:"TradeFee,omitempty"`
	// 支付商品名称
	Subject string `protobuf:"bytes,3,opt,name=Subject,proto3" json:"Subject,omitempty"`
	// 银行授权码
	BankAuthToken string `protobuf:"bytes,4,opt,name=BankAuthToken,proto3" json:"BankAuthToken,omitempty"`
	// 校译用户IP
	TradeUserIp string `protobuf:"bytes,5,opt,name=TradeUserIp,proto3" json:"TradeUserIp,omitempty"`
	// 异步通知地址,非必填
	NotifyUrl string `protobuf:"bytes,6,opt,name=NotifyUrl,proto3" json:"NotifyUrl,omitempty"`
	// 同步返回地址,非必填
	ReturnUrl string `protobuf:"bytes,7,opt,name=ReturnUrl,proto3" json:"ReturnUrl,omitempty"`
	// 自定义数据
	Nonce string `protobuf:"bytes,8,opt,name=Nonce,proto3" json:"Nonce,omitempty"`
	// 安全码+随机内容md5后的字符串
	SafeSign             string   `protobuf:"bytes,9,opt,name=SafeSign,proto3" json:"SafeSign,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QPaymentRequest) Reset()         { *m = QPaymentRequest{} }
func (m *QPaymentRequest) String() string { return proto.CompactTextString(m) }
func (*QPaymentRequest) ProtoMessage()    {}
func (*QPaymentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_qpay_service_939ad209c216ddcf, []int{6}
}
func (m *QPaymentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QPaymentRequest.Unmarshal(m, b)
}
func (m *QPaymentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QPaymentRequest.Marshal(b, m, deterministic)
}
func (dst *QPaymentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QPaymentRequest.Merge(dst, src)
}
func (m *QPaymentRequest) XXX_Size() int {
	return xxx_messageInfo_QPaymentRequest.Size(m)
}
func (m *QPaymentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QPaymentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QPaymentRequest proto.InternalMessageInfo

func (m *QPaymentRequest) GetOrderNo() string {
	if m != nil {
		return m.OrderNo
	}
	return ""
}

func (m *QPaymentRequest) GetTradeFee() int32 {
	if m != nil {
		return m.TradeFee
	}
	return 0
}

func (m *QPaymentRequest) GetSubject() string {
	if m != nil {
		return m.Subject
	}
	return ""
}

func (m *QPaymentRequest) GetBankAuthToken() string {
	if m != nil {
		return m.BankAuthToken
	}
	return ""
}

func (m *QPaymentRequest) GetTradeUserIp() string {
	if m != nil {
		return m.TradeUserIp
	}
	return ""
}

func (m *QPaymentRequest) GetNotifyUrl() string {
	if m != nil {
		return m.NotifyUrl
	}
	return ""
}

func (m *QPaymentRequest) GetReturnUrl() string {
	if m != nil {
		return m.ReturnUrl
	}
	return ""
}

func (m *QPaymentRequest) GetNonce() string {
	if m != nil {
		return m.Nonce
	}
	return ""
}

func (m *QPaymentRequest) GetSafeSign() string {
	if m != nil {
		return m.SafeSign
	}
	return ""
}

// 支付申请响应
type QPaymentResponse struct {
	// 状态码，0表示成功
	Code string `protobuf:"bytes,1,opt,name=Code,proto3" json:"Code,omitempty"`
	// 错误信息,成功返回空
	ErrMsg string `protobuf:"bytes,2,opt,name=ErrMsg,proto3" json:"ErrMsg,omitempty"`
	// 第三方支单据号
	BillNo               string   `protobuf:"bytes,3,opt,name=BillNo,proto3" json:"BillNo,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QPaymentResponse) Reset()         { *m = QPaymentResponse{} }
func (m *QPaymentResponse) String() string { return proto.CompactTextString(m) }
func (*QPaymentResponse) ProtoMessage()    {}
func (*QPaymentResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_qpay_service_939ad209c216ddcf, []int{7}
}
func (m *QPaymentResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QPaymentResponse.Unmarshal(m, b)
}
func (m *QPaymentResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QPaymentResponse.Marshal(b, m, deterministic)
}
func (dst *QPaymentResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QPaymentResponse.Merge(dst, src)
}
func (m *QPaymentResponse) XXX_Size() int {
	return xxx_messageInfo_QPaymentResponse.Size(m)
}
func (m *QPaymentResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QPaymentResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QPaymentResponse proto.InternalMessageInfo

func (m *QPaymentResponse) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *QPaymentResponse) GetErrMsg() string {
	if m != nil {
		return m.ErrMsg
	}
	return ""
}

func (m *QPaymentResponse) GetBillNo() string {
	if m != nil {
		return m.BillNo
	}
	return ""
}

// 检查签名请求
type CheckQPaySignRequest struct {
	SignType             string   `protobuf:"bytes,1,opt,name=SignType,proto3" json:"SignType,omitempty"`
	Sign                 string   `protobuf:"bytes,2,opt,name=Sign,proto3" json:"Sign,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CheckQPaySignRequest) Reset()         { *m = CheckQPaySignRequest{} }
func (m *CheckQPaySignRequest) String() string { return proto.CompactTextString(m) }
func (*CheckQPaySignRequest) ProtoMessage()    {}
func (*CheckQPaySignRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_qpay_service_939ad209c216ddcf, []int{8}
}
func (m *CheckQPaySignRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckQPaySignRequest.Unmarshal(m, b)
}
func (m *CheckQPaySignRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckQPaySignRequest.Marshal(b, m, deterministic)
}
func (dst *CheckQPaySignRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckQPaySignRequest.Merge(dst, src)
}
func (m *CheckQPaySignRequest) XXX_Size() int {
	return xxx_messageInfo_CheckQPaySignRequest.Size(m)
}
func (m *CheckQPaySignRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckQPaySignRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CheckQPaySignRequest proto.InternalMessageInfo

func (m *CheckQPaySignRequest) GetSignType() string {
	if m != nil {
		return m.SignType
	}
	return ""
}

func (m *CheckQPaySignRequest) GetSign() string {
	if m != nil {
		return m.Sign
	}
	return ""
}

// 检查签名响应
type CheckQPaySignResponse struct {
	SignOk               bool     `protobuf:"varint,1,opt,name=SignOk,proto3" json:"SignOk,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CheckQPaySignResponse) Reset()         { *m = CheckQPaySignResponse{} }
func (m *CheckQPaySignResponse) String() string { return proto.CompactTextString(m) }
func (*CheckQPaySignResponse) ProtoMessage()    {}
func (*CheckQPaySignResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_qpay_service_939ad209c216ddcf, []int{9}
}
func (m *CheckQPaySignResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckQPaySignResponse.Unmarshal(m, b)
}
func (m *CheckQPaySignResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckQPaySignResponse.Marshal(b, m, deterministic)
}
func (dst *CheckQPaySignResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckQPaySignResponse.Merge(dst, src)
}
func (m *CheckQPaySignResponse) XXX_Size() int {
	return xxx_messageInfo_CheckQPaySignResponse.Size(m)
}
func (m *CheckQPaySignResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckQPaySignResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CheckQPaySignResponse proto.InternalMessageInfo

func (m *CheckQPaySignResponse) GetSignOk() bool {
	if m != nil {
		return m.SignOk
	}
	return false
}

// 付款请求
type CardTransferRequest struct {
	// 商户订单号
	OrderNo string `protobuf:"bytes,1,opt,name=OrderNo,proto3" json:"OrderNo,omitempty"`
	// 银行编号
	BankCode string `protobuf:"bytes,2,opt,name=BankCode,proto3" json:"BankCode,omitempty"`
	// 是否为对公转账
	TransferToCompany bool `protobuf:"varint,3,opt,name=TransferToCompany,proto3" json:"TransferToCompany,omitempty"`
	// 付款金额,实际金额*100,无小数
	TradeFee int32 `protobuf:"varint,4,opt,name=TradeFee,proto3" json:"TradeFee,omitempty"`
	// 付款事由
	Subject string `protobuf:"bytes,5,opt,name=Subject,proto3" json:"Subject,omitempty"`
	// 省份
	Province string `protobuf:"bytes,6,opt,name=Province,proto3" json:"Province,omitempty"`
	// 城市
	City string `protobuf:"bytes,7,opt,name=City,proto3" json:"City,omitempty"`
	// 支行信息
	StoreName            string   `protobuf:"bytes,8,opt,name=StoreName,proto3" json:"StoreName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CardTransferRequest) Reset()         { *m = CardTransferRequest{} }
func (m *CardTransferRequest) String() string { return proto.CompactTextString(m) }
func (*CardTransferRequest) ProtoMessage()    {}
func (*CardTransferRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_qpay_service_939ad209c216ddcf, []int{10}
}
func (m *CardTransferRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CardTransferRequest.Unmarshal(m, b)
}
func (m *CardTransferRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CardTransferRequest.Marshal(b, m, deterministic)
}
func (dst *CardTransferRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CardTransferRequest.Merge(dst, src)
}
func (m *CardTransferRequest) XXX_Size() int {
	return xxx_messageInfo_CardTransferRequest.Size(m)
}
func (m *CardTransferRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CardTransferRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CardTransferRequest proto.InternalMessageInfo

func (m *CardTransferRequest) GetOrderNo() string {
	if m != nil {
		return m.OrderNo
	}
	return ""
}

func (m *CardTransferRequest) GetBankCode() string {
	if m != nil {
		return m.BankCode
	}
	return ""
}

func (m *CardTransferRequest) GetTransferToCompany() bool {
	if m != nil {
		return m.TransferToCompany
	}
	return false
}

func (m *CardTransferRequest) GetTradeFee() int32 {
	if m != nil {
		return m.TradeFee
	}
	return 0
}

func (m *CardTransferRequest) GetSubject() string {
	if m != nil {
		return m.Subject
	}
	return ""
}

func (m *CardTransferRequest) GetProvince() string {
	if m != nil {
		return m.Province
	}
	return ""
}

func (m *CardTransferRequest) GetCity() string {
	if m != nil {
		return m.City
	}
	return ""
}

func (m *CardTransferRequest) GetStoreName() string {
	if m != nil {
		return m.StoreName
	}
	return ""
}

// 批量付款请求
type BatchTransferRequest struct {
	// 批量付款订单号（要保证唯一）,最大长度50个字符，最小长度10个字符
	BatchTradeNo string `protobuf:"bytes,1,opt,name=BatchTradeNo,proto3" json:"BatchTradeNo,omitempty"`
	// 付款总金额,实际金额*100,无小数
	BatchTradeFee int32 `protobuf:"varint,2,opt,name=BatchTradeFee,proto3" json:"BatchTradeFee,omitempty"`
	// 批量付款记录
	BatchList []*CardTransferRequest `protobuf:"bytes,3,rep,name=BatchList,proto3" json:"BatchList,omitempty"`
	// 异步通知地址,非必填
	NotifyUrl string `protobuf:"bytes,6,opt,name=NotifyUrl,proto3" json:"NotifyUrl,omitempty"`
	// 自定义数据
	Nonce string `protobuf:"bytes,7,opt,name=Nonce,proto3" json:"Nonce,omitempty"`
	// 安全码+随机内容md5后的字符串
	SafeSign             string   `protobuf:"bytes,8,opt,name=SafeSign,proto3" json:"SafeSign,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BatchTransferRequest) Reset()         { *m = BatchTransferRequest{} }
func (m *BatchTransferRequest) String() string { return proto.CompactTextString(m) }
func (*BatchTransferRequest) ProtoMessage()    {}
func (*BatchTransferRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_qpay_service_939ad209c216ddcf, []int{11}
}
func (m *BatchTransferRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BatchTransferRequest.Unmarshal(m, b)
}
func (m *BatchTransferRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BatchTransferRequest.Marshal(b, m, deterministic)
}
func (dst *BatchTransferRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BatchTransferRequest.Merge(dst, src)
}
func (m *BatchTransferRequest) XXX_Size() int {
	return xxx_messageInfo_BatchTransferRequest.Size(m)
}
func (m *BatchTransferRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BatchTransferRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BatchTransferRequest proto.InternalMessageInfo

func (m *BatchTransferRequest) GetBatchTradeNo() string {
	if m != nil {
		return m.BatchTradeNo
	}
	return ""
}

func (m *BatchTransferRequest) GetBatchTradeFee() int32 {
	if m != nil {
		return m.BatchTradeFee
	}
	return 0
}

func (m *BatchTransferRequest) GetBatchList() []*CardTransferRequest {
	if m != nil {
		return m.BatchList
	}
	return nil
}

func (m *BatchTransferRequest) GetNotifyUrl() string {
	if m != nil {
		return m.NotifyUrl
	}
	return ""
}

func (m *BatchTransferRequest) GetNonce() string {
	if m != nil {
		return m.Nonce
	}
	return ""
}

func (m *BatchTransferRequest) GetSafeSign() string {
	if m != nil {
		return m.SafeSign
	}
	return ""
}

// 批量付款响应
type BatchTransferResponse struct {
	// 状态码，0表示成功
	Code string `protobuf:"bytes,1,opt,name=Code,proto3" json:"Code,omitempty"`
	// 错误信息,成功返回空
	ErrMsg string `protobuf:"bytes,2,opt,name=ErrMsg,proto3" json:"ErrMsg,omitempty"`
	// 签名
	Sign                 string   `protobuf:"bytes,3,opt,name=Sign,proto3" json:"Sign,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BatchTransferResponse) Reset()         { *m = BatchTransferResponse{} }
func (m *BatchTransferResponse) String() string { return proto.CompactTextString(m) }
func (*BatchTransferResponse) ProtoMessage()    {}
func (*BatchTransferResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_qpay_service_939ad209c216ddcf, []int{12}
}
func (m *BatchTransferResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BatchTransferResponse.Unmarshal(m, b)
}
func (m *BatchTransferResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BatchTransferResponse.Marshal(b, m, deterministic)
}
func (dst *BatchTransferResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BatchTransferResponse.Merge(dst, src)
}
func (m *BatchTransferResponse) XXX_Size() int {
	return xxx_messageInfo_BatchTransferResponse.Size(m)
}
func (m *BatchTransferResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_BatchTransferResponse.DiscardUnknown(m)
}

var xxx_messageInfo_BatchTransferResponse proto.InternalMessageInfo

func (m *BatchTransferResponse) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *BatchTransferResponse) GetErrMsg() string {
	if m != nil {
		return m.ErrMsg
	}
	return ""
}

func (m *BatchTransferResponse) GetSign() string {
	if m != nil {
		return m.Sign
	}
	return ""
}

func init() {
	proto.RegisterType((*BankCardNo)(nil), "BankCardNo")
	proto.RegisterType((*CardBinQueryResponse)(nil), "CardBinQueryResponse")
	proto.RegisterType((*BankAuthRequest)(nil), "BankAuthRequest")
	proto.RegisterType((*BankAuthResponse)(nil), "BankAuthResponse")
	proto.RegisterMapType((map[string]string)(nil), "BankAuthResponse.AuthDataEntry")
	proto.RegisterType((*BankAuthQueryRequest)(nil), "BankAuthQueryRequest")
	proto.RegisterType((*BankAuthQueryResponse)(nil), "BankAuthQueryResponse")
	proto.RegisterType((*QPaymentRequest)(nil), "QPaymentRequest")
	proto.RegisterType((*QPaymentResponse)(nil), "QPaymentResponse")
	proto.RegisterType((*CheckQPaySignRequest)(nil), "CheckQPaySignRequest")
	proto.RegisterType((*CheckQPaySignResponse)(nil), "CheckQPaySignResponse")
	proto.RegisterType((*CardTransferRequest)(nil), "CardTransferRequest")
	proto.RegisterType((*BatchTransferRequest)(nil), "BatchTransferRequest")
	proto.RegisterType((*BatchTransferResponse)(nil), "BatchTransferResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// QuickPayServiceClient is the client API for QuickPayService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type QuickPayServiceClient interface {
	// 银行卡信息查询
	QueryCardBin(ctx context.Context, in *BankCardNo, opts ...grpc.CallOption) (*CardBinQueryResponse, error)
	// 检查签名,用于回调时判断参数正确
	CheckSign(ctx context.Context, in *CheckQPaySignRequest, opts ...grpc.CallOption) (*CheckQPaySignResponse, error)
	// 申请银行侧认证授权(某些银行需跳转到银行页面进行授权)
	RequestBankSideAuth(ctx context.Context, in *BankAuthRequest, opts ...grpc.CallOption) (*BankAuthResponse, error)
	// 查询银行认证授权结果(根据申请认证的随机Id或者银行卡号)
	QueryBankAuthResult(ctx context.Context, in *BankAuthQueryRequest, opts ...grpc.CallOption) (*BankAuthQueryResponse, error)
	// 直接支付
	DirectPayment(ctx context.Context, in *QPaymentRequest, opts ...grpc.CallOption) (*QPaymentResponse, error)
	// 批量付款
	BatchTransfer(ctx context.Context, in *BatchTransferRequest, opts ...grpc.CallOption) (*BatchTransferResponse, error)
}

type quickPayServiceClient struct {
	cc *grpc.ClientConn
}

func NewQuickPayServiceClient(cc *grpc.ClientConn) QuickPayServiceClient {
	return &quickPayServiceClient{cc}
}

func (c *quickPayServiceClient) QueryCardBin(ctx context.Context, in *BankCardNo, opts ...grpc.CallOption) (*CardBinQueryResponse, error) {
	out := new(CardBinQueryResponse)
	err := c.cc.Invoke(ctx, "/QuickPayService/QueryCardBin", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *quickPayServiceClient) CheckSign(ctx context.Context, in *CheckQPaySignRequest, opts ...grpc.CallOption) (*CheckQPaySignResponse, error) {
	out := new(CheckQPaySignResponse)
	err := c.cc.Invoke(ctx, "/QuickPayService/CheckSign", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *quickPayServiceClient) RequestBankSideAuth(ctx context.Context, in *BankAuthRequest, opts ...grpc.CallOption) (*BankAuthResponse, error) {
	out := new(BankAuthResponse)
	err := c.cc.Invoke(ctx, "/QuickPayService/RequestBankSideAuth", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *quickPayServiceClient) QueryBankAuthResult(ctx context.Context, in *BankAuthQueryRequest, opts ...grpc.CallOption) (*BankAuthQueryResponse, error) {
	out := new(BankAuthQueryResponse)
	err := c.cc.Invoke(ctx, "/QuickPayService/QueryBankAuthResult", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *quickPayServiceClient) DirectPayment(ctx context.Context, in *QPaymentRequest, opts ...grpc.CallOption) (*QPaymentResponse, error) {
	out := new(QPaymentResponse)
	err := c.cc.Invoke(ctx, "/QuickPayService/DirectPayment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *quickPayServiceClient) BatchTransfer(ctx context.Context, in *BatchTransferRequest, opts ...grpc.CallOption) (*BatchTransferResponse, error) {
	out := new(BatchTransferResponse)
	err := c.cc.Invoke(ctx, "/QuickPayService/BatchTransfer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// QuickPayServiceServer is the server API for QuickPayService service.
type QuickPayServiceServer interface {
	// 银行卡信息查询
	QueryCardBin(context.Context, *BankCardNo) (*CardBinQueryResponse, error)
	// 检查签名,用于回调时判断参数正确
	CheckSign(context.Context, *CheckQPaySignRequest) (*CheckQPaySignResponse, error)
	// 申请银行侧认证授权(某些银行需跳转到银行页面进行授权)
	RequestBankSideAuth(context.Context, *BankAuthRequest) (*BankAuthResponse, error)
	// 查询银行认证授权结果(根据申请认证的随机Id或者银行卡号)
	QueryBankAuthResult(context.Context, *BankAuthQueryRequest) (*BankAuthQueryResponse, error)
	// 直接支付
	DirectPayment(context.Context, *QPaymentRequest) (*QPaymentResponse, error)
	// 批量付款
	BatchTransfer(context.Context, *BatchTransferRequest) (*BatchTransferResponse, error)
}

func RegisterQuickPayServiceServer(s *grpc.Server, srv QuickPayServiceServer) {
	s.RegisterService(&_QuickPayService_serviceDesc, srv)
}

func _QuickPayService_QueryCardBin_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BankCardNo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QuickPayServiceServer).QueryCardBin(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/QuickPayService/QueryCardBin",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QuickPayServiceServer).QueryCardBin(ctx, req.(*BankCardNo))
	}
	return interceptor(ctx, in, info, handler)
}

func _QuickPayService_CheckSign_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CheckQPaySignRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QuickPayServiceServer).CheckSign(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/QuickPayService/CheckSign",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QuickPayServiceServer).CheckSign(ctx, req.(*CheckQPaySignRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _QuickPayService_RequestBankSideAuth_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BankAuthRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QuickPayServiceServer).RequestBankSideAuth(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/QuickPayService/RequestBankSideAuth",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QuickPayServiceServer).RequestBankSideAuth(ctx, req.(*BankAuthRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _QuickPayService_QueryBankAuthResult_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BankAuthQueryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QuickPayServiceServer).QueryBankAuthResult(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/QuickPayService/QueryBankAuthResult",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QuickPayServiceServer).QueryBankAuthResult(ctx, req.(*BankAuthQueryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _QuickPayService_DirectPayment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QPaymentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QuickPayServiceServer).DirectPayment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/QuickPayService/DirectPayment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QuickPayServiceServer).DirectPayment(ctx, req.(*QPaymentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _QuickPayService_BatchTransfer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BatchTransferRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QuickPayServiceServer).BatchTransfer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/QuickPayService/BatchTransfer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QuickPayServiceServer).BatchTransfer(ctx, req.(*BatchTransferRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _QuickPayService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "QuickPayService",
	HandlerType: (*QuickPayServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "QueryCardBin",
			Handler:    _QuickPayService_QueryCardBin_Handler,
		},
		{
			MethodName: "CheckSign",
			Handler:    _QuickPayService_CheckSign_Handler,
		},
		{
			MethodName: "RequestBankSideAuth",
			Handler:    _QuickPayService_RequestBankSideAuth_Handler,
		},
		{
			MethodName: "QueryBankAuthResult",
			Handler:    _QuickPayService_QueryBankAuthResult_Handler,
		},
		{
			MethodName: "DirectPayment",
			Handler:    _QuickPayService_DirectPayment_Handler,
		},
		{
			MethodName: "BatchTransfer",
			Handler:    _QuickPayService_BatchTransfer_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "qpay_service.proto",
}

func init() { proto.RegisterFile("qpay_service.proto", fileDescriptor_qpay_service_939ad209c216ddcf) }

var fileDescriptor_qpay_service_939ad209c216ddcf = []byte{
	// 885 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x56, 0xdd, 0x6e, 0xe3, 0x44,
	0x14, 0x8e, 0x9b, 0x9f, 0x26, 0xa7, 0x5b, 0x35, 0x9d, 0xfc, 0xc8, 0x8a, 0xd0, 0x12, 0x8d, 0xf6,
	0x22, 0x17, 0x68, 0x40, 0x05, 0x21, 0x44, 0xb9, 0x80, 0x76, 0xb7, 0x52, 0x25, 0x36, 0xdb, 0x3a,
	0x5d, 0x90, 0xb8, 0x41, 0xae, 0x33, 0x4d, 0x4d, 0x12, 0x4f, 0x76, 0x6c, 0x57, 0xf2, 0x03, 0xf0,
	0x0c, 0x3c, 0x03, 0xef, 0xc0, 0x93, 0x70, 0xcd, 0x6b, 0x20, 0xa1, 0x33, 0x3f, 0x76, 0xe2, 0xba,
	0x5a, 0xb4, 0x7b, 0x95, 0xf9, 0xce, 0x99, 0x39, 0xe7, 0xcc, 0x39, 0x9f, 0xbf, 0x09, 0x90, 0x77,
	0x1b, 0x3f, 0xfb, 0x35, 0xe6, 0xf2, 0x21, 0x0c, 0x38, 0xdb, 0x48, 0x91, 0x08, 0xfa, 0x02, 0xe0,
	0xcc, 0x8f, 0x96, 0xe7, 0xbe, 0x9c, 0x4f, 0x05, 0x19, 0x42, 0x4b, 0xaf, 0x5c, 0x67, 0xec, 0x4c,
	0x3a, 0x9e, 0x41, 0xf4, 0x2f, 0x07, 0xfa, 0xb8, 0x3c, 0x0b, 0xa3, 0xeb, 0x94, 0xcb, 0xcc, 0xe3,
	0xf1, 0x46, 0x44, 0x31, 0x27, 0x23, 0x68, 0xe3, 0xf1, 0xa9, 0xbf, 0xe6, 0xe6, 0x48, 0x8e, 0xc9,
	0xf3, 0xed, 0xd0, 0xee, 0x9e, 0xf2, 0x6e, 0x27, 0x33, 0x67, 0xcf, 0xc5, 0x9c, 0xbb, 0xf5, 0xe2,
	0x2c, 0x62, 0xf4, 0xe1, 0xae, 0x9b, 0x6c, 0xc3, 0xdd, 0xc6, 0xd8, 0x99, 0x34, 0xbd, 0x1c, 0x93,
	0x2f, 0xa0, 0xe7, 0xf1, 0x77, 0x69, 0x28, 0x39, 0x6e, 0x9f, 0x85, 0x73, 0xfe, 0x43, 0x9a, 0xdc,
	0xbb, 0xcd, 0xb1, 0x33, 0x69, 0x7b, 0x55, 0x2e, 0xfa, 0xa7, 0x03, 0x47, 0x68, 0x40, 0x80, 0x7e,
	0x1e, 0x27, 0xc4, 0x85, 0xfd, 0xa9, 0x88, 0x02, 0x7e, 0x39, 0x37, 0x85, 0x5b, 0xf8, 0xde, 0xba,
	0x27, 0x26, 0x58, 0x10, 0x88, 0x34, 0x4a, 0xd4, 0xd5, 0x75, 0xf9, 0x65, 0x33, 0xb6, 0xf3, 0xb5,
	0xb8, 0x0d, 0x57, 0xfa, 0x0e, 0x1d, 0xcf, 0x20, 0xbc, 0xdd, 0xe5, 0xdc, 0xc4, 0x6f, 0xea, 0x9b,
	0x5b, 0x4c, 0xff, 0x76, 0xa0, 0x5b, 0xd4, 0x6a, 0xda, 0xfc, 0x74, 0xb1, 0x43, 0x68, 0xbd, 0x92,
	0xf2, 0x75, 0xbc, 0x30, 0x85, 0x1a, 0x84, 0x29, 0x30, 0xc2, 0x85, 0x90, 0x6b, 0xdb, 0x5c, 0x8b,
	0xc9, 0xa9, 0xf6, 0xbd, 0xf4, 0x13, 0xdf, 0x6d, 0x8c, 0xeb, 0x93, 0x83, 0x93, 0x4f, 0x59, 0x39,
	0x25, 0xb3, 0x3b, 0x5e, 0x45, 0x89, 0xcc, 0xbc, 0xfc, 0xc0, 0xe8, 0x14, 0x0e, 0x77, 0x5c, 0xa4,
	0x0b, 0xf5, 0x25, 0xcf, 0x4c, 0x5d, 0xb8, 0x24, 0x7d, 0x68, 0x3e, 0xf8, 0xab, 0x94, 0x9b, 0x92,
	0x34, 0xf8, 0x76, 0xef, 0x1b, 0x87, 0x5e, 0x41, 0xdf, 0x26, 0x32, 0x3c, 0xfa, 0xc8, 0x61, 0xd0,
	0x10, 0x06, 0xa5, 0x88, 0xa6, 0x65, 0x04, 0x1a, 0x8a, 0x59, 0x3a, 0x9e, 0x5a, 0x3f, 0xd9, 0xac,
	0x17, 0x70, 0x68, 0x83, 0xdc, 0x88, 0x25, 0x8f, 0x4c, 0xc7, 0x76, 0x8d, 0xf4, 0x8f, 0x3d, 0x38,
	0xba, 0xbe, 0xf2, 0xb3, 0x35, 0x8f, 0x92, 0xad, 0xc2, 0xdf, 0xc8, 0x39, 0x97, 0xf9, 0x17, 0x63,
	0x21, 0x0e, 0xe0, 0x46, 0xfa, 0x73, 0x7e, 0xc1, 0x75, 0x1f, 0x9a, 0x5e, 0x8e, 0xf1, 0xd4, 0x2c,
	0xbd, 0xfd, 0x8d, 0x07, 0x89, 0xc9, 0x64, 0xe1, 0xe3, 0x4a, 0x1a, 0x15, 0x95, 0x90, 0x31, 0x1c,
	0xa8, 0x58, 0x6f, 0x63, 0x2e, 0x2f, 0x37, 0x86, 0x42, 0xdb, 0x26, 0xf2, 0x09, 0x74, 0xa6, 0x22,
	0x09, 0xef, 0xb2, 0xb7, 0x72, 0xe5, 0xb6, 0x94, 0xbf, 0x30, 0xa0, 0xd7, 0xe3, 0x49, 0x2a, 0x23,
	0xf4, 0xee, 0x6b, 0x6f, 0x6e, 0xc0, 0xf1, 0xa9, 0xee, 0xbb, 0x6d, 0x3d, 0x3e, 0x05, 0xf0, 0x3e,
	0x33, 0xff, 0x8e, 0xcf, 0xc2, 0x45, 0xe4, 0x76, 0x34, 0xa1, 0x2c, 0xa6, 0x3f, 0x41, 0xb7, 0x68,
	0xcc, 0x07, 0xf4, 0x7f, 0x08, 0xad, 0xb3, 0x70, 0xb5, 0x9a, 0x0a, 0xd3, 0x0e, 0x83, 0xe8, 0x05,
	0xf4, 0xcf, 0xef, 0x79, 0xb0, 0xc4, 0xe0, 0x98, 0xc8, 0x76, 0x1d, 0x6b, 0x09, 0x17, 0x91, 0x52,
	0x07, 0xa3, 0x3a, 0x16, 0x63, 0x5e, 0x55, 0xa3, 0xce, 0xa0, 0xd6, 0xf4, 0x73, 0x18, 0x94, 0xe2,
	0x98, 0x22, 0x87, 0xd0, 0x42, 0xfc, 0x66, 0xa9, 0xc2, 0xb4, 0x3d, 0x83, 0xe8, 0xbf, 0x0e, 0xf4,
	0x94, 0xde, 0x48, 0x3f, 0x8a, 0xef, 0xb8, 0xfc, 0x5f, 0xe3, 0xce, 0xc5, 0x6c, 0xaf, 0x24, 0x66,
	0x9f, 0xc1, 0xb1, 0x0d, 0x74, 0x23, 0xce, 0xc5, 0x7a, 0xe3, 0x47, 0x99, 0xba, 0x69, 0xdb, 0x7b,
	0xec, 0xd8, 0x21, 0x4e, 0xe3, 0x69, 0xe2, 0x34, 0x77, 0x89, 0x33, 0x82, 0xf6, 0x95, 0x14, 0x0f,
	0x21, 0xce, 0x4d, 0xcf, 0x3b, 0xc7, 0x6a, 0x14, 0x61, 0x92, 0x99, 0x49, 0xab, 0x35, 0x52, 0x60,
	0x96, 0x08, 0xc9, 0x95, 0x7c, 0xe9, 0x41, 0x17, 0x06, 0xfa, 0x8f, 0x83, 0x1f, 0x6a, 0x12, 0xdc,
	0x97, 0x1b, 0x40, 0xe1, 0x99, 0xb5, 0xcf, 0x79, 0xde, 0x85, 0x1d, 0x9b, 0xe6, 0xb0, 0xc5, 0x05,
	0xfd, 0x77, 0x8d, 0xe4, 0x04, 0x3a, 0xca, 0xf0, 0x63, 0x18, 0xe3, 0x57, 0x80, 0x2a, 0xd4, 0x67,
	0x15, 0x3d, 0xf7, 0x8a, 0x6d, 0xef, 0x61, 0x75, 0xce, 0xdb, 0xfd, 0xa7, 0x78, 0xdb, 0x2e, 0xf1,
	0xf6, 0x67, 0x14, 0x8f, 0x9d, 0x5b, 0x7e, 0x00, 0x79, 0x2d, 0xe1, 0xea, 0x05, 0xe1, 0x4e, 0x7e,
	0xaf, 0xc3, 0xd1, 0x75, 0x1a, 0x06, 0x4b, 0x24, 0x9c, 0x7e, 0x6f, 0xc9, 0x57, 0xf0, 0x4c, 0x29,
	0x94, 0x79, 0x47, 0xc9, 0x01, 0x2b, 0x64, 0x6c, 0x34, 0x60, 0x55, 0xcf, 0x2b, 0xad, 0x91, 0xef,
	0xa0, 0xa3, 0xa8, 0x8b, 0x61, 0xc9, 0x80, 0x55, 0x7d, 0x0e, 0xa3, 0x21, 0xab, 0x64, 0xb7, 0x3a,
	0xdd, 0x33, 0x9b, 0xb6, 0xdf, 0x43, 0xd2, 0x65, 0xa5, 0xd7, 0x70, 0x74, 0xfc, 0xe8, 0x01, 0xa0,
	0x35, 0x72, 0x01, 0x3d, 0x55, 0xce, 0x96, 0x2b, 0x5d, 0x25, 0x64, 0xc0, 0xaa, 0x34, 0x7c, 0x34,
	0x64, 0x95, 0x42, 0x4c, 0x6b, 0xe4, 0x6b, 0x38, 0x7c, 0x19, 0x4a, 0x1e, 0x24, 0x46, 0x23, 0x48,
	0x97, 0x95, 0x74, 0x74, 0x74, 0xcc, 0xca, 0x02, 0x42, 0x6b, 0xe4, 0xfb, 0x82, 0x48, 0x6a, 0x3c,
	0x2a, 0xf3, 0x63, 0x52, 0xaa, 0xcc, 0x15, 0x53, 0xa4, 0xb5, 0xb3, 0xe7, 0xd0, 0x0b, 0xc4, 0x9a,
	0x2d, 0xc2, 0xe4, 0x3e, 0xbd, 0x65, 0x0b, 0x71, 0x22, 0x98, 0xdc, 0x04, 0xbf, 0xec, 0xb3, 0x53,
	0xf5, 0xef, 0xe7, 0xb6, 0xa5, 0x7e, 0xbe, 0xfc, 0x2f, 0x00, 0x00, 0xff, 0xff, 0x33, 0xec, 0x08,
	0xcd, 0x1a, 0x09, 0x00, 0x00,
}
