// Code generated by protoc-gen-go. DO NOT EDIT.
// source: wallet_service.proto

package proto // import "."

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// * 钱包类型
type EWalletType int32

const (
	EWalletType__6 EWalletType = 0
	// * 个人钱包
	EWalletType_TPerson EWalletType = 1
	// * 商家钱包
	EWalletType_TMerchant EWalletType = 2
)

var EWalletType_name = map[int32]string{
	0: "_6",
	1: "TPerson",
	2: "TMerchant",
}
var EWalletType_value = map[string]int32{
	"_6":        0,
	"TPerson":   1,
	"TMerchant": 2,
}

func (x EWalletType) String() string {
	return proto.EnumName(EWalletType_name, int32(x))
}
func (EWalletType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_wallet_service_98fe8585a6a21f3c, []int{0}
}

// * 钱包标志
type EWalletFlag int32

const (
	EWalletFlag__7 EWalletFlag = 0
	// * 抵扣
	EWalletFlag_FlagDiscount EWalletFlag = 1
	// * 充值
	EWalletFlag_FlagCharge EWalletFlag = 2
)

var EWalletFlag_name = map[int32]string{
	0: "_7",
	1: "FlagDiscount",
	2: "FlagCharge",
}
var EWalletFlag_value = map[string]int32{
	"_7":           0,
	"FlagDiscount": 1,
	"FlagCharge":   2,
}

func (x EWalletFlag) String() string {
	return proto.EnumName(EWalletFlag_name, int32(x))
}
func (EWalletFlag) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_wallet_service_98fe8585a6a21f3c, []int{1}
}

// * 充值方式
type EChargeKind int32

const (
	EChargeKind__8 EChargeKind = 0
	// * 用户充值
	EChargeKind_CUserCharge EChargeKind = 1
	// * 系统自动充值
	EChargeKind_CSystemCharge EChargeKind = 2
	// * 客服充值
	EChargeKind_CServiceAgentCharge EChargeKind = 3
	// * 退款充值
	EChargeKind_CRefundCharge EChargeKind = 4
)

var EChargeKind_name = map[int32]string{
	0: "_8",
	1: "CUserCharge",
	2: "CSystemCharge",
	3: "CServiceAgentCharge",
	4: "CRefundCharge",
}
var EChargeKind_value = map[string]int32{
	"_8":                  0,
	"CUserCharge":         1,
	"CSystemCharge":       2,
	"CServiceAgentCharge": 3,
	"CRefundCharge":       4,
}

func (x EChargeKind) String() string {
	return proto.EnumName(EChargeKind_name, int32(x))
}
func (EChargeKind) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_wallet_service_98fe8585a6a21f3c, []int{2}
}

// * 钱包日志种类
type EWalletLogKind int32

const (
	EWalletLogKind__9 EWalletLogKind = 0
	// * 赠送金额
	EWalletLogKind_KCharge EWalletLogKind = 1
	// * 客服赠送
	EWalletLogKind_KServiceAgentCharge EWalletLogKind = 2
	// * 钱包收入
	EWalletLogKind_KIncome EWalletLogKind = 3
	// * 失效
	EWalletLogKind_KExpired EWalletLogKind = 4
	// * 客服调整
	EWalletLogKind_KAdjust EWalletLogKind = 5
	// * 扣除
	EWalletLogKind_KDiscount EWalletLogKind = 6
	// * 转入
	EWalletLogKind_KTransferIn EWalletLogKind = 7
	// * 转出
	EWalletLogKind_KTransferOut EWalletLogKind = 8
	// * 冻结
	EWalletLogKind_KFreeze EWalletLogKind = 9
	// * 解冻
	EWalletLogKind_KUnfreeze EWalletLogKind = 10
	// * 转账退款
	EWalletLogKind_KTransferRefund EWalletLogKind = 11
	// * 提现退还到银行卡
	EWalletLogKind_KTakeOutRefund EWalletLogKind = 12
	// * 支付单退款
	EWalletLogKind_KPaymentOrderRefund EWalletLogKind = 13
	// * 提现到银行卡(人工提现)
	EWalletLogKind_KTakeOutToBankCard EWalletLogKind = 14
	// * 提现到第三方
	EWalletLogKind_KTakeOutToThirdPart EWalletLogKind = 15
)

var EWalletLogKind_name = map[int32]string{
	0:  "_9",
	1:  "KCharge",
	2:  "KServiceAgentCharge",
	3:  "KIncome",
	4:  "KExpired",
	5:  "KAdjust",
	6:  "KDiscount",
	7:  "KTransferIn",
	8:  "KTransferOut",
	9:  "KFreeze",
	10: "KUnfreeze",
	11: "KTransferRefund",
	12: "KTakeOutRefund",
	13: "KPaymentOrderRefund",
	14: "KTakeOutToBankCard",
	15: "KTakeOutToThirdPart",
}
var EWalletLogKind_value = map[string]int32{
	"_9":                  0,
	"KCharge":             1,
	"KServiceAgentCharge": 2,
	"KIncome":             3,
	"KExpired":            4,
	"KAdjust":             5,
	"KDiscount":           6,
	"KTransferIn":         7,
	"KTransferOut":        8,
	"KFreeze":             9,
	"KUnfreeze":           10,
	"KTransferRefund":     11,
	"KTakeOutRefund":      12,
	"KPaymentOrderRefund": 13,
	"KTakeOutToBankCard":  14,
	"KTakeOutToThirdPart": 15,
}

func (x EWalletLogKind) String() string {
	return proto.EnumName(EWalletLogKind_name, int32(x))
}
func (EWalletLogKind) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_wallet_service_98fe8585a6a21f3c, []int{3}
}

type CreateWalletRequest struct {
	// 用户编号
	UserId int64 `protobuf:"varint,1,opt,name=UserId,proto3" json:"UserId,omitempty"`
	// 钱包名称
	WalletName string `protobuf:"bytes,4,opt,name=WalletName,proto3" json:"WalletName,omitempty"`
	// 钱包类型
	WalletType int32 `protobuf:"varint,2,opt,name=walletType,proto3" json:"walletType,omitempty"`
	// 钱包标志
	WalletFlag           int32    `protobuf:"varint,3,opt,name=WalletFlag,proto3" json:"WalletFlag,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateWalletRequest) Reset()         { *m = CreateWalletRequest{} }
func (m *CreateWalletRequest) String() string { return proto.CompactTextString(m) }
func (*CreateWalletRequest) ProtoMessage()    {}
func (*CreateWalletRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_wallet_service_98fe8585a6a21f3c, []int{0}
}
func (m *CreateWalletRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateWalletRequest.Unmarshal(m, b)
}
func (m *CreateWalletRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateWalletRequest.Marshal(b, m, deterministic)
}
func (dst *CreateWalletRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateWalletRequest.Merge(dst, src)
}
func (m *CreateWalletRequest) XXX_Size() int {
	return xxx_messageInfo_CreateWalletRequest.Size(m)
}
func (m *CreateWalletRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateWalletRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateWalletRequest proto.InternalMessageInfo

func (m *CreateWalletRequest) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *CreateWalletRequest) GetWalletName() string {
	if m != nil {
		return m.WalletName
	}
	return ""
}

func (m *CreateWalletRequest) GetWalletType() int32 {
	if m != nil {
		return m.WalletType
	}
	return 0
}

func (m *CreateWalletRequest) GetWalletFlag() int32 {
	if m != nil {
		return m.WalletFlag
	}
	return 0
}

type GetWalletRequest struct {
	UserId               int64    `protobuf:"zigzag64,1,opt,name=userId,proto3" json:"userId,omitempty"`
	WalletType           int32    `protobuf:"zigzag32,2,opt,name=walletType,proto3" json:"walletType,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetWalletRequest) Reset()         { *m = GetWalletRequest{} }
func (m *GetWalletRequest) String() string { return proto.CompactTextString(m) }
func (*GetWalletRequest) ProtoMessage()    {}
func (*GetWalletRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_wallet_service_98fe8585a6a21f3c, []int{1}
}
func (m *GetWalletRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetWalletRequest.Unmarshal(m, b)
}
func (m *GetWalletRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetWalletRequest.Marshal(b, m, deterministic)
}
func (dst *GetWalletRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetWalletRequest.Merge(dst, src)
}
func (m *GetWalletRequest) XXX_Size() int {
	return xxx_messageInfo_GetWalletRequest.Size(m)
}
func (m *GetWalletRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetWalletRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetWalletRequest proto.InternalMessageInfo

func (m *GetWalletRequest) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *GetWalletRequest) GetWalletType() int32 {
	if m != nil {
		return m.WalletType
	}
	return 0
}

type WalletLogIDRequest struct {
	WalletId             int64    `protobuf:"zigzag64,1,opt,name=walletId,proto3" json:"walletId,omitempty"`
	Id                   int64    `protobuf:"zigzag64,2,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WalletLogIDRequest) Reset()         { *m = WalletLogIDRequest{} }
func (m *WalletLogIDRequest) String() string { return proto.CompactTextString(m) }
func (*WalletLogIDRequest) ProtoMessage()    {}
func (*WalletLogIDRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_wallet_service_98fe8585a6a21f3c, []int{2}
}
func (m *WalletLogIDRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WalletLogIDRequest.Unmarshal(m, b)
}
func (m *WalletLogIDRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WalletLogIDRequest.Marshal(b, m, deterministic)
}
func (dst *WalletLogIDRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WalletLogIDRequest.Merge(dst, src)
}
func (m *WalletLogIDRequest) XXX_Size() int {
	return xxx_messageInfo_WalletLogIDRequest.Size(m)
}
func (m *WalletLogIDRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_WalletLogIDRequest.DiscardUnknown(m)
}

var xxx_messageInfo_WalletLogIDRequest proto.InternalMessageInfo

func (m *WalletLogIDRequest) GetWalletId() int64 {
	if m != nil {
		return m.WalletId
	}
	return 0
}

func (m *WalletLogIDRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type AdjustRequest struct {
	WalletId             int64    `protobuf:"zigzag64,1,opt,name=walletId,proto3" json:"walletId,omitempty"`
	Value                int32    `protobuf:"zigzag32,2,opt,name=value,proto3" json:"value,omitempty"`
	Title                string   `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	OuterNo              string   `protobuf:"bytes,4,opt,name=outerNo,proto3" json:"outerNo,omitempty"`
	OprUid               int32    `protobuf:"zigzag32,5,opt,name=oprUid,proto3" json:"oprUid,omitempty"`
	OprName              string   `protobuf:"bytes,6,opt,name=oprName,proto3" json:"oprName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AdjustRequest) Reset()         { *m = AdjustRequest{} }
func (m *AdjustRequest) String() string { return proto.CompactTextString(m) }
func (*AdjustRequest) ProtoMessage()    {}
func (*AdjustRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_wallet_service_98fe8585a6a21f3c, []int{3}
}
func (m *AdjustRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AdjustRequest.Unmarshal(m, b)
}
func (m *AdjustRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AdjustRequest.Marshal(b, m, deterministic)
}
func (dst *AdjustRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AdjustRequest.Merge(dst, src)
}
func (m *AdjustRequest) XXX_Size() int {
	return xxx_messageInfo_AdjustRequest.Size(m)
}
func (m *AdjustRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AdjustRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AdjustRequest proto.InternalMessageInfo

func (m *AdjustRequest) GetWalletId() int64 {
	if m != nil {
		return m.WalletId
	}
	return 0
}

func (m *AdjustRequest) GetValue() int32 {
	if m != nil {
		return m.Value
	}
	return 0
}

func (m *AdjustRequest) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *AdjustRequest) GetOuterNo() string {
	if m != nil {
		return m.OuterNo
	}
	return ""
}

func (m *AdjustRequest) GetOprUid() int32 {
	if m != nil {
		return m.OprUid
	}
	return 0
}

func (m *AdjustRequest) GetOprName() string {
	if m != nil {
		return m.OprName
	}
	return ""
}

type DiscountRequest struct {
	WalletId             int64    `protobuf:"zigzag64,1,opt,name=walletId,proto3" json:"walletId,omitempty"`
	Value                int32    `protobuf:"zigzag32,2,opt,name=value,proto3" json:"value,omitempty"`
	Title                string   `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	OuterNo              string   `protobuf:"bytes,4,opt,name=outerNo,proto3" json:"outerNo,omitempty"`
	Must                 bool     `protobuf:"varint,5,opt,name=must,proto3" json:"must,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DiscountRequest) Reset()         { *m = DiscountRequest{} }
func (m *DiscountRequest) String() string { return proto.CompactTextString(m) }
func (*DiscountRequest) ProtoMessage()    {}
func (*DiscountRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_wallet_service_98fe8585a6a21f3c, []int{4}
}
func (m *DiscountRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DiscountRequest.Unmarshal(m, b)
}
func (m *DiscountRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DiscountRequest.Marshal(b, m, deterministic)
}
func (dst *DiscountRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DiscountRequest.Merge(dst, src)
}
func (m *DiscountRequest) XXX_Size() int {
	return xxx_messageInfo_DiscountRequest.Size(m)
}
func (m *DiscountRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DiscountRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DiscountRequest proto.InternalMessageInfo

func (m *DiscountRequest) GetWalletId() int64 {
	if m != nil {
		return m.WalletId
	}
	return 0
}

func (m *DiscountRequest) GetValue() int32 {
	if m != nil {
		return m.Value
	}
	return 0
}

func (m *DiscountRequest) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *DiscountRequest) GetOuterNo() string {
	if m != nil {
		return m.OuterNo
	}
	return ""
}

func (m *DiscountRequest) GetMust() bool {
	if m != nil {
		return m.Must
	}
	return false
}

type FreezeRequest struct {
	WalletId             int64    `protobuf:"zigzag64,1,opt,name=walletId,proto3" json:"walletId,omitempty"`
	Value                int32    `protobuf:"zigzag32,2,opt,name=value,proto3" json:"value,omitempty"`
	Title                string   `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	OuterNo              string   `protobuf:"bytes,4,opt,name=outerNo,proto3" json:"outerNo,omitempty"`
	OprUid               int32    `protobuf:"zigzag32,5,opt,name=oprUid,proto3" json:"oprUid,omitempty"`
	OprName              string   `protobuf:"bytes,6,opt,name=oprName,proto3" json:"oprName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FreezeRequest) Reset()         { *m = FreezeRequest{} }
func (m *FreezeRequest) String() string { return proto.CompactTextString(m) }
func (*FreezeRequest) ProtoMessage()    {}
func (*FreezeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_wallet_service_98fe8585a6a21f3c, []int{5}
}
func (m *FreezeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FreezeRequest.Unmarshal(m, b)
}
func (m *FreezeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FreezeRequest.Marshal(b, m, deterministic)
}
func (dst *FreezeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FreezeRequest.Merge(dst, src)
}
func (m *FreezeRequest) XXX_Size() int {
	return xxx_messageInfo_FreezeRequest.Size(m)
}
func (m *FreezeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FreezeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FreezeRequest proto.InternalMessageInfo

func (m *FreezeRequest) GetWalletId() int64 {
	if m != nil {
		return m.WalletId
	}
	return 0
}

func (m *FreezeRequest) GetValue() int32 {
	if m != nil {
		return m.Value
	}
	return 0
}

func (m *FreezeRequest) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *FreezeRequest) GetOuterNo() string {
	if m != nil {
		return m.OuterNo
	}
	return ""
}

func (m *FreezeRequest) GetOprUid() int32 {
	if m != nil {
		return m.OprUid
	}
	return 0
}

func (m *FreezeRequest) GetOprName() string {
	if m != nil {
		return m.OprName
	}
	return ""
}

type UnfreezeRequest struct {
	WalletId             int64    `protobuf:"zigzag64,1,opt,name=walletId,proto3" json:"walletId,omitempty"`
	Value                int32    `protobuf:"zigzag32,2,opt,name=value,proto3" json:"value,omitempty"`
	Title                string   `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	OuterNo              string   `protobuf:"bytes,4,opt,name=outerNo,proto3" json:"outerNo,omitempty"`
	OprUid               int32    `protobuf:"zigzag32,5,opt,name=oprUid,proto3" json:"oprUid,omitempty"`
	OprName              string   `protobuf:"bytes,6,opt,name=oprName,proto3" json:"oprName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UnfreezeRequest) Reset()         { *m = UnfreezeRequest{} }
func (m *UnfreezeRequest) String() string { return proto.CompactTextString(m) }
func (*UnfreezeRequest) ProtoMessage()    {}
func (*UnfreezeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_wallet_service_98fe8585a6a21f3c, []int{6}
}
func (m *UnfreezeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UnfreezeRequest.Unmarshal(m, b)
}
func (m *UnfreezeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UnfreezeRequest.Marshal(b, m, deterministic)
}
func (dst *UnfreezeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UnfreezeRequest.Merge(dst, src)
}
func (m *UnfreezeRequest) XXX_Size() int {
	return xxx_messageInfo_UnfreezeRequest.Size(m)
}
func (m *UnfreezeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UnfreezeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UnfreezeRequest proto.InternalMessageInfo

func (m *UnfreezeRequest) GetWalletId() int64 {
	if m != nil {
		return m.WalletId
	}
	return 0
}

func (m *UnfreezeRequest) GetValue() int32 {
	if m != nil {
		return m.Value
	}
	return 0
}

func (m *UnfreezeRequest) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *UnfreezeRequest) GetOuterNo() string {
	if m != nil {
		return m.OuterNo
	}
	return ""
}

func (m *UnfreezeRequest) GetOprUid() int32 {
	if m != nil {
		return m.OprUid
	}
	return 0
}

func (m *UnfreezeRequest) GetOprName() string {
	if m != nil {
		return m.OprName
	}
	return ""
}

type ChargeRequest struct {
	WalletId             int64    `protobuf:"zigzag64,1,opt,name=walletId,proto3" json:"walletId,omitempty"`
	Value                int32    `protobuf:"zigzag32,2,opt,name=value,proto3" json:"value,omitempty"`
	By                   int32    `protobuf:"zigzag32,3,opt,name=by,proto3" json:"by,omitempty"`
	Title                string   `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
	OuterNo              string   `protobuf:"bytes,5,opt,name=outerNo,proto3" json:"outerNo,omitempty"`
	OprUid               int32    `protobuf:"zigzag32,6,opt,name=oprUid,proto3" json:"oprUid,omitempty"`
	OprName              string   `protobuf:"bytes,7,opt,name=oprName,proto3" json:"oprName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChargeRequest) Reset()         { *m = ChargeRequest{} }
func (m *ChargeRequest) String() string { return proto.CompactTextString(m) }
func (*ChargeRequest) ProtoMessage()    {}
func (*ChargeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_wallet_service_98fe8585a6a21f3c, []int{7}
}
func (m *ChargeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChargeRequest.Unmarshal(m, b)
}
func (m *ChargeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChargeRequest.Marshal(b, m, deterministic)
}
func (dst *ChargeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChargeRequest.Merge(dst, src)
}
func (m *ChargeRequest) XXX_Size() int {
	return xxx_messageInfo_ChargeRequest.Size(m)
}
func (m *ChargeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ChargeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ChargeRequest proto.InternalMessageInfo

func (m *ChargeRequest) GetWalletId() int64 {
	if m != nil {
		return m.WalletId
	}
	return 0
}

func (m *ChargeRequest) GetValue() int32 {
	if m != nil {
		return m.Value
	}
	return 0
}

func (m *ChargeRequest) GetBy() int32 {
	if m != nil {
		return m.By
	}
	return 0
}

func (m *ChargeRequest) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *ChargeRequest) GetOuterNo() string {
	if m != nil {
		return m.OuterNo
	}
	return ""
}

func (m *ChargeRequest) GetOprUid() int32 {
	if m != nil {
		return m.OprUid
	}
	return 0
}

func (m *ChargeRequest) GetOprName() string {
	if m != nil {
		return m.OprName
	}
	return ""
}

type TransferRequest struct {
	WalletId             int64    `protobuf:"zigzag64,1,opt,name=walletId,proto3" json:"walletId,omitempty"`
	ToWalletId           int64    `protobuf:"zigzag64,2,opt,name=toWalletId,proto3" json:"toWalletId,omitempty"`
	Value                int32    `protobuf:"zigzag32,3,opt,name=value,proto3" json:"value,omitempty"`
	TradeFee             int32    `protobuf:"zigzag32,4,opt,name=tradeFee,proto3" json:"tradeFee,omitempty"`
	Remark               string   `protobuf:"bytes,5,opt,name=remark,proto3" json:"remark,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TransferRequest) Reset()         { *m = TransferRequest{} }
func (m *TransferRequest) String() string { return proto.CompactTextString(m) }
func (*TransferRequest) ProtoMessage()    {}
func (*TransferRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_wallet_service_98fe8585a6a21f3c, []int{8}
}
func (m *TransferRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TransferRequest.Unmarshal(m, b)
}
func (m *TransferRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TransferRequest.Marshal(b, m, deterministic)
}
func (dst *TransferRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransferRequest.Merge(dst, src)
}
func (m *TransferRequest) XXX_Size() int {
	return xxx_messageInfo_TransferRequest.Size(m)
}
func (m *TransferRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TransferRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TransferRequest proto.InternalMessageInfo

func (m *TransferRequest) GetWalletId() int64 {
	if m != nil {
		return m.WalletId
	}
	return 0
}

func (m *TransferRequest) GetToWalletId() int64 {
	if m != nil {
		return m.ToWalletId
	}
	return 0
}

func (m *TransferRequest) GetValue() int32 {
	if m != nil {
		return m.Value
	}
	return 0
}

func (m *TransferRequest) GetTradeFee() int32 {
	if m != nil {
		return m.TradeFee
	}
	return 0
}

func (m *TransferRequest) GetRemark() string {
	if m != nil {
		return m.Remark
	}
	return ""
}

type PagingWalletLogRequest struct {
	WalletId             int64          `protobuf:"zigzag64,1,opt,name=walletId,proto3" json:"walletId,omitempty"`
	Params               *SPagingParams `protobuf:"bytes,2,opt,name=params,proto3" json:"params,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *PagingWalletLogRequest) Reset()         { *m = PagingWalletLogRequest{} }
func (m *PagingWalletLogRequest) String() string { return proto.CompactTextString(m) }
func (*PagingWalletLogRequest) ProtoMessage()    {}
func (*PagingWalletLogRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_wallet_service_98fe8585a6a21f3c, []int{9}
}
func (m *PagingWalletLogRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PagingWalletLogRequest.Unmarshal(m, b)
}
func (m *PagingWalletLogRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PagingWalletLogRequest.Marshal(b, m, deterministic)
}
func (dst *PagingWalletLogRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PagingWalletLogRequest.Merge(dst, src)
}
func (m *PagingWalletLogRequest) XXX_Size() int {
	return xxx_messageInfo_PagingWalletLogRequest.Size(m)
}
func (m *PagingWalletLogRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PagingWalletLogRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PagingWalletLogRequest proto.InternalMessageInfo

func (m *PagingWalletLogRequest) GetWalletId() int64 {
	if m != nil {
		return m.WalletId
	}
	return 0
}

func (m *PagingWalletLogRequest) GetParams() *SPagingParams {
	if m != nil {
		return m.Params
	}
	return nil
}

type FinishTakeOutRequest struct {
	WalletId             int64    `protobuf:"zigzag64,1,opt,name=walletId,proto3" json:"walletId,omitempty"`
	TakeId               int64    `protobuf:"zigzag64,2,opt,name=takeId,proto3" json:"takeId,omitempty"`
	OuterNo              string   `protobuf:"bytes,3,opt,name=outerNo,proto3" json:"outerNo,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FinishTakeOutRequest) Reset()         { *m = FinishTakeOutRequest{} }
func (m *FinishTakeOutRequest) String() string { return proto.CompactTextString(m) }
func (*FinishTakeOutRequest) ProtoMessage()    {}
func (*FinishTakeOutRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_wallet_service_98fe8585a6a21f3c, []int{10}
}
func (m *FinishTakeOutRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FinishTakeOutRequest.Unmarshal(m, b)
}
func (m *FinishTakeOutRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FinishTakeOutRequest.Marshal(b, m, deterministic)
}
func (dst *FinishTakeOutRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FinishTakeOutRequest.Merge(dst, src)
}
func (m *FinishTakeOutRequest) XXX_Size() int {
	return xxx_messageInfo_FinishTakeOutRequest.Size(m)
}
func (m *FinishTakeOutRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FinishTakeOutRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FinishTakeOutRequest proto.InternalMessageInfo

func (m *FinishTakeOutRequest) GetWalletId() int64 {
	if m != nil {
		return m.WalletId
	}
	return 0
}

func (m *FinishTakeOutRequest) GetTakeId() int64 {
	if m != nil {
		return m.TakeId
	}
	return 0
}

func (m *FinishTakeOutRequest) GetOuterNo() string {
	if m != nil {
		return m.OuterNo
	}
	return ""
}

type RequestWithdrawalRequest struct {
	// 钱包编号
	WalletId int64 `protobuf:"varint,1,opt,name=WalletId,proto3" json:"WalletId,omitempty"`
	// 金额
	Amount int32 `protobuf:"varint,2,opt,name=Amount,proto3" json:"Amount,omitempty"`
	// 手续费
	TradeFee int32 `protobuf:"varint,3,opt,name=TradeFee,proto3" json:"TradeFee,omitempty"`
	// 提现方式
	Kind int32 `protobuf:"zigzag32,4,opt,name=Kind,proto3" json:"Kind,omitempty"`
	// 银行名称
	BankName string `protobuf:"bytes,5,opt,name=BankName,proto3" json:"BankName,omitempty"`
	// 银行账号
	BankAccountNo string `protobuf:"bytes,6,opt,name=BankAccountNo,proto3" json:"BankAccountNo,omitempty"`
	// 银行账户
	BankAccountName      string   `protobuf:"bytes,7,opt,name=BankAccountName,proto3" json:"BankAccountName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RequestWithdrawalRequest) Reset()         { *m = RequestWithdrawalRequest{} }
func (m *RequestWithdrawalRequest) String() string { return proto.CompactTextString(m) }
func (*RequestWithdrawalRequest) ProtoMessage()    {}
func (*RequestWithdrawalRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_wallet_service_98fe8585a6a21f3c, []int{11}
}
func (m *RequestWithdrawalRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestWithdrawalRequest.Unmarshal(m, b)
}
func (m *RequestWithdrawalRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestWithdrawalRequest.Marshal(b, m, deterministic)
}
func (dst *RequestWithdrawalRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestWithdrawalRequest.Merge(dst, src)
}
func (m *RequestWithdrawalRequest) XXX_Size() int {
	return xxx_messageInfo_RequestWithdrawalRequest.Size(m)
}
func (m *RequestWithdrawalRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestWithdrawalRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RequestWithdrawalRequest proto.InternalMessageInfo

func (m *RequestWithdrawalRequest) GetWalletId() int64 {
	if m != nil {
		return m.WalletId
	}
	return 0
}

func (m *RequestWithdrawalRequest) GetAmount() int32 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *RequestWithdrawalRequest) GetTradeFee() int32 {
	if m != nil {
		return m.TradeFee
	}
	return 0
}

func (m *RequestWithdrawalRequest) GetKind() int32 {
	if m != nil {
		return m.Kind
	}
	return 0
}

func (m *RequestWithdrawalRequest) GetBankName() string {
	if m != nil {
		return m.BankName
	}
	return ""
}

func (m *RequestWithdrawalRequest) GetBankAccountNo() string {
	if m != nil {
		return m.BankAccountNo
	}
	return ""
}

func (m *RequestWithdrawalRequest) GetBankAccountName() string {
	if m != nil {
		return m.BankAccountName
	}
	return ""
}

type ReviewTakeOutRequest struct {
	WalletId             int64    `protobuf:"zigzag64,1,opt,name=walletId,proto3" json:"walletId,omitempty"`
	TakeId               int64    `protobuf:"zigzag64,2,opt,name=takeId,proto3" json:"takeId,omitempty"`
	ReviewPass           bool     `protobuf:"varint,3,opt,name=reviewPass,proto3" json:"reviewPass,omitempty"`
	Remark               string   `protobuf:"bytes,4,opt,name=remark,proto3" json:"remark,omitempty"`
	OprUid               int32    `protobuf:"zigzag32,5,opt,name=oprUid,proto3" json:"oprUid,omitempty"`
	OprName              string   `protobuf:"bytes,6,opt,name=oprName,proto3" json:"oprName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReviewTakeOutRequest) Reset()         { *m = ReviewTakeOutRequest{} }
func (m *ReviewTakeOutRequest) String() string { return proto.CompactTextString(m) }
func (*ReviewTakeOutRequest) ProtoMessage()    {}
func (*ReviewTakeOutRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_wallet_service_98fe8585a6a21f3c, []int{12}
}
func (m *ReviewTakeOutRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReviewTakeOutRequest.Unmarshal(m, b)
}
func (m *ReviewTakeOutRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReviewTakeOutRequest.Marshal(b, m, deterministic)
}
func (dst *ReviewTakeOutRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReviewTakeOutRequest.Merge(dst, src)
}
func (m *ReviewTakeOutRequest) XXX_Size() int {
	return xxx_messageInfo_ReviewTakeOutRequest.Size(m)
}
func (m *ReviewTakeOutRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReviewTakeOutRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReviewTakeOutRequest proto.InternalMessageInfo

func (m *ReviewTakeOutRequest) GetWalletId() int64 {
	if m != nil {
		return m.WalletId
	}
	return 0
}

func (m *ReviewTakeOutRequest) GetTakeId() int64 {
	if m != nil {
		return m.TakeId
	}
	return 0
}

func (m *ReviewTakeOutRequest) GetReviewPass() bool {
	if m != nil {
		return m.ReviewPass
	}
	return false
}

func (m *ReviewTakeOutRequest) GetRemark() string {
	if m != nil {
		return m.Remark
	}
	return ""
}

func (m *ReviewTakeOutRequest) GetOprUid() int32 {
	if m != nil {
		return m.OprUid
	}
	return 0
}

func (m *ReviewTakeOutRequest) GetOprName() string {
	if m != nil {
		return m.OprName
	}
	return ""
}

// * 钱包
type SWallet struct {
	// * 钱包编号
	ID int64 `protobuf:"zigzag64,1,opt,name=ID,proto3" json:"ID,omitempty"`
	// * 哈希值
	HashCode string `protobuf:"bytes,2,opt,name=HashCode,proto3" json:"HashCode,omitempty"`
	// * 节点编号
	NodeId int32 `protobuf:"zigzag32,3,opt,name=NodeId,proto3" json:"NodeId,omitempty"`
	// * 用户编号
	UserId int64 `protobuf:"zigzag64,4,opt,name=UserId,proto3" json:"UserId,omitempty"`
	// 钱包名称
	WalletName string `protobuf:"bytes,5,opt,name=WalletName,proto3" json:"WalletName,omitempty"`
	// * 钱包类型
	WalletType int32 `protobuf:"zigzag32,6,opt,name=WalletType,proto3" json:"WalletType,omitempty"`
	// * 钱包标志
	WalletFlag int32 `protobuf:"zigzag32,7,opt,name=WalletFlag,proto3" json:"WalletFlag,omitempty"`
	// * 余额
	Balance int32 `protobuf:"zigzag32,8,opt,name=Balance,proto3" json:"Balance,omitempty"`
	// * 赠送余额
	PresentBalance int32 `protobuf:"zigzag32,9,opt,name=PresentBalance,proto3" json:"PresentBalance,omitempty"`
	// * 调整金额
	AdjustAmount int32 `protobuf:"zigzag32,10,opt,name=AdjustAmount,proto3" json:"AdjustAmount,omitempty"`
	// * 冻结余额
	FreezeAmount int32 `protobuf:"zigzag32,11,opt,name=FreezeAmount,proto3" json:"FreezeAmount,omitempty"`
	// * 结余金额
	LatestAmount int32 `protobuf:"zigzag32,12,opt,name=LatestAmount,proto3" json:"LatestAmount,omitempty"`
	// * 失效账户余额
	ExpiredAmount int32 `protobuf:"zigzag32,13,opt,name=ExpiredAmount,proto3" json:"ExpiredAmount,omitempty"`
	// * 总充值金额
	TotalCharge int32 `protobuf:"zigzag32,14,opt,name=TotalCharge,proto3" json:"TotalCharge,omitempty"`
	// * 累计赠送金额
	TotalPresent int32 `protobuf:"zigzag32,15,opt,name=TotalPresent,proto3" json:"TotalPresent,omitempty"`
	// * 总支付额
	TotalPay int32 `protobuf:"zigzag32,16,opt,name=TotalPay,proto3" json:"TotalPay,omitempty"`
	// * 状态
	State int32 `protobuf:"zigzag32,17,opt,name=State,proto3" json:"State,omitempty"`
	// * 创建时间
	CreateTime int64 `protobuf:"zigzag64,18,opt,name=CreateTime,proto3" json:"CreateTime,omitempty"`
	// * 更新时间
	UpdateTime           int64    `protobuf:"zigzag64,19,opt,name=UpdateTime,proto3" json:"UpdateTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SWallet) Reset()         { *m = SWallet{} }
func (m *SWallet) String() string { return proto.CompactTextString(m) }
func (*SWallet) ProtoMessage()    {}
func (*SWallet) Descriptor() ([]byte, []int) {
	return fileDescriptor_wallet_service_98fe8585a6a21f3c, []int{13}
}
func (m *SWallet) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SWallet.Unmarshal(m, b)
}
func (m *SWallet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SWallet.Marshal(b, m, deterministic)
}
func (dst *SWallet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SWallet.Merge(dst, src)
}
func (m *SWallet) XXX_Size() int {
	return xxx_messageInfo_SWallet.Size(m)
}
func (m *SWallet) XXX_DiscardUnknown() {
	xxx_messageInfo_SWallet.DiscardUnknown(m)
}

var xxx_messageInfo_SWallet proto.InternalMessageInfo

func (m *SWallet) GetID() int64 {
	if m != nil {
		return m.ID
	}
	return 0
}

func (m *SWallet) GetHashCode() string {
	if m != nil {
		return m.HashCode
	}
	return ""
}

func (m *SWallet) GetNodeId() int32 {
	if m != nil {
		return m.NodeId
	}
	return 0
}

func (m *SWallet) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *SWallet) GetWalletName() string {
	if m != nil {
		return m.WalletName
	}
	return ""
}

func (m *SWallet) GetWalletType() int32 {
	if m != nil {
		return m.WalletType
	}
	return 0
}

func (m *SWallet) GetWalletFlag() int32 {
	if m != nil {
		return m.WalletFlag
	}
	return 0
}

func (m *SWallet) GetBalance() int32 {
	if m != nil {
		return m.Balance
	}
	return 0
}

func (m *SWallet) GetPresentBalance() int32 {
	if m != nil {
		return m.PresentBalance
	}
	return 0
}

func (m *SWallet) GetAdjustAmount() int32 {
	if m != nil {
		return m.AdjustAmount
	}
	return 0
}

func (m *SWallet) GetFreezeAmount() int32 {
	if m != nil {
		return m.FreezeAmount
	}
	return 0
}

func (m *SWallet) GetLatestAmount() int32 {
	if m != nil {
		return m.LatestAmount
	}
	return 0
}

func (m *SWallet) GetExpiredAmount() int32 {
	if m != nil {
		return m.ExpiredAmount
	}
	return 0
}

func (m *SWallet) GetTotalCharge() int32 {
	if m != nil {
		return m.TotalCharge
	}
	return 0
}

func (m *SWallet) GetTotalPresent() int32 {
	if m != nil {
		return m.TotalPresent
	}
	return 0
}

func (m *SWallet) GetTotalPay() int32 {
	if m != nil {
		return m.TotalPay
	}
	return 0
}

func (m *SWallet) GetState() int32 {
	if m != nil {
		return m.State
	}
	return 0
}

func (m *SWallet) GetCreateTime() int64 {
	if m != nil {
		return m.CreateTime
	}
	return 0
}

func (m *SWallet) GetUpdateTime() int64 {
	if m != nil {
		return m.UpdateTime
	}
	return 0
}

// * 钱包日志
type SWalletLog struct {
	// * 编号
	ID int64 `protobuf:"zigzag64,1,opt,name=ID,proto3" json:"ID,omitempty"`
	// * 钱包编号
	WalletId int64 `protobuf:"zigzag64,2,opt,name=WalletId,proto3" json:"WalletId,omitempty"`
	// * 业务类型
	Kind int32 `protobuf:"zigzag32,3,opt,name=Kind,proto3" json:"Kind,omitempty"`
	// * 标题
	Title string `protobuf:"bytes,4,opt,name=Title,proto3" json:"Title,omitempty"`
	// * 外部通道
	OuterChan string `protobuf:"bytes,5,opt,name=OuterChan,proto3" json:"OuterChan,omitempty"`
	// * 外部订单号
	OuterNo string `protobuf:"bytes,6,opt,name=OuterNo,proto3" json:"OuterNo,omitempty"`
	// * 变动金额
	Value int32 `protobuf:"zigzag32,7,opt,name=Value,proto3" json:"Value,omitempty"`
	// * 余额
	Balance int32 `protobuf:"zigzag32,8,opt,name=Balance,proto3" json:"Balance,omitempty"`
	// * 交易手续费
	TradeFee int32 `protobuf:"zigzag32,9,opt,name=TradeFee,proto3" json:"TradeFee,omitempty"`
	// * 操作人员用户编号
	OperatorId int32 `protobuf:"zigzag32,10,opt,name=OperatorId,proto3" json:"OperatorId,omitempty"`
	// * 操作人员名称
	OperatorName string `protobuf:"bytes,11,opt,name=OperatorName,proto3" json:"OperatorName,omitempty"`
	// * 备注
	Remark string `protobuf:"bytes,12,opt,name=Remark,proto3" json:"Remark,omitempty"`
	// * 审核状态
	ReviewState int32 `protobuf:"zigzag32,13,opt,name=ReviewState,proto3" json:"ReviewState,omitempty"`
	// * 审核备注
	ReviewRemark string `protobuf:"bytes,14,opt,name=ReviewRemark,proto3" json:"ReviewRemark,omitempty"`
	// * 审核时间
	ReviewTime int64 `protobuf:"zigzag64,15,opt,name=ReviewTime,proto3" json:"ReviewTime,omitempty"`
	// * 创建时间
	CreateTime int64 `protobuf:"zigzag64,16,opt,name=CreateTime,proto3" json:"CreateTime,omitempty"`
	// * 更新时间
	UpdateTime           int64    `protobuf:"zigzag64,17,opt,name=UpdateTime,proto3" json:"UpdateTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SWalletLog) Reset()         { *m = SWalletLog{} }
func (m *SWalletLog) String() string { return proto.CompactTextString(m) }
func (*SWalletLog) ProtoMessage()    {}
func (*SWalletLog) Descriptor() ([]byte, []int) {
	return fileDescriptor_wallet_service_98fe8585a6a21f3c, []int{14}
}
func (m *SWalletLog) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SWalletLog.Unmarshal(m, b)
}
func (m *SWalletLog) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SWalletLog.Marshal(b, m, deterministic)
}
func (dst *SWalletLog) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SWalletLog.Merge(dst, src)
}
func (m *SWalletLog) XXX_Size() int {
	return xxx_messageInfo_SWalletLog.Size(m)
}
func (m *SWalletLog) XXX_DiscardUnknown() {
	xxx_messageInfo_SWalletLog.DiscardUnknown(m)
}

var xxx_messageInfo_SWalletLog proto.InternalMessageInfo

func (m *SWalletLog) GetID() int64 {
	if m != nil {
		return m.ID
	}
	return 0
}

func (m *SWalletLog) GetWalletId() int64 {
	if m != nil {
		return m.WalletId
	}
	return 0
}

func (m *SWalletLog) GetKind() int32 {
	if m != nil {
		return m.Kind
	}
	return 0
}

func (m *SWalletLog) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *SWalletLog) GetOuterChan() string {
	if m != nil {
		return m.OuterChan
	}
	return ""
}

func (m *SWalletLog) GetOuterNo() string {
	if m != nil {
		return m.OuterNo
	}
	return ""
}

func (m *SWalletLog) GetValue() int32 {
	if m != nil {
		return m.Value
	}
	return 0
}

func (m *SWalletLog) GetBalance() int32 {
	if m != nil {
		return m.Balance
	}
	return 0
}

func (m *SWalletLog) GetTradeFee() int32 {
	if m != nil {
		return m.TradeFee
	}
	return 0
}

func (m *SWalletLog) GetOperatorId() int32 {
	if m != nil {
		return m.OperatorId
	}
	return 0
}

func (m *SWalletLog) GetOperatorName() string {
	if m != nil {
		return m.OperatorName
	}
	return ""
}

func (m *SWalletLog) GetRemark() string {
	if m != nil {
		return m.Remark
	}
	return ""
}

func (m *SWalletLog) GetReviewState() int32 {
	if m != nil {
		return m.ReviewState
	}
	return 0
}

func (m *SWalletLog) GetReviewRemark() string {
	if m != nil {
		return m.ReviewRemark
	}
	return ""
}

func (m *SWalletLog) GetReviewTime() int64 {
	if m != nil {
		return m.ReviewTime
	}
	return 0
}

func (m *SWalletLog) GetCreateTime() int64 {
	if m != nil {
		return m.CreateTime
	}
	return 0
}

func (m *SWalletLog) GetUpdateTime() int64 {
	if m != nil {
		return m.UpdateTime
	}
	return 0
}

func init() {
	proto.RegisterType((*CreateWalletRequest)(nil), "CreateWalletRequest")
	proto.RegisterType((*GetWalletRequest)(nil), "GetWalletRequest")
	proto.RegisterType((*WalletLogIDRequest)(nil), "WalletLogIDRequest")
	proto.RegisterType((*AdjustRequest)(nil), "AdjustRequest")
	proto.RegisterType((*DiscountRequest)(nil), "DiscountRequest")
	proto.RegisterType((*FreezeRequest)(nil), "FreezeRequest")
	proto.RegisterType((*UnfreezeRequest)(nil), "UnfreezeRequest")
	proto.RegisterType((*ChargeRequest)(nil), "ChargeRequest")
	proto.RegisterType((*TransferRequest)(nil), "TransferRequest")
	proto.RegisterType((*PagingWalletLogRequest)(nil), "PagingWalletLogRequest")
	proto.RegisterType((*FinishTakeOutRequest)(nil), "FinishTakeOutRequest")
	proto.RegisterType((*RequestWithdrawalRequest)(nil), "RequestWithdrawalRequest")
	proto.RegisterType((*ReviewTakeOutRequest)(nil), "ReviewTakeOutRequest")
	proto.RegisterType((*SWallet)(nil), "SWallet")
	proto.RegisterType((*SWalletLog)(nil), "SWalletLog")
	proto.RegisterEnum("EWalletType", EWalletType_name, EWalletType_value)
	proto.RegisterEnum("EWalletFlag", EWalletFlag_name, EWalletFlag_value)
	proto.RegisterEnum("EChargeKind", EChargeKind_name, EChargeKind_value)
	proto.RegisterEnum("EWalletLogKind", EWalletLogKind_name, EWalletLogKind_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// WalletServiceClient is the client API for WalletService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type WalletServiceClient interface {
	// * 创建钱包，并返回钱包编号
	CreateWallet(ctx context.Context, in *CreateWalletRequest, opts ...grpc.CallOption) (*Result, error)
	// * 获取钱包编号，如果钱包不存在，则返回0
	GetWalletId(ctx context.Context, in *GetWalletRequest, opts ...grpc.CallOption) (*Int64, error)
	// * 获取钱包账户,传入walletId
	GetWallet(ctx context.Context, in *Int64, opts ...grpc.CallOption) (*SWallet, error)
	// * 获取钱包日志
	GetWalletLog(ctx context.Context, in *WalletLogIDRequest, opts ...grpc.CallOption) (*SWalletLog, error)
	// * 调整余额，可能存在扣为负数的情况，需传入操作人员编号或操作人员名称
	Adjust(ctx context.Context, in *AdjustRequest, opts ...grpc.CallOption) (*Result, error)
	// * 支付抵扣,must是否必须大于0
	Discount(ctx context.Context, in *DiscountRequest, opts ...grpc.CallOption) (*Result, error)
	// * 冻结余额
	Freeze(ctx context.Context, in *FreezeRequest, opts ...grpc.CallOption) (*Result, error)
	// * 解冻金额
	Unfreeze(ctx context.Context, in *UnfreezeRequest, opts ...grpc.CallOption) (*Result, error)
	// * 充值,kind: 业务类型
	Charge(ctx context.Context, in *ChargeRequest, opts ...grpc.CallOption) (*Result, error)
	// * 转账,title如:转账给xxx， toTitle: 转账收款xxx
	Transfer(ctx context.Context, in *TransferRequest, opts ...grpc.CallOption) (*Result, error)
	// * 申请提现,kind：提现方式,返回info_id,交易号 及错误,value为提现金额,tradeFee为手续费
	RequestWithdrawal(ctx context.Context, in *RequestWithdrawalRequest, opts ...grpc.CallOption) (*Result, error)
	// * 确认提现
	ReviewTakeOut(ctx context.Context, in *ReviewTakeOutRequest, opts ...grpc.CallOption) (*Result, error)
	// * 完成提现
	FinishWithdrawal(ctx context.Context, in *FinishTakeOutRequest, opts ...grpc.CallOption) (*Result, error)
	// * 获取分页钱包日志
	PagingWalletLog(ctx context.Context, in *PagingWalletLogRequest, opts ...grpc.CallOption) (*SPagingResult, error)
}

type walletServiceClient struct {
	cc *grpc.ClientConn
}

func NewWalletServiceClient(cc *grpc.ClientConn) WalletServiceClient {
	return &walletServiceClient{cc}
}

func (c *walletServiceClient) CreateWallet(ctx context.Context, in *CreateWalletRequest, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := c.cc.Invoke(ctx, "/WalletService/CreateWallet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *walletServiceClient) GetWalletId(ctx context.Context, in *GetWalletRequest, opts ...grpc.CallOption) (*Int64, error) {
	out := new(Int64)
	err := c.cc.Invoke(ctx, "/WalletService/GetWalletId", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *walletServiceClient) GetWallet(ctx context.Context, in *Int64, opts ...grpc.CallOption) (*SWallet, error) {
	out := new(SWallet)
	err := c.cc.Invoke(ctx, "/WalletService/GetWallet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *walletServiceClient) GetWalletLog(ctx context.Context, in *WalletLogIDRequest, opts ...grpc.CallOption) (*SWalletLog, error) {
	out := new(SWalletLog)
	err := c.cc.Invoke(ctx, "/WalletService/GetWalletLog", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *walletServiceClient) Adjust(ctx context.Context, in *AdjustRequest, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := c.cc.Invoke(ctx, "/WalletService/Adjust", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *walletServiceClient) Discount(ctx context.Context, in *DiscountRequest, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := c.cc.Invoke(ctx, "/WalletService/Discount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *walletServiceClient) Freeze(ctx context.Context, in *FreezeRequest, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := c.cc.Invoke(ctx, "/WalletService/Freeze", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *walletServiceClient) Unfreeze(ctx context.Context, in *UnfreezeRequest, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := c.cc.Invoke(ctx, "/WalletService/Unfreeze", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *walletServiceClient) Charge(ctx context.Context, in *ChargeRequest, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := c.cc.Invoke(ctx, "/WalletService/Charge", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *walletServiceClient) Transfer(ctx context.Context, in *TransferRequest, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := c.cc.Invoke(ctx, "/WalletService/Transfer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *walletServiceClient) RequestWithdrawal(ctx context.Context, in *RequestWithdrawalRequest, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := c.cc.Invoke(ctx, "/WalletService/RequestWithdrawal", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *walletServiceClient) ReviewTakeOut(ctx context.Context, in *ReviewTakeOutRequest, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := c.cc.Invoke(ctx, "/WalletService/ReviewTakeOut", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *walletServiceClient) FinishWithdrawal(ctx context.Context, in *FinishTakeOutRequest, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := c.cc.Invoke(ctx, "/WalletService/FinishWithdrawal", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *walletServiceClient) PagingWalletLog(ctx context.Context, in *PagingWalletLogRequest, opts ...grpc.CallOption) (*SPagingResult, error) {
	out := new(SPagingResult)
	err := c.cc.Invoke(ctx, "/WalletService/PagingWalletLog", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// WalletServiceServer is the server API for WalletService service.
type WalletServiceServer interface {
	// * 创建钱包，并返回钱包编号
	CreateWallet(context.Context, *CreateWalletRequest) (*Result, error)
	// * 获取钱包编号，如果钱包不存在，则返回0
	GetWalletId(context.Context, *GetWalletRequest) (*Int64, error)
	// * 获取钱包账户,传入walletId
	GetWallet(context.Context, *Int64) (*SWallet, error)
	// * 获取钱包日志
	GetWalletLog(context.Context, *WalletLogIDRequest) (*SWalletLog, error)
	// * 调整余额，可能存在扣为负数的情况，需传入操作人员编号或操作人员名称
	Adjust(context.Context, *AdjustRequest) (*Result, error)
	// * 支付抵扣,must是否必须大于0
	Discount(context.Context, *DiscountRequest) (*Result, error)
	// * 冻结余额
	Freeze(context.Context, *FreezeRequest) (*Result, error)
	// * 解冻金额
	Unfreeze(context.Context, *UnfreezeRequest) (*Result, error)
	// * 充值,kind: 业务类型
	Charge(context.Context, *ChargeRequest) (*Result, error)
	// * 转账,title如:转账给xxx， toTitle: 转账收款xxx
	Transfer(context.Context, *TransferRequest) (*Result, error)
	// * 申请提现,kind：提现方式,返回info_id,交易号 及错误,value为提现金额,tradeFee为手续费
	RequestWithdrawal(context.Context, *RequestWithdrawalRequest) (*Result, error)
	// * 确认提现
	ReviewTakeOut(context.Context, *ReviewTakeOutRequest) (*Result, error)
	// * 完成提现
	FinishWithdrawal(context.Context, *FinishTakeOutRequest) (*Result, error)
	// * 获取分页钱包日志
	PagingWalletLog(context.Context, *PagingWalletLogRequest) (*SPagingResult, error)
}

func RegisterWalletServiceServer(s *grpc.Server, srv WalletServiceServer) {
	s.RegisterService(&_WalletService_serviceDesc, srv)
}

func _WalletService_CreateWallet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateWalletRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WalletServiceServer).CreateWallet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/WalletService/CreateWallet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WalletServiceServer).CreateWallet(ctx, req.(*CreateWalletRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WalletService_GetWalletId_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetWalletRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WalletServiceServer).GetWalletId(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/WalletService/GetWalletId",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WalletServiceServer).GetWalletId(ctx, req.(*GetWalletRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WalletService_GetWallet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WalletServiceServer).GetWallet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/WalletService/GetWallet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WalletServiceServer).GetWallet(ctx, req.(*Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _WalletService_GetWalletLog_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WalletLogIDRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WalletServiceServer).GetWalletLog(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/WalletService/GetWalletLog",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WalletServiceServer).GetWalletLog(ctx, req.(*WalletLogIDRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WalletService_Adjust_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AdjustRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WalletServiceServer).Adjust(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/WalletService/Adjust",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WalletServiceServer).Adjust(ctx, req.(*AdjustRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WalletService_Discount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DiscountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WalletServiceServer).Discount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/WalletService/Discount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WalletServiceServer).Discount(ctx, req.(*DiscountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WalletService_Freeze_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FreezeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WalletServiceServer).Freeze(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/WalletService/Freeze",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WalletServiceServer).Freeze(ctx, req.(*FreezeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WalletService_Unfreeze_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UnfreezeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WalletServiceServer).Unfreeze(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/WalletService/Unfreeze",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WalletServiceServer).Unfreeze(ctx, req.(*UnfreezeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WalletService_Charge_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ChargeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WalletServiceServer).Charge(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/WalletService/Charge",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WalletServiceServer).Charge(ctx, req.(*ChargeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WalletService_Transfer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TransferRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WalletServiceServer).Transfer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/WalletService/Transfer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WalletServiceServer).Transfer(ctx, req.(*TransferRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WalletService_RequestWithdrawal_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestWithdrawalRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WalletServiceServer).RequestWithdrawal(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/WalletService/RequestWithdrawal",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WalletServiceServer).RequestWithdrawal(ctx, req.(*RequestWithdrawalRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WalletService_ReviewTakeOut_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReviewTakeOutRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WalletServiceServer).ReviewTakeOut(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/WalletService/ReviewTakeOut",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WalletServiceServer).ReviewTakeOut(ctx, req.(*ReviewTakeOutRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WalletService_FinishWithdrawal_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FinishTakeOutRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WalletServiceServer).FinishWithdrawal(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/WalletService/FinishWithdrawal",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WalletServiceServer).FinishWithdrawal(ctx, req.(*FinishTakeOutRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WalletService_PagingWalletLog_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PagingWalletLogRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WalletServiceServer).PagingWalletLog(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/WalletService/PagingWalletLog",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WalletServiceServer).PagingWalletLog(ctx, req.(*PagingWalletLogRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _WalletService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "WalletService",
	HandlerType: (*WalletServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateWallet",
			Handler:    _WalletService_CreateWallet_Handler,
		},
		{
			MethodName: "GetWalletId",
			Handler:    _WalletService_GetWalletId_Handler,
		},
		{
			MethodName: "GetWallet",
			Handler:    _WalletService_GetWallet_Handler,
		},
		{
			MethodName: "GetWalletLog",
			Handler:    _WalletService_GetWalletLog_Handler,
		},
		{
			MethodName: "Adjust",
			Handler:    _WalletService_Adjust_Handler,
		},
		{
			MethodName: "Discount",
			Handler:    _WalletService_Discount_Handler,
		},
		{
			MethodName: "Freeze",
			Handler:    _WalletService_Freeze_Handler,
		},
		{
			MethodName: "Unfreeze",
			Handler:    _WalletService_Unfreeze_Handler,
		},
		{
			MethodName: "Charge",
			Handler:    _WalletService_Charge_Handler,
		},
		{
			MethodName: "Transfer",
			Handler:    _WalletService_Transfer_Handler,
		},
		{
			MethodName: "RequestWithdrawal",
			Handler:    _WalletService_RequestWithdrawal_Handler,
		},
		{
			MethodName: "ReviewTakeOut",
			Handler:    _WalletService_ReviewTakeOut_Handler,
		},
		{
			MethodName: "FinishWithdrawal",
			Handler:    _WalletService_FinishWithdrawal_Handler,
		},
		{
			MethodName: "PagingWalletLog",
			Handler:    _WalletService_PagingWalletLog_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "wallet_service.proto",
}

func init() {
	proto.RegisterFile("wallet_service.proto", fileDescriptor_wallet_service_98fe8585a6a21f3c)
}

var fileDescriptor_wallet_service_98fe8585a6a21f3c = []byte{
	// 1438 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x58, 0xdd, 0x6e, 0x1b, 0xc5,
	0x17, 0xf7, 0xfa, 0xdb, 0xc7, 0x5f, 0xeb, 0x71, 0x9a, 0xfa, 0x6f, 0xfd, 0x15, 0xa2, 0x2d, 0x2a,
	0x51, 0x2e, 0x16, 0x35, 0x54, 0x2d, 0x15, 0x5c, 0x90, 0x3a, 0x09, 0x18, 0x97, 0xc4, 0xda, 0x38,
	0x44, 0x42, 0x48, 0xd5, 0xc4, 0x3b, 0xb5, 0x97, 0xd8, 0xbb, 0x66, 0x76, 0xdc, 0x12, 0x5e, 0x80,
	0xab, 0x5e, 0xf3, 0x00, 0x08, 0xf1, 0x00, 0xf0, 0x22, 0xbc, 0x05, 0xe2, 0x29, 0xd0, 0x7c, 0xec,
	0xee, 0x78, 0xe3, 0x40, 0x04, 0x08, 0xf5, 0x2a, 0xfe, 0xfd, 0xe6, 0x9c, 0x33, 0x67, 0xe6, 0x7c,
	0xcc, 0xd9, 0xc0, 0xc6, 0x2b, 0x3c, 0x9b, 0x11, 0xf6, 0x3c, 0x24, 0xf4, 0xa5, 0x37, 0x26, 0xf6,
	0x82, 0x06, 0x2c, 0xe8, 0xd6, 0x26, 0xb3, 0xe0, 0x02, 0xcf, 0x24, 0xb2, 0x5e, 0x1b, 0xd0, 0xee,
	0x51, 0x82, 0x19, 0x39, 0x17, 0xc2, 0x0e, 0xf9, 0x7a, 0x49, 0x42, 0x86, 0x36, 0xa1, 0x78, 0x16,
	0x12, 0xda, 0x77, 0x3b, 0xc6, 0xb6, 0xb1, 0x93, 0x73, 0x14, 0x42, 0x5b, 0x00, 0x52, 0xf0, 0x18,
	0xcf, 0x49, 0x27, 0xbf, 0x6d, 0xec, 0x54, 0x1c, 0x8d, 0xe1, 0xeb, 0x72, 0xd7, 0xd1, 0xd5, 0x82,
	0x74, 0xb2, 0xdb, 0xc6, 0x4e, 0xc1, 0xd1, 0x98, 0x44, 0xff, 0x68, 0x86, 0x27, 0x9d, 0x9c, 0x5c,
	0x4f, 0x18, 0xeb, 0x53, 0x30, 0x3f, 0x26, 0xec, 0x9a, 0x2f, 0xcb, 0xc4, 0x17, 0xe4, 0x28, 0xb4,
	0x66, 0xaf, 0x96, 0xbe, 0x97, 0xf5, 0x11, 0x20, 0x69, 0xe8, 0x59, 0x30, 0xe9, 0x1f, 0x44, 0xd6,
	0xba, 0x50, 0x96, 0x32, 0xb1, 0xbd, 0x18, 0xa3, 0x06, 0x64, 0x3d, 0x57, 0x58, 0x42, 0x4e, 0xd6,
	0x73, 0xad, 0x1f, 0x0c, 0xa8, 0xef, 0xbb, 0x5f, 0x2d, 0x43, 0x76, 0x1b, 0xed, 0x0d, 0x28, 0xbc,
	0xc4, 0xb3, 0x65, 0xe4, 0x8a, 0x04, 0x9c, 0x65, 0x1e, 0x9b, 0x11, 0x71, 0xd8, 0x8a, 0x23, 0x01,
	0xea, 0x40, 0x29, 0x58, 0x32, 0x42, 0x8f, 0x03, 0x75, 0x89, 0x11, 0xe4, 0xa7, 0x0d, 0x16, 0xf4,
	0xcc, 0x73, 0x3b, 0x05, 0x61, 0x46, 0x21, 0xa1, 0xb1, 0xa0, 0xe2, 0xda, 0x8b, 0x4a, 0x43, 0x42,
	0xeb, 0x3b, 0x03, 0x9a, 0x07, 0x5e, 0x38, 0x0e, 0x96, 0xfe, 0x7f, 0xe8, 0x27, 0x82, 0xfc, 0x7c,
	0x19, 0x32, 0xe1, 0x65, 0xd9, 0x11, 0xbf, 0xc5, 0x7d, 0x1d, 0x51, 0x42, 0xbe, 0x25, 0x6f, 0xf2,
	0x7d, 0xfd, 0x68, 0x40, 0xf3, 0xcc, 0x7f, 0xf1, 0xc6, 0xfb, 0xf9, 0xb3, 0x01, 0xf5, 0xde, 0x14,
	0xd3, 0xc9, 0x3f, 0xf0, 0xb2, 0x01, 0xd9, 0x8b, 0x2b, 0xe1, 0x62, 0xcb, 0xc9, 0x5e, 0x5c, 0x25,
	0x5e, 0xe7, 0x6f, 0xf0, 0xba, 0x70, 0x93, 0xd7, 0xc5, 0x9b, 0xbc, 0x2e, 0xad, 0x7a, 0xfd, 0xbd,
	0x01, 0xcd, 0x11, 0xc5, 0x7e, 0xf8, 0x82, 0xd0, 0xdb, 0xf8, 0xbd, 0x05, 0xc0, 0x82, 0xf3, 0x68,
	0x55, 0xd6, 0x9e, 0xc6, 0x24, 0xe7, 0xca, 0xe9, 0xe7, 0xea, 0x42, 0x99, 0x51, 0xec, 0x92, 0x23,
	0x22, 0x8f, 0xd2, 0x72, 0x62, 0xcc, 0x7d, 0xa6, 0x64, 0x8e, 0xe9, 0xa5, 0x3a, 0x8c, 0x42, 0xd6,
	0x97, 0xb0, 0x39, 0xc4, 0x13, 0xcf, 0x9f, 0xc4, 0x5d, 0xe1, 0x36, 0xfe, 0xdd, 0x87, 0xe2, 0x02,
	0x53, 0x3c, 0x0f, 0x85, 0x6f, 0xd5, 0xbd, 0x86, 0x7d, 0x2a, 0xad, 0x0c, 0x05, 0xeb, 0xa8, 0x55,
	0xcb, 0x85, 0x8d, 0x23, 0xcf, 0xf7, 0xc2, 0xe9, 0x08, 0x5f, 0x92, 0x93, 0xe5, 0xad, 0x2a, 0x71,
	0x13, 0x8a, 0x0c, 0x5f, 0x92, 0xf8, 0xdc, 0x0a, 0xe9, 0xf1, 0xc8, 0xad, 0xc4, 0xc3, 0xfa, 0xdd,
	0x80, 0x8e, 0xb2, 0x7c, 0xee, 0xb1, 0xa9, 0x4b, 0xf1, 0x2b, 0x3c, 0xd3, 0xb6, 0x3a, 0xd7, 0xb7,
	0xca, 0x39, 0x31, 0xe6, 0x5b, 0xed, 0xcf, 0x79, 0x87, 0x50, 0x4d, 0x59, 0x21, 0xae, 0x33, 0x8a,
	0x2e, 0x52, 0xb6, 0xe3, 0x18, 0xf3, 0x12, 0x1f, 0x78, 0xbe, 0xab, 0x2e, 0x58, 0xfc, 0xe6, 0xf2,
	0x4f, 0xb1, 0x7f, 0x29, 0x22, 0x2f, 0xaf, 0x37, 0xc6, 0xe8, 0x6d, 0xa8, 0xf3, 0xdf, 0xfb, 0x63,
	0xd1, 0x8a, 0x8e, 0x03, 0x95, 0xd0, 0xab, 0x24, 0xda, 0x81, 0xa6, 0x4e, 0x24, 0x29, 0x94, 0xa6,
	0xad, 0x5f, 0x0c, 0xd8, 0x70, 0xc8, 0x4b, 0x8f, 0xbc, 0xfa, 0x17, 0xee, 0x74, 0x0b, 0x80, 0x0a,
	0x5b, 0x43, 0x1c, 0x86, 0xe2, 0xa8, 0x65, 0x47, 0x63, 0xb4, 0xac, 0xc9, 0xeb, 0x59, 0xf3, 0x37,
	0xea, 0xf6, 0xd7, 0x3c, 0x94, 0x4e, 0xe5, 0xc5, 0xf3, 0xfa, 0xeb, 0x1f, 0x28, 0x1f, 0xb3, 0xfd,
	0x03, 0xee, 0xf9, 0x27, 0x38, 0x9c, 0xf6, 0x02, 0x57, 0x16, 0x6a, 0xc5, 0x89, 0x31, 0xdf, 0xe9,
	0x38, 0x70, 0xb9, 0xe7, 0x32, 0xd5, 0x15, 0xd2, 0xde, 0xe2, 0xbc, 0x3c, 0xd1, 0xda, 0xb7, 0xb8,
	0xb0, 0xee, 0x2d, 0x3e, 0x4f, 0xde, 0x47, 0x59, 0xbf, 0x1a, 0x93, 0x7a, 0x8b, 0x4b, 0xfa, 0x3a,
	0x67, 0xf8, 0x09, 0x9f, 0xe2, 0x19, 0xf6, 0xc7, 0xa4, 0x53, 0x16, 0x8b, 0x11, 0x44, 0xf7, 0xa1,
	0x31, 0xa4, 0x24, 0x24, 0x3e, 0x8b, 0x04, 0x2a, 0x42, 0x20, 0xc5, 0x22, 0x0b, 0x6a, 0xf2, 0xf9,
	0x54, 0xa9, 0x07, 0x42, 0x6a, 0x85, 0xe3, 0x32, 0xf2, 0xc9, 0x50, 0x32, 0x55, 0x29, 0xa3, 0x73,
	0x5c, 0xe6, 0x19, 0x66, 0x24, 0xb6, 0x53, 0x93, 0x32, 0x3a, 0xc7, 0x93, 0xef, 0xf0, 0x9b, 0x85,
	0x47, 0x89, 0xab, 0x84, 0xea, 0x42, 0x68, 0x95, 0x44, 0xdb, 0x50, 0x1d, 0x05, 0x0c, 0xcf, 0x64,
	0x5f, 0xed, 0x34, 0x84, 0x8c, 0x4e, 0xf1, 0xbd, 0x04, 0x54, 0x47, 0xe9, 0x34, 0xe5, 0x5e, 0x3a,
	0x27, 0x8a, 0x46, 0x60, 0x7c, 0xd5, 0x31, 0x65, 0xf7, 0x89, 0x30, 0xef, 0x57, 0xa7, 0x0c, 0x33,
	0xd2, 0x69, 0xc9, 0x7e, 0x25, 0x00, 0xbf, 0x6b, 0x39, 0x66, 0x8d, 0xbc, 0x39, 0xe9, 0x20, 0xd9,
	0xe5, 0x12, 0x86, 0xaf, 0x9f, 0x2d, 0xdc, 0x68, 0xbd, 0x2d, 0xd7, 0x13, 0xc6, 0xfa, 0x2d, 0x07,
	0x70, 0x1a, 0xf7, 0xad, 0x75, 0x69, 0x95, 0x6a, 0xa1, 0x49, 0xe5, 0x47, 0x55, 0x9c, 0xd3, 0xaa,
	0x78, 0x03, 0x0a, 0x23, 0xfd, 0x19, 0x10, 0x00, 0xfd, 0x1f, 0x2a, 0x27, 0xbc, 0xcf, 0xf4, 0xa6,
	0xd8, 0x57, 0xf9, 0x94, 0x10, 0x3c, 0x1d, 0x4e, 0x54, 0x53, 0x52, 0x09, 0xaf, 0x20, 0xb7, 0xf6,
	0xb9, 0x68, 0xd1, 0x32, 0x87, 0x24, 0xf8, 0x93, 0xf4, 0xd1, 0x7b, 0x4e, 0x45, 0x5d, 0x5f, 0xd4,
	0x73, 0xb6, 0x00, 0x4e, 0x16, 0x84, 0x62, 0x16, 0xf0, 0x84, 0x97, 0x09, 0xa3, 0x31, 0x3c, 0x3c,
	0x11, 0x12, 0x69, 0x5f, 0x15, 0xae, 0xac, 0x70, 0xbc, 0x60, 0x1c, 0x59, 0xca, 0x35, 0x59, 0xca,
	0x12, 0xf1, 0xe0, 0xcb, 0x76, 0x22, 0x03, 0x24, 0x13, 0x44, 0xa7, 0xb8, 0x75, 0x09, 0x95, 0x7e,
	0x43, 0x5a, 0xd7, 0x39, 0xee, 0xa1, 0x6a, 0x4a, 0x3c, 0x54, 0x4d, 0x19, 0xaa, 0x84, 0x49, 0x85,
	0xda, 0xfc, 0x8b, 0x50, 0xb7, 0xd2, 0xa1, 0xde, 0x7d, 0x00, 0xd5, 0x43, 0xad, 0x4a, 0x8b, 0x90,
	0x7d, 0xfe, 0xc8, 0xcc, 0xa0, 0x2a, 0x94, 0x46, 0x43, 0x42, 0xc3, 0xc0, 0x37, 0x0d, 0x54, 0x87,
	0xca, 0xe8, 0x33, 0x42, 0xc7, 0x53, 0xec, 0x33, 0x33, 0xbb, 0xfb, 0x38, 0x56, 0x11, 0x85, 0xcb,
	0x55, 0x1e, 0x9b, 0x19, 0x64, 0x42, 0x8d, 0xe3, 0x68, 0x36, 0x34, 0x0d, 0xd4, 0x00, 0xe0, 0x8c,
	0x4c, 0x75, 0x33, 0xbb, 0x4b, 0xa0, 0x7a, 0x28, 0x81, 0x48, 0x0b, 0xae, 0xf8, 0xbe, 0x99, 0x41,
	0x4d, 0xa8, 0xf6, 0x78, 0x93, 0x51, 0x72, 0x06, 0x6a, 0x41, 0xbd, 0x77, 0x7a, 0x15, 0x32, 0x32,
	0x8f, 0x54, 0xd1, 0x5d, 0x68, 0xf7, 0x4e, 0xe5, 0x97, 0xc5, 0xfe, 0x84, 0xf8, 0x4c, 0x2d, 0xe4,
	0x84, 0xac, 0x43, 0x5e, 0x2c, 0x7d, 0x57, 0x51, 0xf9, 0xdd, 0x9f, 0xb2, 0xd0, 0x38, 0x8c, 0xb3,
	0x37, 0xde, 0xea, 0x89, 0x3c, 0xd6, 0x20, 0xde, 0xe6, 0x2e, 0xb4, 0x07, 0x6b, 0x6c, 0x66, 0x85,
	0x54, 0xdf, 0x1f, 0x07, 0x73, 0xbe, 0x41, 0x0d, 0xca, 0x03, 0x55, 0xd5, 0x66, 0x5e, 0x2c, 0xc9,
	0x86, 0x62, 0x16, 0xf8, 0xbd, 0x0c, 0xe2, 0xe3, 0x16, 0xf9, 0x39, 0x06, 0xd1, 0x2c, 0xd2, 0xf7,
	0xcd, 0x12, 0xbf, 0x91, 0x98, 0x38, 0x59, 0x32, 0xb3, 0x2c, 0xd4, 0x65, 0xaf, 0x31, 0x2b, 0x42,
	0x3d, 0x9a, 0x0c, 0x4d, 0x40, 0x6d, 0x68, 0x0e, 0x92, 0x51, 0x86, 0x9f, 0xc8, 0xac, 0x22, 0x04,
	0x8d, 0x41, 0xfc, 0x1c, 0x09, 0xae, 0x26, 0xfc, 0x1e, 0xe2, 0xab, 0x39, 0xf1, 0xd9, 0x09, 0x75,
	0x63, 0xe1, 0x3a, 0xda, 0x04, 0x14, 0x09, 0x8f, 0x02, 0xfe, 0xbc, 0xf5, 0x30, 0x75, 0xcd, 0x86,
	0x50, 0x88, 0xf9, 0xd1, 0xd4, 0xa3, 0xee, 0x10, 0x53, 0x66, 0x36, 0xf7, 0x5e, 0x17, 0xa0, 0x2e,
	0x2f, 0x4a, 0xdd, 0x03, 0x7a, 0x17, 0x6a, 0xfa, 0x07, 0x1a, 0xda, 0xb0, 0xd7, 0x7c, 0xaf, 0x75,
	0x4b, 0xb6, 0x43, 0xc2, 0xe5, 0x8c, 0x59, 0x19, 0xb4, 0x0b, 0xd5, 0xf8, 0x13, 0xaa, 0xef, 0xa2,
	0x96, 0x9d, 0xfe, 0xa0, 0xea, 0x16, 0xed, 0xbe, 0xcf, 0x1e, 0x3d, 0xb4, 0x32, 0xe8, 0x2d, 0xa8,
	0xc4, 0xab, 0x48, 0xd1, 0xdd, 0xb2, 0xad, 0x3a, 0x8d, 0x95, 0x41, 0x7b, 0x50, 0x8b, 0x05, 0x78,
	0xe3, 0x69, 0xdb, 0xd7, 0x3f, 0xa9, 0xba, 0x55, 0x3b, 0x69, 0x4d, 0x56, 0x06, 0xdd, 0x83, 0xa2,
	0x0c, 0x08, 0x6a, 0xd8, 0x2b, 0x5f, 0x4f, 0xba, 0x97, 0xef, 0x40, 0x39, 0x0a, 0x14, 0x32, 0xed,
	0xd4, 0xe7, 0x8b, 0x2e, 0x78, 0x0f, 0x8a, 0x32, 0x3e, 0xa8, 0x61, 0xaf, 0x7c, 0x5b, 0xa4, 0xac,
	0x45, 0x71, 0x43, 0xa6, 0x9d, 0x1a, 0xee, 0x53, 0xd6, 0x54, 0x9f, 0x6f, 0xd8, 0x2b, 0xb3, 0x75,
	0xca, 0x5a, 0x14, 0x76, 0x64, 0xda, 0xa9, 0x61, 0x56, 0x17, 0x7c, 0x02, 0xad, 0x6b, 0xc3, 0x18,
	0xfa, 0x9f, 0x7d, 0xd3, 0x80, 0xa6, 0xab, 0x3e, 0x80, 0xfa, 0xca, 0x68, 0x83, 0xee, 0xd8, 0xeb,
	0x46, 0x1d, 0x5d, 0xe5, 0x21, 0x98, 0x72, 0xc2, 0xd4, 0x36, 0xbb, 0x63, 0xaf, 0x1b, 0x3a, 0x75,
	0xad, 0x0f, 0xa1, 0x99, 0x9a, 0x7a, 0xd1, 0x5d, 0x7b, 0xfd, 0x1c, 0xdc, 0x8d, 0x67, 0xdb, 0x48,
	0xfb, 0xe9, 0x16, 0xb4, 0xc7, 0xc1, 0xdc, 0x9e, 0x78, 0x6c, 0xba, 0xbc, 0xb0, 0x27, 0xc1, 0x5e,
	0x60, 0xd3, 0xc5, 0xf8, 0x8b, 0x92, 0xfd, 0x81, 0xf8, 0xff, 0xc1, 0x45, 0x51, 0xfc, 0x79, 0xef,
	0x8f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xe4, 0x44, 0xed, 0xcd, 0x6c, 0x10, 0x00, 0x00,
}
