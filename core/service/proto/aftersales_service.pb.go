// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.14.0
// source: aftersales_service.proto

package proto

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EAfterSalesType int32

const (
	// 默认
	EAfterSalesType_TypeUnset EAfterSalesType = 0
	// 退款申请(部分退款)
	EAfterSalesType_TypeRefund EAfterSalesType = 1
	// 退货
	EAfterSalesType_TypeReturn EAfterSalesType = 2
	// 换货
	EAfterSalesType_TypeExchange EAfterSalesType = 3
	// 服务/维修
	EAfterSalesType_TypeService EAfterSalesType = 4
)

// Enum value maps for EAfterSalesType.
var (
	EAfterSalesType_name = map[int32]string{
		0: "TypeUnset",
		1: "TypeRefund",
		2: "TypeReturn",
		3: "TypeExchange",
		4: "TypeService",
	}
	EAfterSalesType_value = map[string]int32{
		"TypeUnset":    0,
		"TypeRefund":   1,
		"TypeReturn":   2,
		"TypeExchange": 3,
		"TypeService":  4,
	}
)

func (x EAfterSalesType) Enum() *EAfterSalesType {
	p := new(EAfterSalesType)
	*p = x
	return p
}

func (x EAfterSalesType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EAfterSalesType) Descriptor() protoreflect.EnumDescriptor {
	return file_aftersales_service_proto_enumTypes[0].Descriptor()
}

func (EAfterSalesType) Type() protoreflect.EnumType {
	return &file_aftersales_service_proto_enumTypes[0]
}

func (x EAfterSalesType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EAfterSalesType.Descriptor instead.
func (EAfterSalesType) EnumDescriptor() ([]byte, []int) {
	return file_aftersales_service_proto_rawDescGZIP(), []int{0}
}

// 原实际销售的订单编号
type OriginOrderIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderId int64 `protobuf:"varint,1,opt,name=OrderId,proto3" json:"OrderId"`
}

func (x *OriginOrderIdRequest) Reset() {
	*x = OriginOrderIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aftersales_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OriginOrderIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OriginOrderIdRequest) ProtoMessage() {}

func (x *OriginOrderIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aftersales_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OriginOrderIdRequest.ProtoReflect.Descriptor instead.
func (*OriginOrderIdRequest) Descriptor() ([]byte, []int) {
	return file_aftersales_service_proto_rawDescGZIP(), []int{0}
}

func (x *OriginOrderIdRequest) GetOrderId() int64 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

type SubmitAfterSalesOrderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderId        int64           `protobuf:"varint,1,opt,name=OrderId,proto3" json:"OrderId"`
	AfterSalesType EAfterSalesType `protobuf:"varint,2,opt,name=AfterSalesType,proto3,enum=EAfterSalesType" json:"AfterSalesType"`
	ItemSnapshotId int64           `protobuf:"varint,3,opt,name=ItemSnapshotId,proto3" json:"ItemSnapshotId"`
	Quantity       int64           `protobuf:"varint,4,opt,name=Quantity,proto3" json:"Quantity"`
	Reason         string          `protobuf:"bytes,5,opt,name=Reason,proto3" json:"Reason"`
	ImageUrl       string          `protobuf:"bytes,6,opt,name=ImageUrl,proto3" json:"ImageUrl"`
}

func (x *SubmitAfterSalesOrderRequest) Reset() {
	*x = SubmitAfterSalesOrderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aftersales_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubmitAfterSalesOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitAfterSalesOrderRequest) ProtoMessage() {}

func (x *SubmitAfterSalesOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aftersales_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitAfterSalesOrderRequest.ProtoReflect.Descriptor instead.
func (*SubmitAfterSalesOrderRequest) Descriptor() ([]byte, []int) {
	return file_aftersales_service_proto_rawDescGZIP(), []int{1}
}

func (x *SubmitAfterSalesOrderRequest) GetOrderId() int64 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

func (x *SubmitAfterSalesOrderRequest) GetAfterSalesType() EAfterSalesType {
	if x != nil {
		return x.AfterSalesType
	}
	return EAfterSalesType_TypeUnset
}

func (x *SubmitAfterSalesOrderRequest) GetItemSnapshotId() int64 {
	if x != nil {
		return x.ItemSnapshotId
	}
	return 0
}

func (x *SubmitAfterSalesOrderRequest) GetQuantity() int64 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *SubmitAfterSalesOrderRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *SubmitAfterSalesOrderRequest) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

type SubmitAfterSalesOrderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrCode           int64  `protobuf:"varint,1,opt,name=ErrCode,proto3" json:"ErrCode"`
	ErrMsg            string `protobuf:"bytes,2,opt,name=ErrMsg,proto3" json:"ErrMsg"`
	AfterSalesOrderId int64  `protobuf:"varint,3,opt,name=AfterSalesOrderId,proto3" json:"AfterSalesOrderId"`
}

func (x *SubmitAfterSalesOrderResponse) Reset() {
	*x = SubmitAfterSalesOrderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aftersales_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubmitAfterSalesOrderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitAfterSalesOrderResponse) ProtoMessage() {}

func (x *SubmitAfterSalesOrderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aftersales_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitAfterSalesOrderResponse.ProtoReflect.Descriptor instead.
func (*SubmitAfterSalesOrderResponse) Descriptor() ([]byte, []int) {
	return file_aftersales_service_proto_rawDescGZIP(), []int{2}
}

func (x *SubmitAfterSalesOrderResponse) GetErrCode() int64 {
	if x != nil {
		return x.ErrCode
	}
	return 0
}

func (x *SubmitAfterSalesOrderResponse) GetErrMsg() string {
	if x != nil {
		return x.ErrMsg
	}
	return ""
}

func (x *SubmitAfterSalesOrderResponse) GetAfterSalesOrderId() int64 {
	if x != nil {
		return x.AfterSalesOrderId
	}
	return 0
}

type AfterSalesOrderListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value []*SAfterSalesOrder `protobuf:"bytes,1,rep,name=Value,proto3" json:"Value"`
}

func (x *AfterSalesOrderListResponse) Reset() {
	*x = AfterSalesOrderListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aftersales_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AfterSalesOrderListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AfterSalesOrderListResponse) ProtoMessage() {}

func (x *AfterSalesOrderListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aftersales_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AfterSalesOrderListResponse.ProtoReflect.Descriptor instead.
func (*AfterSalesOrderListResponse) Descriptor() ([]byte, []int) {
	return file_aftersales_service_proto_rawDescGZIP(), []int{3}
}

func (x *AfterSalesOrderListResponse) GetValue() []*SAfterSalesOrder {
	if x != nil {
		return x.Value
	}
	return nil
}

type PagingBuyerOrdersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BuyerId int64          `protobuf:"varint,1,opt,name=BuyerId,proto3" json:"BuyerId"`
	Params  *SPagingParams `protobuf:"bytes,2,opt,name=Params,proto3" json:"Params"`
}

func (x *PagingBuyerOrdersRequest) Reset() {
	*x = PagingBuyerOrdersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aftersales_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PagingBuyerOrdersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PagingBuyerOrdersRequest) ProtoMessage() {}

func (x *PagingBuyerOrdersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aftersales_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PagingBuyerOrdersRequest.ProtoReflect.Descriptor instead.
func (*PagingBuyerOrdersRequest) Descriptor() ([]byte, []int) {
	return file_aftersales_service_proto_rawDescGZIP(), []int{4}
}

func (x *PagingBuyerOrdersRequest) GetBuyerId() int64 {
	if x != nil {
		return x.BuyerId
	}
	return 0
}

func (x *PagingBuyerOrdersRequest) GetParams() *SPagingParams {
	if x != nil {
		return x.Params
	}
	return nil
}

type PagingSellerOrdersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SellerId int64          `protobuf:"varint,1,opt,name=SellerId,proto3" json:"SellerId"`
	Params   *SPagingParams `protobuf:"bytes,2,opt,name=Params,proto3" json:"Params"`
}

func (x *PagingSellerOrdersRequest) Reset() {
	*x = PagingSellerOrdersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aftersales_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PagingSellerOrdersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PagingSellerOrdersRequest) ProtoMessage() {}

func (x *PagingSellerOrdersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aftersales_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PagingSellerOrdersRequest.ProtoReflect.Descriptor instead.
func (*PagingSellerOrdersRequest) Descriptor() ([]byte, []int) {
	return file_aftersales_service_proto_rawDescGZIP(), []int{5}
}

func (x *PagingSellerOrdersRequest) GetSellerId() int64 {
	if x != nil {
		return x.SellerId
	}
	return 0
}

func (x *PagingSellerOrdersRequest) GetParams() *SPagingParams {
	if x != nil {
		return x.Params
	}
	return nil
}

type PagingBuyerAfterSalesOrderListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64                          `protobuf:"varint,1,opt,name=Total,proto3" json:"Total"`
	Data  []*SPagingBuyerAfterSalesOrder `protobuf:"bytes,2,rep,name=Data,proto3" json:"Data"`
}

func (x *PagingBuyerAfterSalesOrderListResponse) Reset() {
	*x = PagingBuyerAfterSalesOrderListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aftersales_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PagingBuyerAfterSalesOrderListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PagingBuyerAfterSalesOrderListResponse) ProtoMessage() {}

func (x *PagingBuyerAfterSalesOrderListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aftersales_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PagingBuyerAfterSalesOrderListResponse.ProtoReflect.Descriptor instead.
func (*PagingBuyerAfterSalesOrderListResponse) Descriptor() ([]byte, []int) {
	return file_aftersales_service_proto_rawDescGZIP(), []int{6}
}

func (x *PagingBuyerAfterSalesOrderListResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *PagingBuyerAfterSalesOrderListResponse) GetData() []*SPagingBuyerAfterSalesOrder {
	if x != nil {
		return x.Data
	}
	return nil
}

type PagingSellerAfterSalesOrderListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64                           `protobuf:"varint,1,opt,name=Total,proto3" json:"Total"`
	Data  []*SPagingSellerAfterSalesOrder `protobuf:"bytes,2,rep,name=Data,proto3" json:"Data"`
}

func (x *PagingSellerAfterSalesOrderListResponse) Reset() {
	*x = PagingSellerAfterSalesOrderListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aftersales_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PagingSellerAfterSalesOrderListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PagingSellerAfterSalesOrderListResponse) ProtoMessage() {}

func (x *PagingSellerAfterSalesOrderListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aftersales_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PagingSellerAfterSalesOrderListResponse.ProtoReflect.Descriptor instead.
func (*PagingSellerAfterSalesOrderListResponse) Descriptor() ([]byte, []int) {
	return file_aftersales_service_proto_rawDescGZIP(), []int{7}
}

func (x *PagingSellerAfterSalesOrderListResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *PagingSellerAfterSalesOrderListResponse) GetData() []*SPagingSellerAfterSalesOrder {
	if x != nil {
		return x.Data
	}
	return nil
}

// 售后单
type SAfterSalesOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 编号
	Id int64 `protobuf:"varint,1,opt,name=Id,proto3" json:"Id"`
	// 订单编号
	RelateOrderId int64 `protobuf:"varint,2,opt,name=RelateOrderId,proto3" json:"RelateOrderId"`
	// 运营商编号
	VendorId int64 `protobuf:"varint,3,opt,name=VendorId,proto3" json:"VendorId"`
	// 购买者编号
	BuyerId int64 `protobuf:"varint,4,opt,name=BuyerId,proto3" json:"BuyerId"`
	// 类型，退货、换货、维修
	AfterSalesType int32 `protobuf:"varint,5,opt,name=AfterSalesType,proto3" json:"AfterSalesType"`
	// 退货的商品项编号
	SnapshotId int64 `protobuf:"varint,6,opt,name=SnapshotId,proto3" json:"SnapshotId"`
	// 商品数量
	Quantity int32 `protobuf:"varint,7,opt,name=Quantity,proto3" json:"Quantity"`
	// 售后原因
	Reason string `protobuf:"bytes,8,opt,name=Reason,proto3" json:"Reason"`
	// 商品售后图片凭证
	ImageUrl string `protobuf:"bytes,9,opt,name=ImageUrl,proto3" json:"ImageUrl"`
	// 联系人
	PersonName string `protobuf:"bytes,10,opt,name=PersonName,proto3" json:"PersonName"`
	// 联系电话
	PersonPhone string `protobuf:"bytes,11,opt,name=PersonPhone,proto3" json:"PersonPhone"`
	// 退货的快递服务商编号
	ReturnSpName string `protobuf:"bytes,12,opt,name=ReturnSpName,proto3" json:"ReturnSpName"`
	// 退货的快递单号
	ReturnSpOrder string `protobuf:"bytes,13,opt,name=ReturnSpOrder,proto3" json:"ReturnSpOrder"`
	// 退货凭证
	ReturnSpImage string `protobuf:"bytes,14,opt,name=ReturnSpImage,proto3" json:"ReturnSpImage"`
	// 备注(系统)
	Remark string `protobuf:"bytes,15,opt,name=Remark,proto3" json:"Remark"`
	// 运营商备注
	VendorRemark string `protobuf:"bytes,16,opt,name=VendorRemark,proto3" json:"VendorRemark"`
	// 售后单状态
	State int32 `protobuf:"varint,17,opt,name=State,proto3" json:"State"`
	// 提交时间
	CreateTime int64 `protobuf:"varint,18,opt,name=CreateTime,proto3" json:"CreateTime"`
	// 更新时间
	UpdateTime int64 `protobuf:"varint,19,opt,name=UpdateTime,proto3" json:"UpdateTime"`
	// 订单状态
	StateText string `protobuf:"bytes,20,opt,name=StateText,proto3" json:"StateText"`
}

func (x *SAfterSalesOrder) Reset() {
	*x = SAfterSalesOrder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aftersales_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SAfterSalesOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SAfterSalesOrder) ProtoMessage() {}

func (x *SAfterSalesOrder) ProtoReflect() protoreflect.Message {
	mi := &file_aftersales_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SAfterSalesOrder.ProtoReflect.Descriptor instead.
func (*SAfterSalesOrder) Descriptor() ([]byte, []int) {
	return file_aftersales_service_proto_rawDescGZIP(), []int{8}
}

func (x *SAfterSalesOrder) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SAfterSalesOrder) GetRelateOrderId() int64 {
	if x != nil {
		return x.RelateOrderId
	}
	return 0
}

func (x *SAfterSalesOrder) GetVendorId() int64 {
	if x != nil {
		return x.VendorId
	}
	return 0
}

func (x *SAfterSalesOrder) GetBuyerId() int64 {
	if x != nil {
		return x.BuyerId
	}
	return 0
}

func (x *SAfterSalesOrder) GetAfterSalesType() int32 {
	if x != nil {
		return x.AfterSalesType
	}
	return 0
}

func (x *SAfterSalesOrder) GetSnapshotId() int64 {
	if x != nil {
		return x.SnapshotId
	}
	return 0
}

func (x *SAfterSalesOrder) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *SAfterSalesOrder) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *SAfterSalesOrder) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

func (x *SAfterSalesOrder) GetPersonName() string {
	if x != nil {
		return x.PersonName
	}
	return ""
}

func (x *SAfterSalesOrder) GetPersonPhone() string {
	if x != nil {
		return x.PersonPhone
	}
	return ""
}

func (x *SAfterSalesOrder) GetReturnSpName() string {
	if x != nil {
		return x.ReturnSpName
	}
	return ""
}

func (x *SAfterSalesOrder) GetReturnSpOrder() string {
	if x != nil {
		return x.ReturnSpOrder
	}
	return ""
}

func (x *SAfterSalesOrder) GetReturnSpImage() string {
	if x != nil {
		return x.ReturnSpImage
	}
	return ""
}

func (x *SAfterSalesOrder) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *SAfterSalesOrder) GetVendorRemark() string {
	if x != nil {
		return x.VendorRemark
	}
	return ""
}

func (x *SAfterSalesOrder) GetState() int32 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *SAfterSalesOrder) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *SAfterSalesOrder) GetUpdateTime() int64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

func (x *SAfterSalesOrder) GetStateText() string {
	if x != nil {
		return x.StateText
	}
	return ""
}

type SPagingBuyerAfterSalesOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 编号
	Id int64 `protobuf:"varint,1,opt,name=Id,proto3" json:"Id"`
	// 订单编号
	OrderNo string `protobuf:"bytes,2,opt,name=OrderNo,proto3" json:"OrderNo"`
	// 运营商编号
	VendorId int64 `protobuf:"varint,3,opt,name=VendorId,proto3" json:"VendorId"`
	// 运营商名称
	SellerName string `protobuf:"bytes,4,opt,name=SellerName,proto3" json:"SellerName"`
	// 类型，退货、换货、维修
	AfterSalesType int32 `protobuf:"varint,5,opt,name=AfterSalesType,proto3" json:"AfterSalesType"`
	// 退货的商品项编号
	SnapshotId int64 `protobuf:"varint,6,opt,name=SnapshotId,proto3" json:"SnapshotId"`
	// 商品数量
	Quantity  int32  `protobuf:"varint,7,opt,name=Quantity,proto3" json:"Quantity"`
	SkuId     int64  `protobuf:"varint,8,opt,name=SkuId,proto3" json:"SkuId"`
	ItemTitle string `protobuf:"bytes,9,opt,name=ItemTitle,proto3" json:"ItemTitle"`
	ItemImage string `protobuf:"bytes,10,opt,name=ItemImage,proto3" json:"ItemImage"`
	// 售后单状态
	State int32 `protobuf:"varint,11,opt,name=State,proto3" json:"State"`
	// 提交时间
	CreateTime int64 `protobuf:"varint,12,opt,name=CreateTime,proto3" json:"CreateTime"`
	// 更新时间
	UpdateTime int64 `protobuf:"varint,13,opt,name=UpdateTime,proto3" json:"UpdateTime"`
	// 订单状态
	StateText string `protobuf:"bytes,14,opt,name=StateText,proto3" json:"StateText"`
}

func (x *SPagingBuyerAfterSalesOrder) Reset() {
	*x = SPagingBuyerAfterSalesOrder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aftersales_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SPagingBuyerAfterSalesOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SPagingBuyerAfterSalesOrder) ProtoMessage() {}

func (x *SPagingBuyerAfterSalesOrder) ProtoReflect() protoreflect.Message {
	mi := &file_aftersales_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SPagingBuyerAfterSalesOrder.ProtoReflect.Descriptor instead.
func (*SPagingBuyerAfterSalesOrder) Descriptor() ([]byte, []int) {
	return file_aftersales_service_proto_rawDescGZIP(), []int{9}
}

func (x *SPagingBuyerAfterSalesOrder) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SPagingBuyerAfterSalesOrder) GetOrderNo() string {
	if x != nil {
		return x.OrderNo
	}
	return ""
}

func (x *SPagingBuyerAfterSalesOrder) GetVendorId() int64 {
	if x != nil {
		return x.VendorId
	}
	return 0
}

func (x *SPagingBuyerAfterSalesOrder) GetSellerName() string {
	if x != nil {
		return x.SellerName
	}
	return ""
}

func (x *SPagingBuyerAfterSalesOrder) GetAfterSalesType() int32 {
	if x != nil {
		return x.AfterSalesType
	}
	return 0
}

func (x *SPagingBuyerAfterSalesOrder) GetSnapshotId() int64 {
	if x != nil {
		return x.SnapshotId
	}
	return 0
}

func (x *SPagingBuyerAfterSalesOrder) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *SPagingBuyerAfterSalesOrder) GetSkuId() int64 {
	if x != nil {
		return x.SkuId
	}
	return 0
}

func (x *SPagingBuyerAfterSalesOrder) GetItemTitle() string {
	if x != nil {
		return x.ItemTitle
	}
	return ""
}

func (x *SPagingBuyerAfterSalesOrder) GetItemImage() string {
	if x != nil {
		return x.ItemImage
	}
	return ""
}

func (x *SPagingBuyerAfterSalesOrder) GetState() int32 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *SPagingBuyerAfterSalesOrder) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *SPagingBuyerAfterSalesOrder) GetUpdateTime() int64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

func (x *SPagingBuyerAfterSalesOrder) GetStateText() string {
	if x != nil {
		return x.StateText
	}
	return ""
}

// 分页商户售后单
type SPagingSellerAfterSalesOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 编号
	Id int64 `protobuf:"varint,1,opt,name=Id,proto3" json:"Id"`
	// 订单编号
	OrderNo string `protobuf:"bytes,2,opt,name=OrderNo,proto3" json:"OrderNo"`
	// 会员编号
	BuyerId int64 `protobuf:"varint,3,opt,name=BuyerId,proto3" json:"BuyerId"`
	// 会员名称
	BuyerName string `protobuf:"bytes,4,opt,name=BuyerName,proto3" json:"BuyerName"`
	// 类型，退货、换货、维修
	AfterSalesType int32 `protobuf:"varint,5,opt,name=AfterSalesType,proto3" json:"AfterSalesType"`
	// 退货的商品项编号
	SnapshotId int64 `protobuf:"varint,6,opt,name=SnapshotId,proto3" json:"SnapshotId"`
	// 商品数量
	Quantity  int32  `protobuf:"varint,7,opt,name=Quantity,proto3" json:"Quantity"`
	SkuId     int64  `protobuf:"varint,8,opt,name=SkuId,proto3" json:"SkuId"`
	ItemTitle string `protobuf:"bytes,9,opt,name=ItemTitle,proto3" json:"ItemTitle"`
	ItemImage string `protobuf:"bytes,10,opt,name=ItemImage,proto3" json:"ItemImage"`
	// 售后单状态
	State int32 `protobuf:"varint,11,opt,name=State,proto3" json:"State"`
	// 提交时间
	CreateTime int64 `protobuf:"varint,12,opt,name=CreateTime,proto3" json:"CreateTime"`
	// 更新时间
	UpdateTime int64 `protobuf:"varint,13,opt,name=UpdateTime,proto3" json:"UpdateTime"`
	// 订单状态
	StateText string `protobuf:"bytes,14,opt,name=StateText,proto3" json:"StateText"`
}

func (x *SPagingSellerAfterSalesOrder) Reset() {
	*x = SPagingSellerAfterSalesOrder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aftersales_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SPagingSellerAfterSalesOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SPagingSellerAfterSalesOrder) ProtoMessage() {}

func (x *SPagingSellerAfterSalesOrder) ProtoReflect() protoreflect.Message {
	mi := &file_aftersales_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SPagingSellerAfterSalesOrder.ProtoReflect.Descriptor instead.
func (*SPagingSellerAfterSalesOrder) Descriptor() ([]byte, []int) {
	return file_aftersales_service_proto_rawDescGZIP(), []int{10}
}

func (x *SPagingSellerAfterSalesOrder) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SPagingSellerAfterSalesOrder) GetOrderNo() string {
	if x != nil {
		return x.OrderNo
	}
	return ""
}

func (x *SPagingSellerAfterSalesOrder) GetBuyerId() int64 {
	if x != nil {
		return x.BuyerId
	}
	return 0
}

func (x *SPagingSellerAfterSalesOrder) GetBuyerName() string {
	if x != nil {
		return x.BuyerName
	}
	return ""
}

func (x *SPagingSellerAfterSalesOrder) GetAfterSalesType() int32 {
	if x != nil {
		return x.AfterSalesType
	}
	return 0
}

func (x *SPagingSellerAfterSalesOrder) GetSnapshotId() int64 {
	if x != nil {
		return x.SnapshotId
	}
	return 0
}

func (x *SPagingSellerAfterSalesOrder) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *SPagingSellerAfterSalesOrder) GetSkuId() int64 {
	if x != nil {
		return x.SkuId
	}
	return 0
}

func (x *SPagingSellerAfterSalesOrder) GetItemTitle() string {
	if x != nil {
		return x.ItemTitle
	}
	return ""
}

func (x *SPagingSellerAfterSalesOrder) GetItemImage() string {
	if x != nil {
		return x.ItemImage
	}
	return ""
}

func (x *SPagingSellerAfterSalesOrder) GetState() int32 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *SPagingSellerAfterSalesOrder) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *SPagingSellerAfterSalesOrder) GetUpdateTime() int64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

func (x *SPagingSellerAfterSalesOrder) GetStateText() string {
	if x != nil {
		return x.StateText
	}
	return ""
}

type ExchangeShipmentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      int64  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id"`
	SpName  string `protobuf:"bytes,2,opt,name=SpName,proto3" json:"SpName"`
	SpOrder string `protobuf:"bytes,3,opt,name=SpOrder,proto3" json:"SpOrder"`
}

func (x *ExchangeShipmentRequest) Reset() {
	*x = ExchangeShipmentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aftersales_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExchangeShipmentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExchangeShipmentRequest) ProtoMessage() {}

func (x *ExchangeShipmentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aftersales_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExchangeShipmentRequest.ProtoReflect.Descriptor instead.
func (*ExchangeShipmentRequest) Descriptor() ([]byte, []int) {
	return file_aftersales_service_proto_rawDescGZIP(), []int{11}
}

func (x *ExchangeShipmentRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ExchangeShipmentRequest) GetSpName() string {
	if x != nil {
		return x.SpName
	}
	return ""
}

func (x *ExchangeShipmentRequest) GetSpOrder() string {
	if x != nil {
		return x.SpOrder
	}
	return ""
}

var File_aftersales_service_proto protoreflect.FileDescriptor

var file_aftersales_service_proto_rawDesc = []byte{
	0x0a, 0x18, 0x61, 0x66, 0x74, 0x65, 0x72, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x67, 0x6c, 0x6f, 0x62,
	0x61, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x30, 0x0a, 0x14, 0x4f, 0x72, 0x69, 0x67,
	0x69, 0x6e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x22, 0xea, 0x01, 0x0a, 0x1c, 0x53,
	0x75, 0x62, 0x6d, 0x69, 0x74, 0x41, 0x66, 0x74, 0x65, 0x72, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x38, 0x0a, 0x0e, 0x41, 0x66, 0x74, 0x65, 0x72, 0x53, 0x61,
	0x6c, 0x65, 0x73, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e,
	0x45, 0x41, 0x66, 0x74, 0x65, 0x72, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x0e, 0x41, 0x66, 0x74, 0x65, 0x72, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x26, 0x0a, 0x0e, 0x49, 0x74, 0x65, 0x6d, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x49,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x49, 0x74, 0x65, 0x6d, 0x53, 0x6e, 0x61,
	0x70, 0x73, 0x68, 0x6f, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x51, 0x75, 0x61, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x51, 0x75, 0x61, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x22, 0x7f, 0x0a, 0x1d, 0x53, 0x75, 0x62, 0x6d, 0x69,
	0x74, 0x41, 0x66, 0x74, 0x65, 0x72, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x45, 0x72, 0x72, 0x43,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x45, 0x72, 0x72, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x45, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x45, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x12, 0x2c, 0x0a, 0x11, 0x41, 0x66,
	0x74, 0x65, 0x72, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x41, 0x66, 0x74, 0x65, 0x72, 0x53, 0x61, 0x6c, 0x65,
	0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x22, 0x46, 0x0a, 0x1b, 0x41, 0x66, 0x74, 0x65,
	0x72, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x53, 0x41, 0x66, 0x74, 0x65, 0x72, 0x53,
	0x61, 0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x22, 0x5c, 0x0a, 0x18, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x42, 0x75, 0x79, 0x65, 0x72, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x42, 0x75, 0x79, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x42,
	0x75, 0x79, 0x65, 0x72, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x06, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x53, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x06, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22, 0x5f,
	0x0a, 0x19, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x53,
	0x65, 0x6c, 0x6c, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x53,
	0x65, 0x6c, 0x6c, 0x65, 0x72, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x06, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x53, 0x50, 0x61, 0x67, 0x69, 0x6e,
	0x67, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x06, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22,
	0x70, 0x0a, 0x26, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x42, 0x75, 0x79, 0x65, 0x72, 0x41, 0x66,
	0x74, 0x65, 0x72, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f, 0x74,
	0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12,
	0x30, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x53, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x42, 0x75, 0x79, 0x65, 0x72, 0x41, 0x66, 0x74, 0x65,
	0x72, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x04, 0x44, 0x61, 0x74,
	0x61, 0x22, 0x72, 0x0a, 0x27, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x6c, 0x6c, 0x65,
	0x72, 0x41, 0x66, 0x74, 0x65, 0x72, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x54, 0x6f, 0x74,
	0x61, 0x6c, 0x12, 0x31, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1d, 0x2e, 0x53, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x6c, 0x6c, 0x65, 0x72,
	0x41, 0x66, 0x74, 0x65, 0x72, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52,
	0x04, 0x44, 0x61, 0x74, 0x61, 0x22, 0xf8, 0x04, 0x0a, 0x10, 0x53, 0x41, 0x66, 0x74, 0x65, 0x72,
	0x53, 0x61, 0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x52, 0x65,
	0x6c, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0d, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x42, 0x75, 0x79, 0x65, 0x72, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x42,
	0x75, 0x79, 0x65, 0x72, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x41, 0x66, 0x74, 0x65, 0x72, 0x53,
	0x61, 0x6c, 0x65, 0x73, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e,
	0x41, 0x66, 0x74, 0x65, 0x72, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0a, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x49, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x52, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x1e,
	0x0a, 0x0a, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x50, 0x68, 0x6f, 0x6e, 0x65,
	0x12, 0x22, 0x0a, 0x0c, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x53, 0x70, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x53, 0x70,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x53, 0x70,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x52, 0x65, 0x74,
	0x75, 0x72, 0x6e, 0x53, 0x70, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x24, 0x0a, 0x0d, 0x52, 0x65,
	0x74, 0x75, 0x72, 0x6e, 0x53, 0x70, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x53, 0x70, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x22, 0x0a, 0x0c, 0x56, 0x65, 0x6e, 0x64,
	0x6f, 0x72, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x14, 0x0a, 0x05,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x12, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x13, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x74, 0x61, 0x74, 0x65, 0x54, 0x65, 0x78, 0x74, 0x18,
	0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x53, 0x74, 0x61, 0x74, 0x65, 0x54, 0x65, 0x78, 0x74,
	0x22, 0xad, 0x03, 0x0a, 0x1b, 0x53, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x42, 0x75, 0x79, 0x65,
	0x72, 0x41, 0x66, 0x74, 0x65, 0x72, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x56, 0x65,
	0x6e, 0x64, 0x6f, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x56, 0x65,
	0x6e, 0x64, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x65, 0x6c, 0x6c, 0x65, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x53, 0x65, 0x6c, 0x6c,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x41, 0x66, 0x74, 0x65, 0x72, 0x53,
	0x61, 0x6c, 0x65, 0x73, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e,
	0x41, 0x66, 0x74, 0x65, 0x72, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0a, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x49, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x53, 0x6b,
	0x75, 0x49, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x53, 0x6b, 0x75, 0x49, 0x64,
	0x12, 0x1c, 0x0a, 0x09, 0x49, 0x74, 0x65, 0x6d, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x49, 0x74, 0x65, 0x6d, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x74, 0x61, 0x74, 0x65, 0x54, 0x65, 0x78, 0x74, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x53, 0x74, 0x61, 0x74, 0x65, 0x54, 0x65, 0x78, 0x74,
	0x22, 0xaa, 0x03, 0x0a, 0x1c, 0x53, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x6c, 0x6c,
	0x65, 0x72, 0x41, 0x66, 0x74, 0x65, 0x72, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x6f, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x42,
	0x75, 0x79, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x42, 0x75,
	0x79, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x42, 0x75, 0x79, 0x65, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x42, 0x75, 0x79, 0x65, 0x72, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x41, 0x66, 0x74, 0x65, 0x72, 0x53, 0x61, 0x6c, 0x65,
	0x73, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x41, 0x66, 0x74,
	0x65, 0x72, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x53,
	0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x51,
	0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x51,
	0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x53, 0x6b, 0x75, 0x49, 0x64,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x53, 0x6b, 0x75, 0x49, 0x64, 0x12, 0x1c, 0x0a,
	0x09, 0x49, 0x74, 0x65, 0x6d, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x49, 0x74, 0x65, 0x6d, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x49,
	0x74, 0x65, 0x6d, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x49, 0x74, 0x65, 0x6d, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12,
	0x1e, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x1e, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x53, 0x74, 0x61, 0x74, 0x65, 0x54, 0x65, 0x78, 0x74, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x53, 0x74, 0x61, 0x74, 0x65, 0x54, 0x65, 0x78, 0x74, 0x22, 0x5b, 0x0a,
	0x17, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x53, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x70, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x53, 0x70, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x53, 0x70, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x53, 0x70, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x2a, 0x63, 0x0a, 0x0f, 0x45, 0x41,
	0x66, 0x74, 0x65, 0x72, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0d, 0x0a,
	0x09, 0x54, 0x79, 0x70, 0x65, 0x55, 0x6e, 0x73, 0x65, 0x74, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x10, 0x02, 0x12, 0x10, 0x0a, 0x0c,
	0x54, 0x79, 0x70, 0x65, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x10, 0x03, 0x12, 0x0f,
	0x0a, 0x0b, 0x54, 0x79, 0x70, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x10, 0x04, 0x32,
	0xe0, 0x06, 0x0a, 0x11, 0x41, 0x66, 0x74, 0x65, 0x72, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x58, 0x0a, 0x15, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x41,
	0x66, 0x74, 0x65, 0x72, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x1d,
	0x2e, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x41, 0x66, 0x74, 0x65, 0x72, 0x53, 0x61, 0x6c, 0x65,
	0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e,
	0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x41, 0x66, 0x74, 0x65, 0x72, 0x53, 0x61, 0x6c, 0x65, 0x73,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x59, 0x0a, 0x20, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x41, 0x66, 0x74, 0x65, 0x72, 0x53, 0x61,
	0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4f, 0x66, 0x53, 0x61, 0x6c, 0x65, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x12, 0x15, 0x2e, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x41, 0x66, 0x74,
	0x65, 0x72, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x69, 0x0a, 0x21, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x50, 0x61, 0x67, 0x65, 0x72, 0x41, 0x66, 0x74, 0x65, 0x72, 0x53, 0x61, 0x6c,
	0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4f, 0x66, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12,
	0x19, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x42, 0x75, 0x79, 0x65, 0x72, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x50, 0x61, 0x67,
	0x69, 0x6e, 0x67, 0x42, 0x75, 0x79, 0x65, 0x72, 0x41, 0x66, 0x74, 0x65, 0x72, 0x53, 0x61, 0x6c,
	0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6b, 0x0a, 0x21, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x61,
	0x67, 0x65, 0x72, 0x41, 0x66, 0x74, 0x65, 0x72, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x4f, 0x66, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x12, 0x1a, 0x2e, 0x50, 0x61, 0x67,
	0x69, 0x6e, 0x67, 0x53, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x53,
	0x65, 0x6c, 0x6c, 0x65, 0x72, 0x41, 0x66, 0x74, 0x65, 0x72, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x30, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x41, 0x66, 0x74, 0x65, 0x72, 0x53, 0x61,
	0x6c, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x06, 0x2e, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x1a,
	0x11, 0x2e, 0x53, 0x41, 0x66, 0x74, 0x65, 0x72, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x22, 0x00, 0x12, 0x2a, 0x0a, 0x0f, 0x41, 0x67, 0x72, 0x65, 0x65, 0x41, 0x66, 0x74,
	0x65, 0x72, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x12, 0x0c, 0x2e, 0x49, 0x64, 0x41, 0x6e, 0x64, 0x52,
	0x65, 0x6d, 0x61, 0x72, 0x6b, 0x1a, 0x07, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00,
	0x12, 0x2c, 0x0a, 0x11, 0x44, 0x65, 0x63, 0x6c, 0x69, 0x6e, 0x65, 0x41, 0x66, 0x74, 0x65, 0x72,
	0x53, 0x61, 0x6c, 0x65, 0x73, 0x12, 0x0c, 0x2e, 0x49, 0x64, 0x41, 0x6e, 0x64, 0x52, 0x65, 0x6d,
	0x61, 0x72, 0x6b, 0x1a, 0x07, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x12, 0x25,
	0x0a, 0x10, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x63, 0x65,
	0x64, 0x65, 0x12, 0x06, 0x2e, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x1a, 0x07, 0x2e, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x22, 0x00, 0x12, 0x26, 0x0a, 0x11, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d,
	0x41, 0x66, 0x74, 0x65, 0x72, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x12, 0x06, 0x2e, 0x49, 0x6e, 0x74,
	0x36, 0x34, 0x1a, 0x07, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x12, 0x2b, 0x0a,
	0x10, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x41, 0x66, 0x74, 0x65, 0x72, 0x53, 0x61, 0x6c, 0x65,
	0x73, 0x12, 0x0c, 0x2e, 0x49, 0x64, 0x41, 0x6e, 0x64, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x1a,
	0x07, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x12, 0x2b, 0x0a, 0x16, 0x50, 0x72,
	0x6f, 0x63, 0x65, 0x73, 0x73, 0x41, 0x66, 0x74, 0x65, 0x72, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x12, 0x06, 0x2e, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x1a, 0x07, 0x2e, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x12, 0x2a, 0x0a, 0x15, 0x52, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x53, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74,
	0x12, 0x06, 0x2e, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x1a, 0x07, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x22, 0x00, 0x12, 0x37, 0x0a, 0x10, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x53,
	0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x18, 0x2e, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x53, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x07, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x12, 0x24, 0x0a, 0x0f,
	0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12,
	0x06, 0x2e, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x1a, 0x07, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x22, 0x00, 0x42, 0x3c, 0x0a, 0x13, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x67, 0x6f, 0x32, 0x6f, 0x2e, 0x72, 0x70, 0x63, 0x42, 0x1b, 0x41, 0x66, 0x74, 0x65, 0x72,
	0x53, 0x61, 0x6c, 0x65, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4f, 0x75, 0x74, 0x65,
	0x72, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5a, 0x08, 0x2e, 0x2f, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_aftersales_service_proto_rawDescOnce sync.Once
	file_aftersales_service_proto_rawDescData = file_aftersales_service_proto_rawDesc
)

func file_aftersales_service_proto_rawDescGZIP() []byte {
	file_aftersales_service_proto_rawDescOnce.Do(func() {
		file_aftersales_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_aftersales_service_proto_rawDescData)
	})
	return file_aftersales_service_proto_rawDescData
}

var file_aftersales_service_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_aftersales_service_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_aftersales_service_proto_goTypes = []interface{}{
	(EAfterSalesType)(0),                            // 0: EAfterSalesType
	(*OriginOrderIdRequest)(nil),                    // 1: OriginOrderIdRequest
	(*SubmitAfterSalesOrderRequest)(nil),            // 2: SubmitAfterSalesOrderRequest
	(*SubmitAfterSalesOrderResponse)(nil),           // 3: SubmitAfterSalesOrderResponse
	(*AfterSalesOrderListResponse)(nil),             // 4: AfterSalesOrderListResponse
	(*PagingBuyerOrdersRequest)(nil),                // 5: PagingBuyerOrdersRequest
	(*PagingSellerOrdersRequest)(nil),               // 6: PagingSellerOrdersRequest
	(*PagingBuyerAfterSalesOrderListResponse)(nil),  // 7: PagingBuyerAfterSalesOrderListResponse
	(*PagingSellerAfterSalesOrderListResponse)(nil), // 8: PagingSellerAfterSalesOrderListResponse
	(*SAfterSalesOrder)(nil),                        // 9: SAfterSalesOrder
	(*SPagingBuyerAfterSalesOrder)(nil),             // 10: SPagingBuyerAfterSalesOrder
	(*SPagingSellerAfterSalesOrder)(nil),            // 11: SPagingSellerAfterSalesOrder
	(*ExchangeShipmentRequest)(nil),                 // 12: ExchangeShipmentRequest
	(*SPagingParams)(nil),                           // 13: SPagingParams
	(*Int64)(nil),                                   // 14: Int64
	(*IdAndRemark)(nil),                             // 15: IdAndRemark
	(*Result)(nil),                                  // 16: Result
}
var file_aftersales_service_proto_depIdxs = []int32{
	0,  // 0: SubmitAfterSalesOrderRequest.AfterSalesType:type_name -> EAfterSalesType
	9,  // 1: AfterSalesOrderListResponse.Value:type_name -> SAfterSalesOrder
	13, // 2: PagingBuyerOrdersRequest.Params:type_name -> SPagingParams
	13, // 3: PagingSellerOrdersRequest.Params:type_name -> SPagingParams
	10, // 4: PagingBuyerAfterSalesOrderListResponse.Data:type_name -> SPagingBuyerAfterSalesOrder
	11, // 5: PagingSellerAfterSalesOrderListResponse.Data:type_name -> SPagingSellerAfterSalesOrder
	2,  // 6: AfterSalesService.SubmitAfterSalesOrder:input_type -> SubmitAfterSalesOrderRequest
	1,  // 7: AfterSalesService.GetAllAfterSalesOrderOfSaleOrder:input_type -> OriginOrderIdRequest
	5,  // 8: AfterSalesService.QueryPagerAfterSalesOrderOfMember:input_type -> PagingBuyerOrdersRequest
	6,  // 9: AfterSalesService.QueryPagerAfterSalesOrderOfVendor:input_type -> PagingSellerOrdersRequest
	14, // 10: AfterSalesService.GetAfterSaleOrder:input_type -> Int64
	15, // 11: AfterSalesService.AgreeAfterSales:input_type -> IdAndRemark
	15, // 12: AfterSalesService.DeclineAfterSales:input_type -> IdAndRemark
	14, // 13: AfterSalesService.RequestIntercede:input_type -> Int64
	14, // 14: AfterSalesService.ConfirmAfterSales:input_type -> Int64
	15, // 15: AfterSalesService.RejectAfterSales:input_type -> IdAndRemark
	14, // 16: AfterSalesService.ProcessAfterSalesOrder:input_type -> Int64
	14, // 17: AfterSalesService.ReceiveReturnShipment:input_type -> Int64
	12, // 18: AfterSalesService.ExchangeShipment:input_type -> ExchangeShipmentRequest
	14, // 19: AfterSalesService.ReceiveExchange:input_type -> Int64
	3,  // 20: AfterSalesService.SubmitAfterSalesOrder:output_type -> SubmitAfterSalesOrderResponse
	4,  // 21: AfterSalesService.GetAllAfterSalesOrderOfSaleOrder:output_type -> AfterSalesOrderListResponse
	7,  // 22: AfterSalesService.QueryPagerAfterSalesOrderOfMember:output_type -> PagingBuyerAfterSalesOrderListResponse
	8,  // 23: AfterSalesService.QueryPagerAfterSalesOrderOfVendor:output_type -> PagingSellerAfterSalesOrderListResponse
	9,  // 24: AfterSalesService.GetAfterSaleOrder:output_type -> SAfterSalesOrder
	16, // 25: AfterSalesService.AgreeAfterSales:output_type -> Result
	16, // 26: AfterSalesService.DeclineAfterSales:output_type -> Result
	16, // 27: AfterSalesService.RequestIntercede:output_type -> Result
	16, // 28: AfterSalesService.ConfirmAfterSales:output_type -> Result
	16, // 29: AfterSalesService.RejectAfterSales:output_type -> Result
	16, // 30: AfterSalesService.ProcessAfterSalesOrder:output_type -> Result
	16, // 31: AfterSalesService.ReceiveReturnShipment:output_type -> Result
	16, // 32: AfterSalesService.ExchangeShipment:output_type -> Result
	16, // 33: AfterSalesService.ReceiveExchange:output_type -> Result
	20, // [20:34] is the sub-list for method output_type
	6,  // [6:20] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_aftersales_service_proto_init() }
func file_aftersales_service_proto_init() {
	if File_aftersales_service_proto != nil {
		return
	}
	file_global_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_aftersales_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OriginOrderIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aftersales_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubmitAfterSalesOrderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aftersales_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubmitAfterSalesOrderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aftersales_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AfterSalesOrderListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aftersales_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PagingBuyerOrdersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aftersales_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PagingSellerOrdersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aftersales_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PagingBuyerAfterSalesOrderListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aftersales_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PagingSellerAfterSalesOrderListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aftersales_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SAfterSalesOrder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aftersales_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SPagingBuyerAfterSalesOrder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aftersales_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SPagingSellerAfterSalesOrder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aftersales_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExchangeShipmentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_aftersales_service_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_aftersales_service_proto_goTypes,
		DependencyIndexes: file_aftersales_service_proto_depIdxs,
		EnumInfos:         file_aftersales_service_proto_enumTypes,
		MessageInfos:      file_aftersales_service_proto_msgTypes,
	}.Build()
	File_aftersales_service_proto = out.File
	file_aftersales_service_proto_rawDesc = nil
	file_aftersales_service_proto_goTypes = nil
	file_aftersales_service_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// AfterSalesServiceClient is the client API for AfterSalesService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AfterSalesServiceClient interface {
	// 提交售后单
	SubmitAfterSalesOrder(ctx context.Context, in *SubmitAfterSalesOrderRequest, opts ...grpc.CallOption) (*SubmitAfterSalesOrderResponse, error)
	// 获取订单的所有售后单,orderId
	GetAllAfterSalesOrderOfSaleOrder(ctx context.Context, in *OriginOrderIdRequest, opts ...grpc.CallOption) (*AfterSalesOrderListResponse, error)
	// 获取会员的分页售后单
	QueryPagerAfterSalesOrderOfMember(ctx context.Context, in *PagingBuyerOrdersRequest, opts ...grpc.CallOption) (*PagingBuyerAfterSalesOrderListResponse, error)
	// 获取商户的分页售后单
	QueryPagerAfterSalesOrderOfVendor(ctx context.Context, in *PagingSellerOrdersRequest, opts ...grpc.CallOption) (*PagingSellerAfterSalesOrderListResponse, error)
	// 获取售后单
	GetAfterSaleOrder(ctx context.Context, in *Int64, opts ...grpc.CallOption) (*SAfterSalesOrder, error)
	// 同意售后
	AgreeAfterSales(ctx context.Context, in *IdAndRemark, opts ...grpc.CallOption) (*Result, error)
	// 拒绝售后
	DeclineAfterSales(ctx context.Context, in *IdAndRemark, opts ...grpc.CallOption) (*Result, error)
	// 申请调解
	RequestIntercede(ctx context.Context, in *Int64, opts ...grpc.CallOption) (*Result, error)
	// 系统确认
	ConfirmAfterSales(ctx context.Context, in *Int64, opts ...grpc.CallOption) (*Result, error)
	// 系统退回
	RejectAfterSales(ctx context.Context, in *IdAndRemark, opts ...grpc.CallOption) (*Result, error)
	// 处理退款/退货完成,一般是系统自动调用
	ProcessAfterSalesOrder(ctx context.Context, in *Int64, opts ...grpc.CallOption) (*Result, error)
	// 售后收货
	ReceiveReturnShipment(ctx context.Context, in *Int64, opts ...grpc.CallOption) (*Result, error)
	// 换货发货
	ExchangeShipment(ctx context.Context, in *ExchangeShipmentRequest, opts ...grpc.CallOption) (*Result, error)
	// 换货收货
	ReceiveExchange(ctx context.Context, in *Int64, opts ...grpc.CallOption) (*Result, error)
}

type afterSalesServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewAfterSalesServiceClient(cc grpc.ClientConnInterface) AfterSalesServiceClient {
	return &afterSalesServiceClient{cc}
}

func (c *afterSalesServiceClient) SubmitAfterSalesOrder(ctx context.Context, in *SubmitAfterSalesOrderRequest, opts ...grpc.CallOption) (*SubmitAfterSalesOrderResponse, error) {
	out := new(SubmitAfterSalesOrderResponse)
	err := c.cc.Invoke(ctx, "/AfterSalesService/SubmitAfterSalesOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *afterSalesServiceClient) GetAllAfterSalesOrderOfSaleOrder(ctx context.Context, in *OriginOrderIdRequest, opts ...grpc.CallOption) (*AfterSalesOrderListResponse, error) {
	out := new(AfterSalesOrderListResponse)
	err := c.cc.Invoke(ctx, "/AfterSalesService/GetAllAfterSalesOrderOfSaleOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *afterSalesServiceClient) QueryPagerAfterSalesOrderOfMember(ctx context.Context, in *PagingBuyerOrdersRequest, opts ...grpc.CallOption) (*PagingBuyerAfterSalesOrderListResponse, error) {
	out := new(PagingBuyerAfterSalesOrderListResponse)
	err := c.cc.Invoke(ctx, "/AfterSalesService/QueryPagerAfterSalesOrderOfMember", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *afterSalesServiceClient) QueryPagerAfterSalesOrderOfVendor(ctx context.Context, in *PagingSellerOrdersRequest, opts ...grpc.CallOption) (*PagingSellerAfterSalesOrderListResponse, error) {
	out := new(PagingSellerAfterSalesOrderListResponse)
	err := c.cc.Invoke(ctx, "/AfterSalesService/QueryPagerAfterSalesOrderOfVendor", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *afterSalesServiceClient) GetAfterSaleOrder(ctx context.Context, in *Int64, opts ...grpc.CallOption) (*SAfterSalesOrder, error) {
	out := new(SAfterSalesOrder)
	err := c.cc.Invoke(ctx, "/AfterSalesService/GetAfterSaleOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *afterSalesServiceClient) AgreeAfterSales(ctx context.Context, in *IdAndRemark, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := c.cc.Invoke(ctx, "/AfterSalesService/AgreeAfterSales", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *afterSalesServiceClient) DeclineAfterSales(ctx context.Context, in *IdAndRemark, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := c.cc.Invoke(ctx, "/AfterSalesService/DeclineAfterSales", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *afterSalesServiceClient) RequestIntercede(ctx context.Context, in *Int64, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := c.cc.Invoke(ctx, "/AfterSalesService/RequestIntercede", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *afterSalesServiceClient) ConfirmAfterSales(ctx context.Context, in *Int64, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := c.cc.Invoke(ctx, "/AfterSalesService/ConfirmAfterSales", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *afterSalesServiceClient) RejectAfterSales(ctx context.Context, in *IdAndRemark, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := c.cc.Invoke(ctx, "/AfterSalesService/RejectAfterSales", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *afterSalesServiceClient) ProcessAfterSalesOrder(ctx context.Context, in *Int64, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := c.cc.Invoke(ctx, "/AfterSalesService/ProcessAfterSalesOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *afterSalesServiceClient) ReceiveReturnShipment(ctx context.Context, in *Int64, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := c.cc.Invoke(ctx, "/AfterSalesService/ReceiveReturnShipment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *afterSalesServiceClient) ExchangeShipment(ctx context.Context, in *ExchangeShipmentRequest, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := c.cc.Invoke(ctx, "/AfterSalesService/ExchangeShipment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *afterSalesServiceClient) ReceiveExchange(ctx context.Context, in *Int64, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := c.cc.Invoke(ctx, "/AfterSalesService/ReceiveExchange", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AfterSalesServiceServer is the server API for AfterSalesService service.
type AfterSalesServiceServer interface {
	// 提交售后单
	SubmitAfterSalesOrder(context.Context, *SubmitAfterSalesOrderRequest) (*SubmitAfterSalesOrderResponse, error)
	// 获取订单的所有售后单,orderId
	GetAllAfterSalesOrderOfSaleOrder(context.Context, *OriginOrderIdRequest) (*AfterSalesOrderListResponse, error)
	// 获取会员的分页售后单
	QueryPagerAfterSalesOrderOfMember(context.Context, *PagingBuyerOrdersRequest) (*PagingBuyerAfterSalesOrderListResponse, error)
	// 获取商户的分页售后单
	QueryPagerAfterSalesOrderOfVendor(context.Context, *PagingSellerOrdersRequest) (*PagingSellerAfterSalesOrderListResponse, error)
	// 获取售后单
	GetAfterSaleOrder(context.Context, *Int64) (*SAfterSalesOrder, error)
	// 同意售后
	AgreeAfterSales(context.Context, *IdAndRemark) (*Result, error)
	// 拒绝售后
	DeclineAfterSales(context.Context, *IdAndRemark) (*Result, error)
	// 申请调解
	RequestIntercede(context.Context, *Int64) (*Result, error)
	// 系统确认
	ConfirmAfterSales(context.Context, *Int64) (*Result, error)
	// 系统退回
	RejectAfterSales(context.Context, *IdAndRemark) (*Result, error)
	// 处理退款/退货完成,一般是系统自动调用
	ProcessAfterSalesOrder(context.Context, *Int64) (*Result, error)
	// 售后收货
	ReceiveReturnShipment(context.Context, *Int64) (*Result, error)
	// 换货发货
	ExchangeShipment(context.Context, *ExchangeShipmentRequest) (*Result, error)
	// 换货收货
	ReceiveExchange(context.Context, *Int64) (*Result, error)
}

// UnimplementedAfterSalesServiceServer can be embedded to have forward compatible implementations.
type UnimplementedAfterSalesServiceServer struct {
}

func (*UnimplementedAfterSalesServiceServer) SubmitAfterSalesOrder(context.Context, *SubmitAfterSalesOrderRequest) (*SubmitAfterSalesOrderResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SubmitAfterSalesOrder not implemented")
}
func (*UnimplementedAfterSalesServiceServer) GetAllAfterSalesOrderOfSaleOrder(context.Context, *OriginOrderIdRequest) (*AfterSalesOrderListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAllAfterSalesOrderOfSaleOrder not implemented")
}
func (*UnimplementedAfterSalesServiceServer) QueryPagerAfterSalesOrderOfMember(context.Context, *PagingBuyerOrdersRequest) (*PagingBuyerAfterSalesOrderListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryPagerAfterSalesOrderOfMember not implemented")
}
func (*UnimplementedAfterSalesServiceServer) QueryPagerAfterSalesOrderOfVendor(context.Context, *PagingSellerOrdersRequest) (*PagingSellerAfterSalesOrderListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryPagerAfterSalesOrderOfVendor not implemented")
}
func (*UnimplementedAfterSalesServiceServer) GetAfterSaleOrder(context.Context, *Int64) (*SAfterSalesOrder, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAfterSaleOrder not implemented")
}
func (*UnimplementedAfterSalesServiceServer) AgreeAfterSales(context.Context, *IdAndRemark) (*Result, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AgreeAfterSales not implemented")
}
func (*UnimplementedAfterSalesServiceServer) DeclineAfterSales(context.Context, *IdAndRemark) (*Result, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeclineAfterSales not implemented")
}
func (*UnimplementedAfterSalesServiceServer) RequestIntercede(context.Context, *Int64) (*Result, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RequestIntercede not implemented")
}
func (*UnimplementedAfterSalesServiceServer) ConfirmAfterSales(context.Context, *Int64) (*Result, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ConfirmAfterSales not implemented")
}
func (*UnimplementedAfterSalesServiceServer) RejectAfterSales(context.Context, *IdAndRemark) (*Result, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RejectAfterSales not implemented")
}
func (*UnimplementedAfterSalesServiceServer) ProcessAfterSalesOrder(context.Context, *Int64) (*Result, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ProcessAfterSalesOrder not implemented")
}
func (*UnimplementedAfterSalesServiceServer) ReceiveReturnShipment(context.Context, *Int64) (*Result, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReceiveReturnShipment not implemented")
}
func (*UnimplementedAfterSalesServiceServer) ExchangeShipment(context.Context, *ExchangeShipmentRequest) (*Result, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ExchangeShipment not implemented")
}
func (*UnimplementedAfterSalesServiceServer) ReceiveExchange(context.Context, *Int64) (*Result, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReceiveExchange not implemented")
}

func RegisterAfterSalesServiceServer(s *grpc.Server, srv AfterSalesServiceServer) {
	s.RegisterService(&_AfterSalesService_serviceDesc, srv)
}

func _AfterSalesService_SubmitAfterSalesOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SubmitAfterSalesOrderRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AfterSalesServiceServer).SubmitAfterSalesOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/AfterSalesService/SubmitAfterSalesOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AfterSalesServiceServer).SubmitAfterSalesOrder(ctx, req.(*SubmitAfterSalesOrderRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AfterSalesService_GetAllAfterSalesOrderOfSaleOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OriginOrderIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AfterSalesServiceServer).GetAllAfterSalesOrderOfSaleOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/AfterSalesService/GetAllAfterSalesOrderOfSaleOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AfterSalesServiceServer).GetAllAfterSalesOrderOfSaleOrder(ctx, req.(*OriginOrderIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AfterSalesService_QueryPagerAfterSalesOrderOfMember_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PagingBuyerOrdersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AfterSalesServiceServer).QueryPagerAfterSalesOrderOfMember(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/AfterSalesService/QueryPagerAfterSalesOrderOfMember",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AfterSalesServiceServer).QueryPagerAfterSalesOrderOfMember(ctx, req.(*PagingBuyerOrdersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AfterSalesService_QueryPagerAfterSalesOrderOfVendor_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PagingSellerOrdersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AfterSalesServiceServer).QueryPagerAfterSalesOrderOfVendor(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/AfterSalesService/QueryPagerAfterSalesOrderOfVendor",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AfterSalesServiceServer).QueryPagerAfterSalesOrderOfVendor(ctx, req.(*PagingSellerOrdersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AfterSalesService_GetAfterSaleOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AfterSalesServiceServer).GetAfterSaleOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/AfterSalesService/GetAfterSaleOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AfterSalesServiceServer).GetAfterSaleOrder(ctx, req.(*Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _AfterSalesService_AgreeAfterSales_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IdAndRemark)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AfterSalesServiceServer).AgreeAfterSales(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/AfterSalesService/AgreeAfterSales",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AfterSalesServiceServer).AgreeAfterSales(ctx, req.(*IdAndRemark))
	}
	return interceptor(ctx, in, info, handler)
}

func _AfterSalesService_DeclineAfterSales_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IdAndRemark)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AfterSalesServiceServer).DeclineAfterSales(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/AfterSalesService/DeclineAfterSales",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AfterSalesServiceServer).DeclineAfterSales(ctx, req.(*IdAndRemark))
	}
	return interceptor(ctx, in, info, handler)
}

func _AfterSalesService_RequestIntercede_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AfterSalesServiceServer).RequestIntercede(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/AfterSalesService/RequestIntercede",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AfterSalesServiceServer).RequestIntercede(ctx, req.(*Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _AfterSalesService_ConfirmAfterSales_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AfterSalesServiceServer).ConfirmAfterSales(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/AfterSalesService/ConfirmAfterSales",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AfterSalesServiceServer).ConfirmAfterSales(ctx, req.(*Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _AfterSalesService_RejectAfterSales_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IdAndRemark)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AfterSalesServiceServer).RejectAfterSales(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/AfterSalesService/RejectAfterSales",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AfterSalesServiceServer).RejectAfterSales(ctx, req.(*IdAndRemark))
	}
	return interceptor(ctx, in, info, handler)
}

func _AfterSalesService_ProcessAfterSalesOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AfterSalesServiceServer).ProcessAfterSalesOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/AfterSalesService/ProcessAfterSalesOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AfterSalesServiceServer).ProcessAfterSalesOrder(ctx, req.(*Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _AfterSalesService_ReceiveReturnShipment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AfterSalesServiceServer).ReceiveReturnShipment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/AfterSalesService/ReceiveReturnShipment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AfterSalesServiceServer).ReceiveReturnShipment(ctx, req.(*Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _AfterSalesService_ExchangeShipment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ExchangeShipmentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AfterSalesServiceServer).ExchangeShipment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/AfterSalesService/ExchangeShipment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AfterSalesServiceServer).ExchangeShipment(ctx, req.(*ExchangeShipmentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AfterSalesService_ReceiveExchange_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AfterSalesServiceServer).ReceiveExchange(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/AfterSalesService/ReceiveExchange",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AfterSalesServiceServer).ReceiveExchange(ctx, req.(*Int64))
	}
	return interceptor(ctx, in, info, handler)
}

var _AfterSalesService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "AfterSalesService",
	HandlerType: (*AfterSalesServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SubmitAfterSalesOrder",
			Handler:    _AfterSalesService_SubmitAfterSalesOrder_Handler,
		},
		{
			MethodName: "GetAllAfterSalesOrderOfSaleOrder",
			Handler:    _AfterSalesService_GetAllAfterSalesOrderOfSaleOrder_Handler,
		},
		{
			MethodName: "QueryPagerAfterSalesOrderOfMember",
			Handler:    _AfterSalesService_QueryPagerAfterSalesOrderOfMember_Handler,
		},
		{
			MethodName: "QueryPagerAfterSalesOrderOfVendor",
			Handler:    _AfterSalesService_QueryPagerAfterSalesOrderOfVendor_Handler,
		},
		{
			MethodName: "GetAfterSaleOrder",
			Handler:    _AfterSalesService_GetAfterSaleOrder_Handler,
		},
		{
			MethodName: "AgreeAfterSales",
			Handler:    _AfterSalesService_AgreeAfterSales_Handler,
		},
		{
			MethodName: "DeclineAfterSales",
			Handler:    _AfterSalesService_DeclineAfterSales_Handler,
		},
		{
			MethodName: "RequestIntercede",
			Handler:    _AfterSalesService_RequestIntercede_Handler,
		},
		{
			MethodName: "ConfirmAfterSales",
			Handler:    _AfterSalesService_ConfirmAfterSales_Handler,
		},
		{
			MethodName: "RejectAfterSales",
			Handler:    _AfterSalesService_RejectAfterSales_Handler,
		},
		{
			MethodName: "ProcessAfterSalesOrder",
			Handler:    _AfterSalesService_ProcessAfterSalesOrder_Handler,
		},
		{
			MethodName: "ReceiveReturnShipment",
			Handler:    _AfterSalesService_ReceiveReturnShipment_Handler,
		},
		{
			MethodName: "ExchangeShipment",
			Handler:    _AfterSalesService_ExchangeShipment_Handler,
		},
		{
			MethodName: "ReceiveExchange",
			Handler:    _AfterSalesService_ReceiveExchange_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "aftersales_service.proto",
}
