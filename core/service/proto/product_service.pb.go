// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.13.0
// source: product_service.proto

package proto

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

var File_product_service_proto protoreflect.FileDescriptor

var file_product_service_proto_rawDesc = []byte{
	0x0a, 0x15, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x64, 0x74, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x32, 0x84, 0x08, 0x0a, 0x0e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x2d, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12,
	0x0f, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x49, 0x64,
	0x1a, 0x0e, 0x2e, 0x53, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c,
	0x22, 0x00, 0x12, 0x30, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x12,
	0x06, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x19, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x2a, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x41, 0x74, 0x74, 0x72, 0x12,
	0x0e, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x41, 0x74, 0x74, 0x72, 0x49, 0x64, 0x1a,
	0x0d, 0x2e, 0x53, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x41, 0x74, 0x74, 0x72, 0x22, 0x00,
	0x12, 0x36, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x41, 0x74, 0x74, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x12,
	0x12, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x41, 0x74, 0x74, 0x72, 0x49, 0x74, 0x65,
	0x6d, 0x49, 0x64, 0x1a, 0x11, 0x2e, 0x53, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x41, 0x74,
	0x74, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x22, 0x00, 0x12, 0x2f, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x41, 0x74, 0x74, 0x72, 0x73, 0x48, 0x74, 0x6d, 0x6c, 0x12, 0x0f, 0x2e,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x49, 0x64, 0x1a, 0x07,
	0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x22, 0x00, 0x12, 0x2d, 0x0a, 0x10, 0x53, 0x61, 0x76,
	0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x0e, 0x2e,
	0x53, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x1a, 0x07, 0x2e,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x12, 0x31, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x12,
	0x0f, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x49, 0x64,
	0x1a, 0x07, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x12, 0x2c, 0x0a, 0x10, 0x47,
	0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x5f, 0x12,
	0x06, 0x2e, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x1a, 0x0e, 0x2e, 0x53, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x22, 0x00, 0x12, 0x2e, 0x0a, 0x11, 0x53, 0x61, 0x76,
	0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x5f, 0x12, 0x0e,
	0x2e, 0x53, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x1a, 0x07,
	0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x12, 0x28, 0x0a, 0x13, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x5f,
	0x12, 0x06, 0x2e, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x1a, 0x07, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x22, 0x00, 0x12, 0x30, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x73,
	0x12, 0x06, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x19, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x35, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x43, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x12, 0x06, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1a,
	0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x2a, 0x0a, 0x0b,
	0x47, 0x65, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x06, 0x2e, 0x49, 0x6e,
	0x74, 0x36, 0x34, 0x1a, 0x11, 0x2e, 0x53, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x22, 0x00, 0x12, 0x23, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x06, 0x2e, 0x49, 0x6e, 0x74,
	0x36, 0x34, 0x1a, 0x07, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x12, 0x2c, 0x0a,
	0x0c, 0x53, 0x61, 0x76, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x11, 0x2e,
	0x53, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x1a, 0x07, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x12, 0x2b, 0x0a, 0x13, 0x47,
	0x65, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x54, 0x72, 0x65, 0x65, 0x4e, 0x6f,
	0x64, 0x65, 0x12, 0x06, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x0a, 0x2e, 0x53, 0x54, 0x72,
	0x65, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x22, 0x00, 0x12, 0x3e, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x43,
	0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x12, 0x11, 0x2e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x1a, 0x1a, 0x2e, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x25, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x0a, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x49, 0x64, 0x1a, 0x09, 0x2e, 0x53, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x22, 0x00, 0x12,
	0x30, 0x0a, 0x0b, 0x53, 0x61, 0x76, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x09,
	0x2e, 0x53, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x1a, 0x14, 0x2e, 0x53, 0x61, 0x76, 0x65,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x31, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x12, 0x15, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x07, 0x2e, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x22, 0x00, 0x12, 0x31, 0x0a, 0x0f, 0x53, 0x61, 0x76, 0x65, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x13, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x07, 0x2e, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x42, 0x1e, 0x0a, 0x13, 0x63, 0x6f, 0x6d, 0x2e, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x67, 0x6f, 0x32, 0x6f, 0x2e, 0x72, 0x70, 0x63, 0x5a, 0x07,
	0x2e, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var file_product_service_proto_goTypes = []interface{}{
	(*ProductModelId)(nil),            // 0: ProductModelId
	(*Empty)(nil),                     // 1: Empty
	(*ProductAttrId)(nil),             // 2: ProductAttrId
	(*ProductAttrItemId)(nil),         // 3: ProductAttrItemId
	(*SProductModel)(nil),             // 4: SProductModel
	(*Int64)(nil),                     // 5: Int64
	(*SProductBrand)(nil),             // 6: SProductBrand
	(*SProductCategory)(nil),          // 7: SProductCategory
	(*CategoryParentId)(nil),          // 8: CategoryParentId
	(*ProductId)(nil),                 // 9: ProductId
	(*SProduct)(nil),                  // 10: SProduct
	(*DeleteProductRequest)(nil),      // 11: DeleteProductRequest
	(*ProductInfoRequest)(nil),        // 12: ProductInfoRequest
	(*ProductModelListResponse)(nil),  // 13: ProductModelListResponse
	(*SProductAttr)(nil),              // 14: SProductAttr
	(*SProductAttrItem)(nil),          // 15: SProductAttrItem
	(*String)(nil),                    // 16: String
	(*Result)(nil),                    // 17: Result
	(*ProductBrandListResponse)(nil),  // 18: ProductBrandListResponse
	(*ProductCategoriesResponse)(nil), // 19: ProductCategoriesResponse
	(*STreeNode)(nil),                 // 20: STreeNode
	(*SaveProductResponse)(nil),       // 21: SaveProductResponse
}
var file_product_service_proto_depIdxs = []int32{
	0,  // 0: ProductService.GetModel:input_type -> ProductModelId
	1,  // 1: ProductService.GetModels:input_type -> Empty
	2,  // 2: ProductService.GetAttr:input_type -> ProductAttrId
	3,  // 3: ProductService.GetAttrItem:input_type -> ProductAttrItemId
	0,  // 4: ProductService.GetModelAttrsHtml:input_type -> ProductModelId
	4,  // 5: ProductService.SaveProductModel:input_type -> SProductModel
	0,  // 6: ProductService.DeleteProductModel_:input_type -> ProductModelId
	5,  // 7: ProductService.GetProductBrand_:input_type -> Int64
	6,  // 8: ProductService.SaveProductBrand_:input_type -> SProductBrand
	5,  // 9: ProductService.DeleteProductBrand_:input_type -> Int64
	1,  // 10: ProductService.GetBrands:input_type -> Empty
	1,  // 11: ProductService.GetCategories:input_type -> Empty
	5,  // 12: ProductService.GetCategory:input_type -> Int64
	5,  // 13: ProductService.DeleteCategory:input_type -> Int64
	7,  // 14: ProductService.SaveCategory:input_type -> SProductCategory
	1,  // 15: ProductService.GetCategoryTreeNode:input_type -> Empty
	8,  // 16: ProductService.GetChildren:input_type -> CategoryParentId
	9,  // 17: ProductService.GetProduct:input_type -> ProductId
	10, // 18: ProductService.SaveProduct:input_type -> SProduct
	11, // 19: ProductService.DeleteProduct:input_type -> DeleteProductRequest
	12, // 20: ProductService.SaveProductInfo:input_type -> ProductInfoRequest
	4,  // 21: ProductService.GetModel:output_type -> SProductModel
	13, // 22: ProductService.GetModels:output_type -> ProductModelListResponse
	14, // 23: ProductService.GetAttr:output_type -> SProductAttr
	15, // 24: ProductService.GetAttrItem:output_type -> SProductAttrItem
	16, // 25: ProductService.GetModelAttrsHtml:output_type -> String
	17, // 26: ProductService.SaveProductModel:output_type -> Result
	17, // 27: ProductService.DeleteProductModel_:output_type -> Result
	6,  // 28: ProductService.GetProductBrand_:output_type -> SProductBrand
	17, // 29: ProductService.SaveProductBrand_:output_type -> Result
	17, // 30: ProductService.DeleteProductBrand_:output_type -> Result
	18, // 31: ProductService.GetBrands:output_type -> ProductBrandListResponse
	19, // 32: ProductService.GetCategories:output_type -> ProductCategoriesResponse
	7,  // 33: ProductService.GetCategory:output_type -> SProductCategory
	17, // 34: ProductService.DeleteCategory:output_type -> Result
	17, // 35: ProductService.SaveCategory:output_type -> Result
	20, // 36: ProductService.GetCategoryTreeNode:output_type -> STreeNode
	19, // 37: ProductService.GetChildren:output_type -> ProductCategoriesResponse
	10, // 38: ProductService.GetProduct:output_type -> SProduct
	21, // 39: ProductService.SaveProduct:output_type -> SaveProductResponse
	17, // 40: ProductService.DeleteProduct:output_type -> Result
	17, // 41: ProductService.SaveProductInfo:output_type -> Result
	21, // [21:42] is the sub-list for method output_type
	0,  // [0:21] is the sub-list for method input_type
	0,  // [0:0] is the sub-list for extension type_name
	0,  // [0:0] is the sub-list for extension extendee
	0,  // [0:0] is the sub-list for field type_name
}

func init() { file_product_service_proto_init() }
func file_product_service_proto_init() {
	if File_product_service_proto != nil {
		return
	}
	file_global_proto_init()
	file_message_product_dto_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_product_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_product_service_proto_goTypes,
		DependencyIndexes: file_product_service_proto_depIdxs,
	}.Build()
	File_product_service_proto = out.File
	file_product_service_proto_rawDesc = nil
	file_product_service_proto_goTypes = nil
	file_product_service_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ProductServiceClient is the client API for ProductService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ProductServiceClient interface {
	// 获取产品模型
	GetModel(ctx context.Context, in *ProductModelId, opts ...grpc.CallOption) (*SProductModel, error)
	// 获取产品模型
	GetModels(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*ProductModelListResponse, error)
	// 获取属性
	GetAttr(ctx context.Context, in *ProductAttrId, opts ...grpc.CallOption) (*SProductAttr, error)
	// 获取属性项
	GetAttrItem(ctx context.Context, in *ProductAttrItemId, opts ...grpc.CallOption) (*SProductAttrItem, error)
	// 获取模型属性Html
	GetModelAttrsHtml(ctx context.Context, in *ProductModelId, opts ...grpc.CallOption) (*String, error)
	// 保存产品模型
	SaveProductModel(ctx context.Context, in *SProductModel, opts ...grpc.CallOption) (*Result, error)
	// 删除产品模型
	DeleteProductModel_(ctx context.Context, in *ProductModelId, opts ...grpc.CallOption) (*Result, error)
	// Get 产品品牌
	GetProductBrand_(ctx context.Context, in *Int64, opts ...grpc.CallOption) (*SProductBrand, error)
	// Save 产品品牌
	SaveProductBrand_(ctx context.Context, in *SProductBrand, opts ...grpc.CallOption) (*Result, error)
	// Delete 产品品牌
	DeleteProductBrand_(ctx context.Context, in *Int64, opts ...grpc.CallOption) (*Result, error)
	// 获取所有产品品牌
	GetBrands(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*ProductBrandListResponse, error)
	// 获取全部分类
	GetCategories(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*ProductCategoriesResponse, error)
	// 获取商品分类
	GetCategory(ctx context.Context, in *Int64, opts ...grpc.CallOption) (*SProductCategory, error)
	// 获取商品分类和选项
	//    rpc GetCategoryAndOptions(mchId int64, id int32) (*product.Category,
	//    domain.IOptionStore)
	DeleteCategory(ctx context.Context, in *Int64, opts ...grpc.CallOption) (*Result, error)
	// 保存产品分类
	SaveCategory(ctx context.Context, in *SProductCategory, opts ...grpc.CallOption) (*Result, error)
	GetCategoryTreeNode(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*STreeNode, error)
	// 根据上级编号获取分类列表
	GetChildren(ctx context.Context, in *CategoryParentId, opts ...grpc.CallOption) (*ProductCategoriesResponse, error)
	// 获取产品值
	GetProduct(ctx context.Context, in *ProductId, opts ...grpc.CallOption) (*SProduct, error)
	// 保存产品
	SaveProduct(ctx context.Context, in *SProduct, opts ...grpc.CallOption) (*SaveProductResponse, error)
	// 删除产品
	DeleteProduct(ctx context.Context, in *DeleteProductRequest, opts ...grpc.CallOption) (*Result, error)
	// 保存货品描述
	SaveProductInfo(ctx context.Context, in *ProductInfoRequest, opts ...grpc.CallOption) (*Result, error)
}

type productServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewProductServiceClient(cc grpc.ClientConnInterface) ProductServiceClient {
	return &productServiceClient{cc}
}

func (c *productServiceClient) GetModel(ctx context.Context, in *ProductModelId, opts ...grpc.CallOption) (*SProductModel, error) {
	out := new(SProductModel)
	err := c.cc.Invoke(ctx, "/ProductService/GetModel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *productServiceClient) GetModels(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*ProductModelListResponse, error) {
	out := new(ProductModelListResponse)
	err := c.cc.Invoke(ctx, "/ProductService/GetModels", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *productServiceClient) GetAttr(ctx context.Context, in *ProductAttrId, opts ...grpc.CallOption) (*SProductAttr, error) {
	out := new(SProductAttr)
	err := c.cc.Invoke(ctx, "/ProductService/GetAttr", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *productServiceClient) GetAttrItem(ctx context.Context, in *ProductAttrItemId, opts ...grpc.CallOption) (*SProductAttrItem, error) {
	out := new(SProductAttrItem)
	err := c.cc.Invoke(ctx, "/ProductService/GetAttrItem", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *productServiceClient) GetModelAttrsHtml(ctx context.Context, in *ProductModelId, opts ...grpc.CallOption) (*String, error) {
	out := new(String)
	err := c.cc.Invoke(ctx, "/ProductService/GetModelAttrsHtml", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *productServiceClient) SaveProductModel(ctx context.Context, in *SProductModel, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := c.cc.Invoke(ctx, "/ProductService/SaveProductModel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *productServiceClient) DeleteProductModel_(ctx context.Context, in *ProductModelId, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := c.cc.Invoke(ctx, "/ProductService/DeleteProductModel_", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *productServiceClient) GetProductBrand_(ctx context.Context, in *Int64, opts ...grpc.CallOption) (*SProductBrand, error) {
	out := new(SProductBrand)
	err := c.cc.Invoke(ctx, "/ProductService/GetProductBrand_", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *productServiceClient) SaveProductBrand_(ctx context.Context, in *SProductBrand, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := c.cc.Invoke(ctx, "/ProductService/SaveProductBrand_", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *productServiceClient) DeleteProductBrand_(ctx context.Context, in *Int64, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := c.cc.Invoke(ctx, "/ProductService/DeleteProductBrand_", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *productServiceClient) GetBrands(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*ProductBrandListResponse, error) {
	out := new(ProductBrandListResponse)
	err := c.cc.Invoke(ctx, "/ProductService/GetBrands", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *productServiceClient) GetCategories(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*ProductCategoriesResponse, error) {
	out := new(ProductCategoriesResponse)
	err := c.cc.Invoke(ctx, "/ProductService/GetCategories", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *productServiceClient) GetCategory(ctx context.Context, in *Int64, opts ...grpc.CallOption) (*SProductCategory, error) {
	out := new(SProductCategory)
	err := c.cc.Invoke(ctx, "/ProductService/GetCategory", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *productServiceClient) DeleteCategory(ctx context.Context, in *Int64, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := c.cc.Invoke(ctx, "/ProductService/DeleteCategory", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *productServiceClient) SaveCategory(ctx context.Context, in *SProductCategory, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := c.cc.Invoke(ctx, "/ProductService/SaveCategory", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *productServiceClient) GetCategoryTreeNode(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*STreeNode, error) {
	out := new(STreeNode)
	err := c.cc.Invoke(ctx, "/ProductService/GetCategoryTreeNode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *productServiceClient) GetChildren(ctx context.Context, in *CategoryParentId, opts ...grpc.CallOption) (*ProductCategoriesResponse, error) {
	out := new(ProductCategoriesResponse)
	err := c.cc.Invoke(ctx, "/ProductService/GetChildren", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *productServiceClient) GetProduct(ctx context.Context, in *ProductId, opts ...grpc.CallOption) (*SProduct, error) {
	out := new(SProduct)
	err := c.cc.Invoke(ctx, "/ProductService/GetProduct", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *productServiceClient) SaveProduct(ctx context.Context, in *SProduct, opts ...grpc.CallOption) (*SaveProductResponse, error) {
	out := new(SaveProductResponse)
	err := c.cc.Invoke(ctx, "/ProductService/SaveProduct", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *productServiceClient) DeleteProduct(ctx context.Context, in *DeleteProductRequest, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := c.cc.Invoke(ctx, "/ProductService/DeleteProduct", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *productServiceClient) SaveProductInfo(ctx context.Context, in *ProductInfoRequest, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := c.cc.Invoke(ctx, "/ProductService/SaveProductInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ProductServiceServer is the server API for ProductService service.
type ProductServiceServer interface {
	// 获取产品模型
	GetModel(context.Context, *ProductModelId) (*SProductModel, error)
	// 获取产品模型
	GetModels(context.Context, *Empty) (*ProductModelListResponse, error)
	// 获取属性
	GetAttr(context.Context, *ProductAttrId) (*SProductAttr, error)
	// 获取属性项
	GetAttrItem(context.Context, *ProductAttrItemId) (*SProductAttrItem, error)
	// 获取模型属性Html
	GetModelAttrsHtml(context.Context, *ProductModelId) (*String, error)
	// 保存产品模型
	SaveProductModel(context.Context, *SProductModel) (*Result, error)
	// 删除产品模型
	DeleteProductModel_(context.Context, *ProductModelId) (*Result, error)
	// Get 产品品牌
	GetProductBrand_(context.Context, *Int64) (*SProductBrand, error)
	// Save 产品品牌
	SaveProductBrand_(context.Context, *SProductBrand) (*Result, error)
	// Delete 产品品牌
	DeleteProductBrand_(context.Context, *Int64) (*Result, error)
	// 获取所有产品品牌
	GetBrands(context.Context, *Empty) (*ProductBrandListResponse, error)
	// 获取全部分类
	GetCategories(context.Context, *Empty) (*ProductCategoriesResponse, error)
	// 获取商品分类
	GetCategory(context.Context, *Int64) (*SProductCategory, error)
	// 获取商品分类和选项
	//    rpc GetCategoryAndOptions(mchId int64, id int32) (*product.Category,
	//    domain.IOptionStore)
	DeleteCategory(context.Context, *Int64) (*Result, error)
	// 保存产品分类
	SaveCategory(context.Context, *SProductCategory) (*Result, error)
	GetCategoryTreeNode(context.Context, *Empty) (*STreeNode, error)
	// 根据上级编号获取分类列表
	GetChildren(context.Context, *CategoryParentId) (*ProductCategoriesResponse, error)
	// 获取产品值
	GetProduct(context.Context, *ProductId) (*SProduct, error)
	// 保存产品
	SaveProduct(context.Context, *SProduct) (*SaveProductResponse, error)
	// 删除产品
	DeleteProduct(context.Context, *DeleteProductRequest) (*Result, error)
	// 保存货品描述
	SaveProductInfo(context.Context, *ProductInfoRequest) (*Result, error)
}

// UnimplementedProductServiceServer can be embedded to have forward compatible implementations.
type UnimplementedProductServiceServer struct {
}

func (*UnimplementedProductServiceServer) GetModel(context.Context, *ProductModelId) (*SProductModel, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetModel not implemented")
}
func (*UnimplementedProductServiceServer) GetModels(context.Context, *Empty) (*ProductModelListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetModels not implemented")
}
func (*UnimplementedProductServiceServer) GetAttr(context.Context, *ProductAttrId) (*SProductAttr, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAttr not implemented")
}
func (*UnimplementedProductServiceServer) GetAttrItem(context.Context, *ProductAttrItemId) (*SProductAttrItem, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAttrItem not implemented")
}
func (*UnimplementedProductServiceServer) GetModelAttrsHtml(context.Context, *ProductModelId) (*String, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetModelAttrsHtml not implemented")
}
func (*UnimplementedProductServiceServer) SaveProductModel(context.Context, *SProductModel) (*Result, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SaveProductModel not implemented")
}
func (*UnimplementedProductServiceServer) DeleteProductModel_(context.Context, *ProductModelId) (*Result, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteProductModel_ not implemented")
}
func (*UnimplementedProductServiceServer) GetProductBrand_(context.Context, *Int64) (*SProductBrand, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetProductBrand_ not implemented")
}
func (*UnimplementedProductServiceServer) SaveProductBrand_(context.Context, *SProductBrand) (*Result, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SaveProductBrand_ not implemented")
}
func (*UnimplementedProductServiceServer) DeleteProductBrand_(context.Context, *Int64) (*Result, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteProductBrand_ not implemented")
}
func (*UnimplementedProductServiceServer) GetBrands(context.Context, *Empty) (*ProductBrandListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBrands not implemented")
}
func (*UnimplementedProductServiceServer) GetCategories(context.Context, *Empty) (*ProductCategoriesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCategories not implemented")
}
func (*UnimplementedProductServiceServer) GetCategory(context.Context, *Int64) (*SProductCategory, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCategory not implemented")
}
func (*UnimplementedProductServiceServer) DeleteCategory(context.Context, *Int64) (*Result, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteCategory not implemented")
}
func (*UnimplementedProductServiceServer) SaveCategory(context.Context, *SProductCategory) (*Result, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SaveCategory not implemented")
}
func (*UnimplementedProductServiceServer) GetCategoryTreeNode(context.Context, *Empty) (*STreeNode, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCategoryTreeNode not implemented")
}
func (*UnimplementedProductServiceServer) GetChildren(context.Context, *CategoryParentId) (*ProductCategoriesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetChildren not implemented")
}
func (*UnimplementedProductServiceServer) GetProduct(context.Context, *ProductId) (*SProduct, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetProduct not implemented")
}
func (*UnimplementedProductServiceServer) SaveProduct(context.Context, *SProduct) (*SaveProductResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SaveProduct not implemented")
}
func (*UnimplementedProductServiceServer) DeleteProduct(context.Context, *DeleteProductRequest) (*Result, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteProduct not implemented")
}
func (*UnimplementedProductServiceServer) SaveProductInfo(context.Context, *ProductInfoRequest) (*Result, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SaveProductInfo not implemented")
}

func RegisterProductServiceServer(s *grpc.Server, srv ProductServiceServer) {
	s.RegisterService(&_ProductService_serviceDesc, srv)
}

func _ProductService_GetModel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ProductModelId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProductServiceServer).GetModel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ProductService/GetModel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProductServiceServer).GetModel(ctx, req.(*ProductModelId))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProductService_GetModels_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProductServiceServer).GetModels(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ProductService/GetModels",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProductServiceServer).GetModels(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProductService_GetAttr_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ProductAttrId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProductServiceServer).GetAttr(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ProductService/GetAttr",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProductServiceServer).GetAttr(ctx, req.(*ProductAttrId))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProductService_GetAttrItem_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ProductAttrItemId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProductServiceServer).GetAttrItem(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ProductService/GetAttrItem",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProductServiceServer).GetAttrItem(ctx, req.(*ProductAttrItemId))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProductService_GetModelAttrsHtml_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ProductModelId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProductServiceServer).GetModelAttrsHtml(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ProductService/GetModelAttrsHtml",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProductServiceServer).GetModelAttrsHtml(ctx, req.(*ProductModelId))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProductService_SaveProductModel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SProductModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProductServiceServer).SaveProductModel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ProductService/SaveProductModel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProductServiceServer).SaveProductModel(ctx, req.(*SProductModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProductService_DeleteProductModel__Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ProductModelId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProductServiceServer).DeleteProductModel_(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ProductService/DeleteProductModel_",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProductServiceServer).DeleteProductModel_(ctx, req.(*ProductModelId))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProductService_GetProductBrand__Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProductServiceServer).GetProductBrand_(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ProductService/GetProductBrand_",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProductServiceServer).GetProductBrand_(ctx, req.(*Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProductService_SaveProductBrand__Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SProductBrand)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProductServiceServer).SaveProductBrand_(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ProductService/SaveProductBrand_",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProductServiceServer).SaveProductBrand_(ctx, req.(*SProductBrand))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProductService_DeleteProductBrand__Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProductServiceServer).DeleteProductBrand_(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ProductService/DeleteProductBrand_",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProductServiceServer).DeleteProductBrand_(ctx, req.(*Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProductService_GetBrands_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProductServiceServer).GetBrands(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ProductService/GetBrands",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProductServiceServer).GetBrands(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProductService_GetCategories_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProductServiceServer).GetCategories(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ProductService/GetCategories",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProductServiceServer).GetCategories(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProductService_GetCategory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProductServiceServer).GetCategory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ProductService/GetCategory",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProductServiceServer).GetCategory(ctx, req.(*Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProductService_DeleteCategory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProductServiceServer).DeleteCategory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ProductService/DeleteCategory",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProductServiceServer).DeleteCategory(ctx, req.(*Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProductService_SaveCategory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SProductCategory)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProductServiceServer).SaveCategory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ProductService/SaveCategory",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProductServiceServer).SaveCategory(ctx, req.(*SProductCategory))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProductService_GetCategoryTreeNode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProductServiceServer).GetCategoryTreeNode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ProductService/GetCategoryTreeNode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProductServiceServer).GetCategoryTreeNode(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProductService_GetChildren_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CategoryParentId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProductServiceServer).GetChildren(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ProductService/GetChildren",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProductServiceServer).GetChildren(ctx, req.(*CategoryParentId))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProductService_GetProduct_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ProductId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProductServiceServer).GetProduct(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ProductService/GetProduct",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProductServiceServer).GetProduct(ctx, req.(*ProductId))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProductService_SaveProduct_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SProduct)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProductServiceServer).SaveProduct(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ProductService/SaveProduct",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProductServiceServer).SaveProduct(ctx, req.(*SProduct))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProductService_DeleteProduct_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteProductRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProductServiceServer).DeleteProduct(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ProductService/DeleteProduct",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProductServiceServer).DeleteProduct(ctx, req.(*DeleteProductRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProductService_SaveProductInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ProductInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProductServiceServer).SaveProductInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ProductService/SaveProductInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProductServiceServer).SaveProductInfo(ctx, req.(*ProductInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ProductService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ProductService",
	HandlerType: (*ProductServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetModel",
			Handler:    _ProductService_GetModel_Handler,
		},
		{
			MethodName: "GetModels",
			Handler:    _ProductService_GetModels_Handler,
		},
		{
			MethodName: "GetAttr",
			Handler:    _ProductService_GetAttr_Handler,
		},
		{
			MethodName: "GetAttrItem",
			Handler:    _ProductService_GetAttrItem_Handler,
		},
		{
			MethodName: "GetModelAttrsHtml",
			Handler:    _ProductService_GetModelAttrsHtml_Handler,
		},
		{
			MethodName: "SaveProductModel",
			Handler:    _ProductService_SaveProductModel_Handler,
		},
		{
			MethodName: "DeleteProductModel_",
			Handler:    _ProductService_DeleteProductModel__Handler,
		},
		{
			MethodName: "GetProductBrand_",
			Handler:    _ProductService_GetProductBrand__Handler,
		},
		{
			MethodName: "SaveProductBrand_",
			Handler:    _ProductService_SaveProductBrand__Handler,
		},
		{
			MethodName: "DeleteProductBrand_",
			Handler:    _ProductService_DeleteProductBrand__Handler,
		},
		{
			MethodName: "GetBrands",
			Handler:    _ProductService_GetBrands_Handler,
		},
		{
			MethodName: "GetCategories",
			Handler:    _ProductService_GetCategories_Handler,
		},
		{
			MethodName: "GetCategory",
			Handler:    _ProductService_GetCategory_Handler,
		},
		{
			MethodName: "DeleteCategory",
			Handler:    _ProductService_DeleteCategory_Handler,
		},
		{
			MethodName: "SaveCategory",
			Handler:    _ProductService_SaveCategory_Handler,
		},
		{
			MethodName: "GetCategoryTreeNode",
			Handler:    _ProductService_GetCategoryTreeNode_Handler,
		},
		{
			MethodName: "GetChildren",
			Handler:    _ProductService_GetChildren_Handler,
		},
		{
			MethodName: "GetProduct",
			Handler:    _ProductService_GetProduct_Handler,
		},
		{
			MethodName: "SaveProduct",
			Handler:    _ProductService_SaveProduct_Handler,
		},
		{
			MethodName: "DeleteProduct",
			Handler:    _ProductService_DeleteProduct_Handler,
		},
		{
			MethodName: "SaveProductInfo",
			Handler:    _ProductService_SaveProductInfo_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "product_service.proto",
}
