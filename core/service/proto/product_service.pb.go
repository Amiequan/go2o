// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.14.0
// source: product_service.proto

package proto

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DeleteProductRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SellerId  int64 `protobuf:"varint,1,opt,name=SellerId,proto3" json:"SellerId"`
	ProductId int64 `protobuf:"varint,2,opt,name=ProductId,proto3" json:"ProductId"`
}

func (x *DeleteProductRequest) Reset() {
	*x = DeleteProductRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteProductRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteProductRequest) ProtoMessage() {}

func (x *DeleteProductRequest) ProtoReflect() protoreflect.Message {
	mi := &file_product_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteProductRequest.ProtoReflect.Descriptor instead.
func (*DeleteProductRequest) Descriptor() ([]byte, []int) {
	return file_product_service_proto_rawDescGZIP(), []int{0}
}

func (x *DeleteProductRequest) GetSellerId() int64 {
	if x != nil {
		return x.SellerId
	}
	return 0
}

func (x *DeleteProductRequest) GetProductId() int64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

type ProductId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value int64 `protobuf:"varint,1,opt,name=Value,proto3" json:"Value"`
}

func (x *ProductId) Reset() {
	*x = ProductId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductId) ProtoMessage() {}

func (x *ProductId) ProtoReflect() protoreflect.Message {
	mi := &file_product_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductId.ProtoReflect.Descriptor instead.
func (*ProductId) Descriptor() ([]byte, []int) {
	return file_product_service_proto_rawDescGZIP(), []int{1}
}

func (x *ProductId) GetValue() int64 {
	if x != nil {
		return x.Value
	}
	return 0
}

type ProductModelId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value int64 `protobuf:"varint,1,opt,name=Value,proto3" json:"Value"`
}

func (x *ProductModelId) Reset() {
	*x = ProductModelId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductModelId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductModelId) ProtoMessage() {}

func (x *ProductModelId) ProtoReflect() protoreflect.Message {
	mi := &file_product_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductModelId.ProtoReflect.Descriptor instead.
func (*ProductModelId) Descriptor() ([]byte, []int) {
	return file_product_service_proto_rawDescGZIP(), []int{2}
}

func (x *ProductModelId) GetValue() int64 {
	if x != nil {
		return x.Value
	}
	return 0
}

type ProductAttrId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value int64 `protobuf:"varint,1,opt,name=Value,proto3" json:"Value"`
}

func (x *ProductAttrId) Reset() {
	*x = ProductAttrId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductAttrId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductAttrId) ProtoMessage() {}

func (x *ProductAttrId) ProtoReflect() protoreflect.Message {
	mi := &file_product_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductAttrId.ProtoReflect.Descriptor instead.
func (*ProductAttrId) Descriptor() ([]byte, []int) {
	return file_product_service_proto_rawDescGZIP(), []int{3}
}

func (x *ProductAttrId) GetValue() int64 {
	if x != nil {
		return x.Value
	}
	return 0
}

type ProductAttrItemId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value int64 `protobuf:"varint,1,opt,name=Value,proto3" json:"Value"`
}

func (x *ProductAttrItemId) Reset() {
	*x = ProductAttrItemId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductAttrItemId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductAttrItemId) ProtoMessage() {}

func (x *ProductAttrItemId) ProtoReflect() protoreflect.Message {
	mi := &file_product_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductAttrItemId.ProtoReflect.Descriptor instead.
func (*ProductAttrItemId) Descriptor() ([]byte, []int) {
	return file_product_service_proto_rawDescGZIP(), []int{4}
}

func (x *ProductAttrItemId) GetValue() int64 {
	if x != nil {
		return x.Value
	}
	return 0
}

type ProductModelListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value []*SProductModel `protobuf:"bytes,1,rep,name=Value,proto3" json:"Value"`
}

func (x *ProductModelListResponse) Reset() {
	*x = ProductModelListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductModelListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductModelListResponse) ProtoMessage() {}

func (x *ProductModelListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_product_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductModelListResponse.ProtoReflect.Descriptor instead.
func (*ProductModelListResponse) Descriptor() ([]byte, []int) {
	return file_product_service_proto_rawDescGZIP(), []int{5}
}

func (x *ProductModelListResponse) GetValue() []*SProductModel {
	if x != nil {
		return x.Value
	}
	return nil
}

// 产品模型
type SProductModel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 编号
	Id int64 `protobuf:"varint,1,opt,name=Id,proto3" json:"Id"`
	// 名称
	Name string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name"`
	// 属性字符
	AttrStr string `protobuf:"bytes,3,opt,name=AttrStr,proto3" json:"AttrStr"`
	// 规格字符
	SpecStr string `protobuf:"bytes,4,opt,name=SpecStr,proto3" json:"SpecStr"`
	// 属性
	Attrs []*SProductAttr `protobuf:"bytes,5,rep,name=Attrs,proto3" json:"Attrs"`
	// 规格
	Specs []*SProductSpec `protobuf:"bytes,6,rep,name=Specs,proto3" json:"Specs"`
	// 关联品牌
	Brands []*SProductBrand `protobuf:"bytes,7,rep,name=Brands,proto3" json:"Brands"`
	// 是否启用
	Enabled int32 `protobuf:"varint,8,opt,name=Enabled,proto3" json:"Enabled"`
}

func (x *SProductModel) Reset() {
	*x = SProductModel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SProductModel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SProductModel) ProtoMessage() {}

func (x *SProductModel) ProtoReflect() protoreflect.Message {
	mi := &file_product_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SProductModel.ProtoReflect.Descriptor instead.
func (*SProductModel) Descriptor() ([]byte, []int) {
	return file_product_service_proto_rawDescGZIP(), []int{6}
}

func (x *SProductModel) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SProductModel) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SProductModel) GetAttrStr() string {
	if x != nil {
		return x.AttrStr
	}
	return ""
}

func (x *SProductModel) GetSpecStr() string {
	if x != nil {
		return x.SpecStr
	}
	return ""
}

func (x *SProductModel) GetAttrs() []*SProductAttr {
	if x != nil {
		return x.Attrs
	}
	return nil
}

func (x *SProductModel) GetSpecs() []*SProductSpec {
	if x != nil {
		return x.Specs
	}
	return nil
}

func (x *SProductModel) GetBrands() []*SProductBrand {
	if x != nil {
		return x.Brands
	}
	return nil
}

func (x *SProductModel) GetEnabled() int32 {
	if x != nil {
		return x.Enabled
	}
	return 0
}

// 产品模型属性
type SProductAttr struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 编号
	Id int64 `protobuf:"varint,1,opt,name=Id,proto3" json:"Id"`
	// 属性名称
	Name string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name"`
	// 是否作为筛选条件
	IsFilter int32 `protobuf:"varint,3,opt,name=IsFilter,proto3" json:"IsFilter"`
	// 是否多选
	MultiCheck int32 `protobuf:"varint,4,opt,name=MultiCheck,proto3" json:"MultiCheck"`
	// 排列序号
	SortNum int32 `protobuf:"varint,5,opt,name=SortNum,proto3" json:"SortNum"`
	// 属性项值
	ItemValues string `protobuf:"bytes,6,opt,name=ItemValues,proto3" json:"ItemValues"`
	// 属性项
	Items []*SProductAttrItem `protobuf:"bytes,7,rep,name=Items,proto3" json:"Items"`
}

func (x *SProductAttr) Reset() {
	*x = SProductAttr{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SProductAttr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SProductAttr) ProtoMessage() {}

func (x *SProductAttr) ProtoReflect() protoreflect.Message {
	mi := &file_product_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SProductAttr.ProtoReflect.Descriptor instead.
func (*SProductAttr) Descriptor() ([]byte, []int) {
	return file_product_service_proto_rawDescGZIP(), []int{7}
}

func (x *SProductAttr) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SProductAttr) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SProductAttr) GetIsFilter() int32 {
	if x != nil {
		return x.IsFilter
	}
	return 0
}

func (x *SProductAttr) GetMultiCheck() int32 {
	if x != nil {
		return x.MultiCheck
	}
	return 0
}

func (x *SProductAttr) GetSortNum() int32 {
	if x != nil {
		return x.SortNum
	}
	return 0
}

func (x *SProductAttr) GetItemValues() string {
	if x != nil {
		return x.ItemValues
	}
	return ""
}

func (x *SProductAttr) GetItems() []*SProductAttrItem {
	if x != nil {
		return x.Items
	}
	return nil
}

// 产品模型属性项
type SProductAttrItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 编号
	Id int64 `protobuf:"varint,1,opt,name=Id,proto3" json:"Id"`
	// 属性值
	Value string `protobuf:"bytes,2,opt,name=Value,proto3" json:"Value"`
	// 排列序号
	SortNum int32 `protobuf:"varint,3,opt,name=SortNum,proto3" json:"SortNum"`
}

func (x *SProductAttrItem) Reset() {
	*x = SProductAttrItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SProductAttrItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SProductAttrItem) ProtoMessage() {}

func (x *SProductAttrItem) ProtoReflect() protoreflect.Message {
	mi := &file_product_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SProductAttrItem.ProtoReflect.Descriptor instead.
func (*SProductAttrItem) Descriptor() ([]byte, []int) {
	return file_product_service_proto_rawDescGZIP(), []int{8}
}

func (x *SProductAttrItem) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SProductAttrItem) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *SProductAttrItem) GetSortNum() int32 {
	if x != nil {
		return x.SortNum
	}
	return 0
}

// 产品属性值
type SProductAttrValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 编号
	Id int64 `protobuf:"varint,1,opt,name=Id,proto3" json:"Id"`
	// 属性编号
	AttrId int64 `protobuf:"varint,2,opt,name=AttrId,proto3" json:"AttrId"`
	// 属性名称
	AttrName string `protobuf:"bytes,3,opt,name=AttrName,proto3" json:"AttrName"`
	// 属性值
	AttrData string `protobuf:"bytes,4,opt,name=AttrData,proto3" json:"AttrData"`
	// 属性文本
	AttrWord string `protobuf:"bytes,5,opt,name=AttrWord,proto3" json:"AttrWord"`
}

func (x *SProductAttrValue) Reset() {
	*x = SProductAttrValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SProductAttrValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SProductAttrValue) ProtoMessage() {}

func (x *SProductAttrValue) ProtoReflect() protoreflect.Message {
	mi := &file_product_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SProductAttrValue.ProtoReflect.Descriptor instead.
func (*SProductAttrValue) Descriptor() ([]byte, []int) {
	return file_product_service_proto_rawDescGZIP(), []int{9}
}

func (x *SProductAttrValue) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SProductAttrValue) GetAttrId() int64 {
	if x != nil {
		return x.AttrId
	}
	return 0
}

func (x *SProductAttrValue) GetAttrName() string {
	if x != nil {
		return x.AttrName
	}
	return ""
}

func (x *SProductAttrValue) GetAttrData() string {
	if x != nil {
		return x.AttrData
	}
	return ""
}

func (x *SProductAttrValue) GetAttrWord() string {
	if x != nil {
		return x.AttrWord
	}
	return ""
}

// 产品模型规格
type SProductSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 编号
	Id int64 `protobuf:"varint,1,opt,name=Id,proto3" json:"Id"`
	// 规格名称
	Name string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name"`
	// 排列序号
	SortNum int32 `protobuf:"varint,3,opt,name=SortNum,proto3" json:"SortNum"`
	// 规格项值
	ItemValues string `protobuf:"bytes,4,opt,name=ItemValues,proto3" json:"ItemValues"`
	// 规格项
	Items []*SProductSpecItem `protobuf:"bytes,5,rep,name=Items,proto3" json:"Items"`
}

func (x *SProductSpec) Reset() {
	*x = SProductSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SProductSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SProductSpec) ProtoMessage() {}

func (x *SProductSpec) ProtoReflect() protoreflect.Message {
	mi := &file_product_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SProductSpec.ProtoReflect.Descriptor instead.
func (*SProductSpec) Descriptor() ([]byte, []int) {
	return file_product_service_proto_rawDescGZIP(), []int{10}
}

func (x *SProductSpec) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SProductSpec) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SProductSpec) GetSortNum() int32 {
	if x != nil {
		return x.SortNum
	}
	return 0
}

func (x *SProductSpec) GetItemValues() string {
	if x != nil {
		return x.ItemValues
	}
	return ""
}

func (x *SProductSpec) GetItems() []*SProductSpecItem {
	if x != nil {
		return x.Items
	}
	return nil
}

// 规格项
type SProductSpecItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 编号
	Id int64 `protobuf:"varint,1,opt,name=Id,proto3" json:"Id"`
	// 规格项值
	Value string `protobuf:"bytes,2,opt,name=Value,proto3" json:"Value"`
	// 规格项颜色
	Color string `protobuf:"bytes,3,opt,name=Color,proto3" json:"Color"`
	// 排列序号
	SortNum int32 `protobuf:"varint,4,opt,name=SortNum,proto3" json:"SortNum"`
}

func (x *SProductSpecItem) Reset() {
	*x = SProductSpecItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SProductSpecItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SProductSpecItem) ProtoMessage() {}

func (x *SProductSpecItem) ProtoReflect() protoreflect.Message {
	mi := &file_product_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SProductSpecItem.ProtoReflect.Descriptor instead.
func (*SProductSpecItem) Descriptor() ([]byte, []int) {
	return file_product_service_proto_rawDescGZIP(), []int{11}
}

func (x *SProductSpecItem) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SProductSpecItem) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *SProductSpecItem) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

func (x *SProductSpecItem) GetSortNum() int32 {
	if x != nil {
		return x.SortNum
	}
	return 0
}

type ProductBrandListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value []*SProductBrand `protobuf:"bytes,1,rep,name=Value,proto3" json:"Value"`
}

func (x *ProductBrandListResponse) Reset() {
	*x = ProductBrandListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductBrandListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductBrandListResponse) ProtoMessage() {}

func (x *ProductBrandListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_product_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductBrandListResponse.ProtoReflect.Descriptor instead.
func (*ProductBrandListResponse) Descriptor() ([]byte, []int) {
	return file_product_service_proto_rawDescGZIP(), []int{12}
}

func (x *ProductBrandListResponse) GetValue() []*SProductBrand {
	if x != nil {
		return x.Value
	}
	return nil
}

// 品牌
type SProductBrand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 编号
	Id int64 `protobuf:"varint,1,opt,name=Id,proto3" json:"Id"`
	// 品牌名称
	Name string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name"`
	// 品牌图片
	Image string `protobuf:"bytes,3,opt,name=Image,proto3" json:"Image"`
	// 品牌网址
	SiteUrl string `protobuf:"bytes,4,opt,name=SiteUrl,proto3" json:"SiteUrl"`
	// 介绍
	Introduce string `protobuf:"bytes,5,opt,name=Introduce,proto3" json:"Introduce"`
	// 是否审核
	ReviewState int32 `protobuf:"varint,6,opt,name=ReviewState,proto3" json:"ReviewState"`
	// 审核意见
	ReviewRemark string `protobuf:"bytes,7,opt,name=ReviewRemark,proto3" json:"ReviewRemark"`
	// 是否启用
	Enabled int32 `protobuf:"varint,8,opt,name=Enabled,proto3" json:"Enabled"`
	// 加入时间
	CreateTime int64 `protobuf:"varint,9,opt,name=CreateTime,proto3" json:"CreateTime"`
}

func (x *SProductBrand) Reset() {
	*x = SProductBrand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SProductBrand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SProductBrand) ProtoMessage() {}

func (x *SProductBrand) ProtoReflect() protoreflect.Message {
	mi := &file_product_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SProductBrand.ProtoReflect.Descriptor instead.
func (*SProductBrand) Descriptor() ([]byte, []int) {
	return file_product_service_proto_rawDescGZIP(), []int{13}
}

func (x *SProductBrand) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SProductBrand) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SProductBrand) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *SProductBrand) GetSiteUrl() string {
	if x != nil {
		return x.SiteUrl
	}
	return ""
}

func (x *SProductBrand) GetIntroduce() string {
	if x != nil {
		return x.Introduce
	}
	return ""
}

func (x *SProductBrand) GetReviewState() int32 {
	if x != nil {
		return x.ReviewState
	}
	return 0
}

func (x *SProductBrand) GetReviewRemark() string {
	if x != nil {
		return x.ReviewRemark
	}
	return ""
}

func (x *SProductBrand) GetEnabled() int32 {
	if x != nil {
		return x.Enabled
	}
	return 0
}

func (x *SProductBrand) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

type ProductCategoriesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value []*SProductCategory `protobuf:"bytes,1,rep,name=Value,proto3" json:"Value"`
}

func (x *ProductCategoriesResponse) Reset() {
	*x = ProductCategoriesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_service_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductCategoriesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductCategoriesResponse) ProtoMessage() {}

func (x *ProductCategoriesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_product_service_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductCategoriesResponse.ProtoReflect.Descriptor instead.
func (*ProductCategoriesResponse) Descriptor() ([]byte, []int) {
	return file_product_service_proto_rawDescGZIP(), []int{14}
}

func (x *ProductCategoriesResponse) GetValue() []*SProductCategory {
	if x != nil {
		return x.Value
	}
	return nil
}

type CategoryParentId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value int64 `protobuf:"varint,1,opt,name=Value,proto3" json:"Value"`
}

func (x *CategoryParentId) Reset() {
	*x = CategoryParentId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_service_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CategoryParentId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CategoryParentId) ProtoMessage() {}

func (x *CategoryParentId) ProtoReflect() protoreflect.Message {
	mi := &file_product_service_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CategoryParentId.ProtoReflect.Descriptor instead.
func (*CategoryParentId) Descriptor() ([]byte, []int) {
	return file_product_service_proto_rawDescGZIP(), []int{15}
}

func (x *CategoryParentId) GetValue() int64 {
	if x != nil {
		return x.Value
	}
	return 0
}

// 商品分类
type SProductCategory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 编号
	Id int64 `protobuf:"varint,1,opt,name=Id,proto3" json:"Id"`
	// 上级分类
	ParentId int64 `protobuf:"varint,2,opt,name=ParentId,proto3" json:"ParentId"`
	// 产品模型
	ModelId int64 `protobuf:"varint,3,opt,name=ModelId,proto3" json:"ModelId"`
	// 优先级
	Priority int32 `protobuf:"varint,4,opt,name=Priority,proto3" json:"Priority"`
	// 分类名称
	Name string `protobuf:"bytes,5,opt,name=Name,proto3" json:"Name"`
	//* 是否为虚拟分类
	IsVirtual bool `protobuf:"varint,6,opt,name=IsVirtual,proto3" json:"IsVirtual"`
	//* 分类链接地址
	CategoryUrl string `protobuf:"bytes,7,opt,name=CategoryUrl,proto3" json:"CategoryUrl"`
	// 虚拟分类跳转地址
	RedirectUrl string `protobuf:"bytes,18,opt,name=RedirectUrl,proto3" json:"RedirectUrl"`
	//* 图标
	Icon string `protobuf:"bytes,8,opt,name=Icon,proto3" json:"Icon"`
	//* 图标坐标
	IconPoint string `protobuf:"bytes,9,opt,name=IconPoint,proto3" json:"IconPoint"`
	//* 分类层级
	Level int32 `protobuf:"varint,10,opt,name=Level,proto3" json:"Level"`
	//* 序号
	SortNum int32 `protobuf:"varint,11,opt,name=SortNum,proto3" json:"SortNum"`
	//* 是否楼层显示
	FloorShow bool `protobuf:"varint,12,opt,name=FloorShow,proto3" json:"FloorShow"`
	//* 是否启用
	Enabled bool `protobuf:"varint,13,opt,name=Enabled,proto3" json:"Enabled"`
	//* 创建时间
	CreateTime int64 `protobuf:"varint,14,opt,name=CreateTime,proto3" json:"CreateTime"`
	// 选项参数
	Options map[string]string `protobuf:"bytes,15,rep,name=Options,proto3" json:"Options" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// 关联品牌
	Brands []*SProductBrand `protobuf:"bytes,16,rep,name=Brands,proto3" json:"Brands"`
	//* 子分类
	Children []*SProductCategory `protobuf:"bytes,17,rep,name=Children,proto3" json:"Children"`
}

func (x *SProductCategory) Reset() {
	*x = SProductCategory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_service_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SProductCategory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SProductCategory) ProtoMessage() {}

func (x *SProductCategory) ProtoReflect() protoreflect.Message {
	mi := &file_product_service_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SProductCategory.ProtoReflect.Descriptor instead.
func (*SProductCategory) Descriptor() ([]byte, []int) {
	return file_product_service_proto_rawDescGZIP(), []int{16}
}

func (x *SProductCategory) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SProductCategory) GetParentId() int64 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *SProductCategory) GetModelId() int64 {
	if x != nil {
		return x.ModelId
	}
	return 0
}

func (x *SProductCategory) GetPriority() int32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

func (x *SProductCategory) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SProductCategory) GetIsVirtual() bool {
	if x != nil {
		return x.IsVirtual
	}
	return false
}

func (x *SProductCategory) GetCategoryUrl() string {
	if x != nil {
		return x.CategoryUrl
	}
	return ""
}

func (x *SProductCategory) GetRedirectUrl() string {
	if x != nil {
		return x.RedirectUrl
	}
	return ""
}

func (x *SProductCategory) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *SProductCategory) GetIconPoint() string {
	if x != nil {
		return x.IconPoint
	}
	return ""
}

func (x *SProductCategory) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *SProductCategory) GetSortNum() int32 {
	if x != nil {
		return x.SortNum
	}
	return 0
}

func (x *SProductCategory) GetFloorShow() bool {
	if x != nil {
		return x.FloorShow
	}
	return false
}

func (x *SProductCategory) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *SProductCategory) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *SProductCategory) GetOptions() map[string]string {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *SProductCategory) GetBrands() []*SProductBrand {
	if x != nil {
		return x.Brands
	}
	return nil
}

func (x *SProductCategory) GetChildren() []*SProductCategory {
	if x != nil {
		return x.Children
	}
	return nil
}

// 分类树形请求
type CategoryTreeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 排除分类编号
	ExcludeIdList []int64 `protobuf:"varint,1,rep,packed,name=ExcludeIdList,proto3" json:"ExcludeIdList"`
	// 层级显示,小于等于0不限制
	Depth int32 `protobuf:"varint,2,opt,name=Depth,proto3" json:"Depth"`
}

func (x *CategoryTreeRequest) Reset() {
	*x = CategoryTreeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_service_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CategoryTreeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CategoryTreeRequest) ProtoMessage() {}

func (x *CategoryTreeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_product_service_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CategoryTreeRequest.ProtoReflect.Descriptor instead.
func (*CategoryTreeRequest) Descriptor() ([]byte, []int) {
	return file_product_service_proto_rawDescGZIP(), []int{17}
}

func (x *CategoryTreeRequest) GetExcludeIdList() []int64 {
	if x != nil {
		return x.ExcludeIdList
	}
	return nil
}

func (x *CategoryTreeRequest) GetDepth() int32 {
	if x != nil {
		return x.Depth
	}
	return 0
}

// 产品
type SProduct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 编号
	Id int64 `protobuf:"varint,1,opt,name=Id,proto3" json:"Id"`
	// 分类
	CategoryId int64 `protobuf:"varint,2,opt,name=CategoryId,proto3" json:"CategoryId"`
	// 名称
	Name string `protobuf:"bytes,3,opt,name=Name,proto3" json:"Name"`
	//供应商编号(暂时同mch_id)
	VendorId int64 `protobuf:"varint,4,opt,name=VendorId,proto3" json:"VendorId"`
	// 品牌编号
	BrandId int64 `protobuf:"varint,5,opt,name=BrandId,proto3" json:"BrandId"`
	// 商家编码
	Code string `protobuf:"bytes,6,opt,name=Code,proto3" json:"Code"`
	// 图片
	Image string `protobuf:"bytes,7,opt,name=Image,proto3" json:"Image"`
	// 描述
	Description string `protobuf:"bytes,8,opt,name=Description,proto3" json:"Description"`
	// 备注
	Remark string `protobuf:"bytes,9,opt,name=Remark,proto3" json:"Remark"`
	// 状态
	State int32 `protobuf:"varint,10,opt,name=State,proto3" json:"State"`
	// 排序编号
	SortNum int32 `protobuf:"varint,11,opt,name=SortNum,proto3" json:"SortNum"`
	// 产品属性
	Attrs []*SProductAttrValue `protobuf:"bytes,12,rep,name=Attrs,proto3" json:"Attrs"`
	// 创建时间
	CreateTime int64 `protobuf:"varint,13,opt,name=CreateTime,proto3" json:"CreateTime"`
	// 更新时间
	UpdateTime int64 `protobuf:"varint,14,opt,name=UpdateTime,proto3" json:"UpdateTime"`
}

func (x *SProduct) Reset() {
	*x = SProduct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_service_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SProduct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SProduct) ProtoMessage() {}

func (x *SProduct) ProtoReflect() protoreflect.Message {
	mi := &file_product_service_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SProduct.ProtoReflect.Descriptor instead.
func (*SProduct) Descriptor() ([]byte, []int) {
	return file_product_service_proto_rawDescGZIP(), []int{18}
}

func (x *SProduct) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SProduct) GetCategoryId() int64 {
	if x != nil {
		return x.CategoryId
	}
	return 0
}

func (x *SProduct) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SProduct) GetVendorId() int64 {
	if x != nil {
		return x.VendorId
	}
	return 0
}

func (x *SProduct) GetBrandId() int64 {
	if x != nil {
		return x.BrandId
	}
	return 0
}

func (x *SProduct) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *SProduct) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *SProduct) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *SProduct) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *SProduct) GetState() int32 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *SProduct) GetSortNum() int32 {
	if x != nil {
		return x.SortNum
	}
	return 0
}

func (x *SProduct) GetAttrs() []*SProductAttrValue {
	if x != nil {
		return x.Attrs
	}
	return nil
}

func (x *SProduct) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *SProduct) GetUpdateTime() int64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

type ProductInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductId int64  `protobuf:"varint,1,opt,name=ProductId,proto3" json:"ProductId"`
	Info      string `protobuf:"bytes,2,opt,name=Info,proto3" json:"Info"`
}

func (x *ProductInfoRequest) Reset() {
	*x = ProductInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_service_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductInfoRequest) ProtoMessage() {}

func (x *ProductInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_product_service_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductInfoRequest.ProtoReflect.Descriptor instead.
func (*ProductInfoRequest) Descriptor() ([]byte, []int) {
	return file_product_service_proto_rawDescGZIP(), []int{19}
}

func (x *ProductInfoRequest) GetProductId() int64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *ProductInfoRequest) GetInfo() string {
	if x != nil {
		return x.Info
	}
	return ""
}

type SaveProductResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrCode   int64  `protobuf:"varint,1,opt,name=ErrCode,proto3" json:"ErrCode"`
	ErrMsg    string `protobuf:"bytes,2,opt,name=ErrMsg,proto3" json:"ErrMsg"`
	ProductId int64  `protobuf:"varint,3,opt,name=ProductId,proto3" json:"ProductId"`
}

func (x *SaveProductResponse) Reset() {
	*x = SaveProductResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_service_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveProductResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveProductResponse) ProtoMessage() {}

func (x *SaveProductResponse) ProtoReflect() protoreflect.Message {
	mi := &file_product_service_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveProductResponse.ProtoReflect.Descriptor instead.
func (*SaveProductResponse) Descriptor() ([]byte, []int) {
	return file_product_service_proto_rawDescGZIP(), []int{20}
}

func (x *SaveProductResponse) GetErrCode() int64 {
	if x != nil {
		return x.ErrCode
	}
	return 0
}

func (x *SaveProductResponse) GetErrMsg() string {
	if x != nil {
		return x.ErrMsg
	}
	return ""
}

func (x *SaveProductResponse) GetProductId() int64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

var File_product_service_proto protoreflect.FileDescriptor

var file_product_service_proto_rawDesc = []byte{
	0x0a, 0x15, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x50, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x53, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x53, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x22, 0x21, 0x0a, 0x09, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x26, 0x0a, 0x0e, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0x25, 0x0a, 0x0d, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x41, 0x74, 0x74,
	0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x29, 0x0a, 0x11, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x41, 0x74, 0x74, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0x40, 0x0a, 0x18, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x24, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x53, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52,
	0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xf3, 0x01, 0x0a, 0x0d, 0x53, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x41, 0x74, 0x74, 0x72, 0x53, 0x74, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x41,
	0x74, 0x74, 0x72, 0x53, 0x74, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x70, 0x65, 0x63, 0x53, 0x74,
	0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x53, 0x70, 0x65, 0x63, 0x53, 0x74, 0x72,
	0x12, 0x23, 0x0a, 0x05, 0x41, 0x74, 0x74, 0x72, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0d, 0x2e, 0x53, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x41, 0x74, 0x74, 0x72, 0x52, 0x05,
	0x41, 0x74, 0x74, 0x72, 0x73, 0x12, 0x23, 0x0a, 0x05, 0x53, 0x70, 0x65, 0x63, 0x73, 0x18, 0x06,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x53, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53,
	0x70, 0x65, 0x63, 0x52, 0x05, 0x53, 0x70, 0x65, 0x63, 0x73, 0x12, 0x26, 0x0a, 0x06, 0x42, 0x72,
	0x61, 0x6e, 0x64, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x53, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x52, 0x06, 0x42, 0x72, 0x61, 0x6e,
	0x64, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x22, 0xd1, 0x01, 0x0a,
	0x0c, 0x53, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x41, 0x74, 0x74, 0x72, 0x12, 0x0e, 0x0a,
	0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x49, 0x73, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x49, 0x73, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x1e, 0x0a,
	0x0a, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0a, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x12, 0x18, 0x0a,
	0x07, 0x53, 0x6f, 0x72, 0x74, 0x4e, 0x75, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07,
	0x53, 0x6f, 0x72, 0x74, 0x4e, 0x75, 0x6d, 0x12, 0x1e, 0x0a, 0x0a, 0x49, 0x74, 0x65, 0x6d, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x49, 0x74, 0x65,
	0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x27, 0x0a, 0x05, 0x49, 0x74, 0x65, 0x6d, 0x73,
	0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x53, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x41, 0x74, 0x74, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x49, 0x74, 0x65, 0x6d, 0x73,
	0x22, 0x52, 0x0a, 0x10, 0x53, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x41, 0x74, 0x74, 0x72,
	0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x6f,
	0x72, 0x74, 0x4e, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x53, 0x6f, 0x72,
	0x74, 0x4e, 0x75, 0x6d, 0x22, 0x8f, 0x01, 0x0a, 0x11, 0x53, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x41, 0x74, 0x74, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x74,
	0x74, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x41, 0x74, 0x74, 0x72,
	0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x41, 0x74, 0x74, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x41, 0x74, 0x74, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x41, 0x74, 0x74, 0x72, 0x44, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x41, 0x74, 0x74, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1a, 0x0a, 0x08, 0x41, 0x74,
	0x74, 0x72, 0x57, 0x6f, 0x72, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x41, 0x74,
	0x74, 0x72, 0x57, 0x6f, 0x72, 0x64, 0x22, 0x95, 0x01, 0x0a, 0x0c, 0x53, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x53, 0x70, 0x65, 0x63, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x53,
	0x6f, 0x72, 0x74, 0x4e, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x53, 0x6f,
	0x72, 0x74, 0x4e, 0x75, 0x6d, 0x12, 0x1e, 0x0a, 0x0a, 0x49, 0x74, 0x65, 0x6d, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x49, 0x74, 0x65, 0x6d, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x27, 0x0a, 0x05, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x05,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x53, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53,
	0x70, 0x65, 0x63, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x68,
	0x0a, 0x10, 0x53, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x70, 0x65, 0x63, 0x49, 0x74,
	0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x6f, 0x6c, 0x6f,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x18,
	0x0a, 0x07, 0x53, 0x6f, 0x72, 0x74, 0x4e, 0x75, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x53, 0x6f, 0x72, 0x74, 0x4e, 0x75, 0x6d, 0x22, 0x40, 0x0a, 0x18, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x24, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x53, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x42, 0x72,
	0x61, 0x6e, 0x64, 0x52, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x81, 0x02, 0x0a, 0x0d, 0x53,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x12, 0x0e, 0x0a, 0x02,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x69, 0x74, 0x65, 0x55, 0x72,
	0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x53, 0x69, 0x74, 0x65, 0x55, 0x72, 0x6c,
	0x12, 0x1c, 0x0a, 0x09, 0x49, 0x6e, 0x74, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x49, 0x6e, 0x74, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0b, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x12, 0x22, 0x0a, 0x0c, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65,
	0x6d, 0x61, 0x72, 0x6b, 0x12, 0x18, 0x0a, 0x07, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x1e,
	0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x44,
	0x0a, 0x19, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x05, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x53, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x05, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0x28, 0x0a, 0x10, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xf1,
	0x04, 0x0a, 0x10, 0x53, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x72, 0x69,
	0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x50, 0x72, 0x69,
	0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x49, 0x73, 0x56,
	0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x49, 0x73,
	0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x43, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x55, 0x72, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x43, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x55, 0x72, 0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x52, 0x65, 0x64,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x55, 0x72, 0x6c, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x52, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x55, 0x72, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x49,
	0x63, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x49, 0x63, 0x6f, 0x6e, 0x12,
	0x1c, 0x0a, 0x09, 0x49, 0x63, 0x6f, 0x6e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x49, 0x63, 0x6f, 0x6e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x4c, 0x65,
	0x76, 0x65, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x6f, 0x72, 0x74, 0x4e, 0x75, 0x6d, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x53, 0x6f, 0x72, 0x74, 0x4e, 0x75, 0x6d, 0x12, 0x1c, 0x0a,
	0x09, 0x46, 0x6c, 0x6f, 0x6f, 0x72, 0x53, 0x68, 0x6f, 0x77, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x09, 0x46, 0x6c, 0x6f, 0x6f, 0x72, 0x53, 0x68, 0x6f, 0x77, 0x12, 0x18, 0x0a, 0x07, 0x45,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x45, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x38, 0x0a, 0x07, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x0f, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x53, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x26, 0x0a, 0x06, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x73, 0x18, 0x10, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x53, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x52,
	0x06, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x73, 0x12, 0x2d, 0x0a, 0x08, 0x43, 0x68, 0x69, 0x6c, 0x64,
	0x72, 0x65, 0x6e, 0x18, 0x11, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x53, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x08, 0x43, 0x68,
	0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x1a, 0x3a, 0x0a, 0x0c, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x22, 0x51, 0x0a, 0x13, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x54, 0x72,
	0x65, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x45, 0x78, 0x63,
	0x6c, 0x75, 0x64, 0x65, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03,
	0x52, 0x0d, 0x45, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x44, 0x65, 0x70, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x44, 0x65, 0x70, 0x74, 0x68, 0x22, 0x82, 0x03, 0x0a, 0x08, 0x53, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72,
	0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72,
	0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x49, 0x64, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x43, 0x6f, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x65, 0x6d, 0x61,
	0x72, 0x6b, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b,
	0x12, 0x14, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x6f, 0x72, 0x74, 0x4e, 0x75,
	0x6d, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x53, 0x6f, 0x72, 0x74, 0x4e, 0x75, 0x6d,
	0x12, 0x28, 0x0a, 0x05, 0x41, 0x74, 0x74, 0x72, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x53, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x41, 0x74, 0x74, 0x72, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x52, 0x05, 0x41, 0x74, 0x74, 0x72, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x46, 0x0a, 0x12, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x49, 0x6e,
	0x66, 0x6f, 0x22, 0x65, 0x0a, 0x13, 0x53, 0x61, 0x76, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x45, 0x72, 0x72,
	0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x45, 0x72, 0x72, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x45, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x45, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x32, 0xec, 0x07, 0x0a, 0x0e, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x2d, 0x0a, 0x08,
	0x47, 0x65, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x0f, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x49, 0x64, 0x1a, 0x0e, 0x2e, 0x53, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x22, 0x00, 0x12, 0x30, 0x0a, 0x09, 0x47,
	0x65, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x12, 0x06, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x1a, 0x19, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x2a, 0x0a,
	0x07, 0x47, 0x65, 0x74, 0x41, 0x74, 0x74, 0x72, 0x12, 0x0e, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x41, 0x74, 0x74, 0x72, 0x49, 0x64, 0x1a, 0x0d, 0x2e, 0x53, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x41, 0x74, 0x74, 0x72, 0x22, 0x00, 0x12, 0x36, 0x0a, 0x0b, 0x47, 0x65, 0x74,
	0x41, 0x74, 0x74, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x12, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x41, 0x74, 0x74, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x1a, 0x11, 0x2e, 0x53,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x41, 0x74, 0x74, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x22,
	0x00, 0x12, 0x2f, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x41, 0x74, 0x74,
	0x72, 0x73, 0x48, 0x74, 0x6d, 0x6c, 0x12, 0x0f, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x49, 0x64, 0x1a, 0x07, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x22, 0x00, 0x12, 0x26, 0x0a, 0x09, 0x53, 0x61, 0x76, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12,
	0x0e, 0x2e, 0x53, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x1a,
	0x07, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x12, 0x2a, 0x0a, 0x0c, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x12, 0x0f, 0x2e, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x49, 0x64, 0x1a, 0x07, 0x2e, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x12, 0x24, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x42, 0x72, 0x61,
	0x6e, 0x64, 0x12, 0x06, 0x2e, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x1a, 0x0e, 0x2e, 0x53, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x22, 0x00, 0x12, 0x26, 0x0a, 0x09,
	0x53, 0x61, 0x76, 0x65, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x12, 0x0e, 0x2e, 0x53, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x1a, 0x07, 0x2e, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x22, 0x00, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x72,
	0x61, 0x6e, 0x64, 0x12, 0x06, 0x2e, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x1a, 0x07, 0x2e, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x12, 0x30, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x42, 0x72, 0x61,
	0x6e, 0x64, 0x73, 0x12, 0x06, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x19, 0x2e, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x35, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x43,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x12, 0x06, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x1a, 0x1a, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x2a, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x06,
	0x2e, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x1a, 0x11, 0x2e, 0x53, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x22, 0x00, 0x12, 0x23, 0x0a, 0x0e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x06, 0x2e,
	0x49, 0x6e, 0x74, 0x36, 0x34, 0x1a, 0x07, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00,
	0x12, 0x2c, 0x0a, 0x0c, 0x53, 0x61, 0x76, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x12, 0x11, 0x2e, 0x53, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x1a, 0x07, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x12, 0x39,
	0x0a, 0x13, 0x47, 0x65, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x54, 0x72, 0x65,
	0x65, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x2e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x54, 0x72, 0x65, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0a, 0x2e, 0x53, 0x54,
	0x72, 0x65, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x22, 0x00, 0x12, 0x3e, 0x0a, 0x0b, 0x47, 0x65, 0x74,
	0x43, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x12, 0x11, 0x2e, 0x43, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x1a, 0x1a, 0x2e, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x25, 0x0a, 0x0a, 0x47, 0x65, 0x74,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x0a, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x49, 0x64, 0x1a, 0x09, 0x2e, 0x53, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x22, 0x00,
	0x12, 0x30, 0x0a, 0x0b, 0x53, 0x61, 0x76, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12,
	0x09, 0x2e, 0x53, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x1a, 0x14, 0x2e, 0x53, 0x61, 0x76,
	0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x31, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x12, 0x15, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x07, 0x2e, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x22, 0x00, 0x12, 0x31, 0x0a, 0x0f, 0x53, 0x61, 0x76, 0x65, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x13, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x07, 0x2e,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x42, 0x1f, 0x0a, 0x13, 0x63, 0x6f, 0x6d, 0x2e,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x67, 0x6f, 0x32, 0x6f, 0x2e, 0x72, 0x70, 0x63, 0x5a,
	0x08, 0x2e, 0x2f, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_product_service_proto_rawDescOnce sync.Once
	file_product_service_proto_rawDescData = file_product_service_proto_rawDesc
)

func file_product_service_proto_rawDescGZIP() []byte {
	file_product_service_proto_rawDescOnce.Do(func() {
		file_product_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_product_service_proto_rawDescData)
	})
	return file_product_service_proto_rawDescData
}

var file_product_service_proto_msgTypes = make([]protoimpl.MessageInfo, 22)
var file_product_service_proto_goTypes = []interface{}{
	(*DeleteProductRequest)(nil),      // 0: DeleteProductRequest
	(*ProductId)(nil),                 // 1: ProductId
	(*ProductModelId)(nil),            // 2: ProductModelId
	(*ProductAttrId)(nil),             // 3: ProductAttrId
	(*ProductAttrItemId)(nil),         // 4: ProductAttrItemId
	(*ProductModelListResponse)(nil),  // 5: ProductModelListResponse
	(*SProductModel)(nil),             // 6: SProductModel
	(*SProductAttr)(nil),              // 7: SProductAttr
	(*SProductAttrItem)(nil),          // 8: SProductAttrItem
	(*SProductAttrValue)(nil),         // 9: SProductAttrValue
	(*SProductSpec)(nil),              // 10: SProductSpec
	(*SProductSpecItem)(nil),          // 11: SProductSpecItem
	(*ProductBrandListResponse)(nil),  // 12: ProductBrandListResponse
	(*SProductBrand)(nil),             // 13: SProductBrand
	(*ProductCategoriesResponse)(nil), // 14: ProductCategoriesResponse
	(*CategoryParentId)(nil),          // 15: CategoryParentId
	(*SProductCategory)(nil),          // 16: SProductCategory
	(*CategoryTreeRequest)(nil),       // 17: CategoryTreeRequest
	(*SProduct)(nil),                  // 18: SProduct
	(*ProductInfoRequest)(nil),        // 19: ProductInfoRequest
	(*SaveProductResponse)(nil),       // 20: SaveProductResponse
	nil,                               // 21: SProductCategory.OptionsEntry
	(*Empty)(nil),                     // 22: Empty
	(*Int64)(nil),                     // 23: Int64
	(*String)(nil),                    // 24: String
	(*Result)(nil),                    // 25: Result
	(*STreeNode)(nil),                 // 26: STreeNode
}
var file_product_service_proto_depIdxs = []int32{
	6,  // 0: ProductModelListResponse.Value:type_name -> SProductModel
	7,  // 1: SProductModel.Attrs:type_name -> SProductAttr
	10, // 2: SProductModel.Specs:type_name -> SProductSpec
	13, // 3: SProductModel.Brands:type_name -> SProductBrand
	8,  // 4: SProductAttr.Items:type_name -> SProductAttrItem
	11, // 5: SProductSpec.Items:type_name -> SProductSpecItem
	13, // 6: ProductBrandListResponse.Value:type_name -> SProductBrand
	16, // 7: ProductCategoriesResponse.Value:type_name -> SProductCategory
	21, // 8: SProductCategory.Options:type_name -> SProductCategory.OptionsEntry
	13, // 9: SProductCategory.Brands:type_name -> SProductBrand
	16, // 10: SProductCategory.Children:type_name -> SProductCategory
	9,  // 11: SProduct.Attrs:type_name -> SProductAttrValue
	2,  // 12: ProductService.GetModel:input_type -> ProductModelId
	22, // 13: ProductService.GetModels:input_type -> Empty
	3,  // 14: ProductService.GetAttr:input_type -> ProductAttrId
	4,  // 15: ProductService.GetAttrItem:input_type -> ProductAttrItemId
	2,  // 16: ProductService.GetModelAttrsHtml:input_type -> ProductModelId
	6,  // 17: ProductService.SaveModel:input_type -> SProductModel
	2,  // 18: ProductService.DeleteModel_:input_type -> ProductModelId
	23, // 19: ProductService.GetBrand:input_type -> Int64
	13, // 20: ProductService.SaveBrand:input_type -> SProductBrand
	23, // 21: ProductService.DeleteBrand:input_type -> Int64
	22, // 22: ProductService.GetBrands:input_type -> Empty
	22, // 23: ProductService.GetCategories:input_type -> Empty
	23, // 24: ProductService.GetCategory:input_type -> Int64
	23, // 25: ProductService.DeleteCategory:input_type -> Int64
	16, // 26: ProductService.SaveCategory:input_type -> SProductCategory
	17, // 27: ProductService.GetCategoryTreeNode:input_type -> CategoryTreeRequest
	15, // 28: ProductService.GetChildren:input_type -> CategoryParentId
	1,  // 29: ProductService.GetProduct:input_type -> ProductId
	18, // 30: ProductService.SaveProduct:input_type -> SProduct
	0,  // 31: ProductService.DeleteProduct:input_type -> DeleteProductRequest
	19, // 32: ProductService.SaveProductInfo:input_type -> ProductInfoRequest
	6,  // 33: ProductService.GetModel:output_type -> SProductModel
	5,  // 34: ProductService.GetModels:output_type -> ProductModelListResponse
	7,  // 35: ProductService.GetAttr:output_type -> SProductAttr
	8,  // 36: ProductService.GetAttrItem:output_type -> SProductAttrItem
	24, // 37: ProductService.GetModelAttrsHtml:output_type -> String
	25, // 38: ProductService.SaveModel:output_type -> Result
	25, // 39: ProductService.DeleteModel_:output_type -> Result
	13, // 40: ProductService.GetBrand:output_type -> SProductBrand
	25, // 41: ProductService.SaveBrand:output_type -> Result
	25, // 42: ProductService.DeleteBrand:output_type -> Result
	12, // 43: ProductService.GetBrands:output_type -> ProductBrandListResponse
	14, // 44: ProductService.GetCategories:output_type -> ProductCategoriesResponse
	16, // 45: ProductService.GetCategory:output_type -> SProductCategory
	25, // 46: ProductService.DeleteCategory:output_type -> Result
	25, // 47: ProductService.SaveCategory:output_type -> Result
	26, // 48: ProductService.GetCategoryTreeNode:output_type -> STreeNode
	14, // 49: ProductService.GetChildren:output_type -> ProductCategoriesResponse
	18, // 50: ProductService.GetProduct:output_type -> SProduct
	20, // 51: ProductService.SaveProduct:output_type -> SaveProductResponse
	25, // 52: ProductService.DeleteProduct:output_type -> Result
	25, // 53: ProductService.SaveProductInfo:output_type -> Result
	33, // [33:54] is the sub-list for method output_type
	12, // [12:33] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_product_service_proto_init() }
func file_product_service_proto_init() {
	if File_product_service_proto != nil {
		return
	}
	file_global_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_product_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteProductRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductModelId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductAttrId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductAttrItemId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductModelListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SProductModel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SProductAttr); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SProductAttrItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SProductAttrValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SProductSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SProductSpecItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductBrandListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_service_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SProductBrand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_service_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductCategoriesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_service_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CategoryParentId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_service_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SProductCategory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_service_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CategoryTreeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_service_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SProduct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_service_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_service_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveProductResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_product_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   22,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_product_service_proto_goTypes,
		DependencyIndexes: file_product_service_proto_depIdxs,
		MessageInfos:      file_product_service_proto_msgTypes,
	}.Build()
	File_product_service_proto = out.File
	file_product_service_proto_rawDesc = nil
	file_product_service_proto_goTypes = nil
	file_product_service_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ProductServiceClient is the client API for ProductService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ProductServiceClient interface {
	// 获取产品模型
	GetModel(ctx context.Context, in *ProductModelId, opts ...grpc.CallOption) (*SProductModel, error)
	// 获取产品模型
	GetModels(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*ProductModelListResponse, error)
	// 获取属性
	GetAttr(ctx context.Context, in *ProductAttrId, opts ...grpc.CallOption) (*SProductAttr, error)
	// 获取属性项
	GetAttrItem(ctx context.Context, in *ProductAttrItemId, opts ...grpc.CallOption) (*SProductAttrItem, error)
	// 获取模型属性Html
	GetModelAttrsHtml(ctx context.Context, in *ProductModelId, opts ...grpc.CallOption) (*String, error)
	// 保存产品模型
	SaveModel(ctx context.Context, in *SProductModel, opts ...grpc.CallOption) (*Result, error)
	// 删除产品模型
	DeleteModel_(ctx context.Context, in *ProductModelId, opts ...grpc.CallOption) (*Result, error)
	// Get 产品品牌
	GetBrand(ctx context.Context, in *Int64, opts ...grpc.CallOption) (*SProductBrand, error)
	// Save 产品品牌
	SaveBrand(ctx context.Context, in *SProductBrand, opts ...grpc.CallOption) (*Result, error)
	// Delete 产品品牌
	DeleteBrand(ctx context.Context, in *Int64, opts ...grpc.CallOption) (*Result, error)
	// 获取所有产品品牌
	GetBrands(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*ProductBrandListResponse, error)
	// 获取全部分类
	GetCategories(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*ProductCategoriesResponse, error)
	// 获取商品分类
	GetCategory(ctx context.Context, in *Int64, opts ...grpc.CallOption) (*SProductCategory, error)
	// 获取商品分类和选项
	//    rpc GetCategoryAndOptions(mchId int64, id int32) (*product.Category,
	//    domain.IOptionStore)
	DeleteCategory(ctx context.Context, in *Int64, opts ...grpc.CallOption) (*Result, error)
	// 保存产品分类
	SaveCategory(ctx context.Context, in *SProductCategory, opts ...grpc.CallOption) (*Result, error)
	// 获取分类树形数据
	GetCategoryTreeNode(ctx context.Context, in *CategoryTreeRequest, opts ...grpc.CallOption) (*STreeNode, error)
	// 根据上级编号获取分类列表
	GetChildren(ctx context.Context, in *CategoryParentId, opts ...grpc.CallOption) (*ProductCategoriesResponse, error)
	// 获取产品值
	GetProduct(ctx context.Context, in *ProductId, opts ...grpc.CallOption) (*SProduct, error)
	// 保存产品
	SaveProduct(ctx context.Context, in *SProduct, opts ...grpc.CallOption) (*SaveProductResponse, error)
	// 删除产品
	DeleteProduct(ctx context.Context, in *DeleteProductRequest, opts ...grpc.CallOption) (*Result, error)
	// 保存货品描述
	SaveProductInfo(ctx context.Context, in *ProductInfoRequest, opts ...grpc.CallOption) (*Result, error)
}

type productServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewProductServiceClient(cc grpc.ClientConnInterface) ProductServiceClient {
	return &productServiceClient{cc}
}

func (c *productServiceClient) GetModel(ctx context.Context, in *ProductModelId, opts ...grpc.CallOption) (*SProductModel, error) {
	out := new(SProductModel)
	err := c.cc.Invoke(ctx, "/ProductService/GetModel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *productServiceClient) GetModels(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*ProductModelListResponse, error) {
	out := new(ProductModelListResponse)
	err := c.cc.Invoke(ctx, "/ProductService/GetModels", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *productServiceClient) GetAttr(ctx context.Context, in *ProductAttrId, opts ...grpc.CallOption) (*SProductAttr, error) {
	out := new(SProductAttr)
	err := c.cc.Invoke(ctx, "/ProductService/GetAttr", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *productServiceClient) GetAttrItem(ctx context.Context, in *ProductAttrItemId, opts ...grpc.CallOption) (*SProductAttrItem, error) {
	out := new(SProductAttrItem)
	err := c.cc.Invoke(ctx, "/ProductService/GetAttrItem", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *productServiceClient) GetModelAttrsHtml(ctx context.Context, in *ProductModelId, opts ...grpc.CallOption) (*String, error) {
	out := new(String)
	err := c.cc.Invoke(ctx, "/ProductService/GetModelAttrsHtml", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *productServiceClient) SaveModel(ctx context.Context, in *SProductModel, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := c.cc.Invoke(ctx, "/ProductService/SaveModel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *productServiceClient) DeleteModel_(ctx context.Context, in *ProductModelId, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := c.cc.Invoke(ctx, "/ProductService/DeleteModel_", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *productServiceClient) GetBrand(ctx context.Context, in *Int64, opts ...grpc.CallOption) (*SProductBrand, error) {
	out := new(SProductBrand)
	err := c.cc.Invoke(ctx, "/ProductService/GetBrand", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *productServiceClient) SaveBrand(ctx context.Context, in *SProductBrand, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := c.cc.Invoke(ctx, "/ProductService/SaveBrand", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *productServiceClient) DeleteBrand(ctx context.Context, in *Int64, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := c.cc.Invoke(ctx, "/ProductService/DeleteBrand", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *productServiceClient) GetBrands(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*ProductBrandListResponse, error) {
	out := new(ProductBrandListResponse)
	err := c.cc.Invoke(ctx, "/ProductService/GetBrands", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *productServiceClient) GetCategories(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*ProductCategoriesResponse, error) {
	out := new(ProductCategoriesResponse)
	err := c.cc.Invoke(ctx, "/ProductService/GetCategories", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *productServiceClient) GetCategory(ctx context.Context, in *Int64, opts ...grpc.CallOption) (*SProductCategory, error) {
	out := new(SProductCategory)
	err := c.cc.Invoke(ctx, "/ProductService/GetCategory", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *productServiceClient) DeleteCategory(ctx context.Context, in *Int64, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := c.cc.Invoke(ctx, "/ProductService/DeleteCategory", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *productServiceClient) SaveCategory(ctx context.Context, in *SProductCategory, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := c.cc.Invoke(ctx, "/ProductService/SaveCategory", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *productServiceClient) GetCategoryTreeNode(ctx context.Context, in *CategoryTreeRequest, opts ...grpc.CallOption) (*STreeNode, error) {
	out := new(STreeNode)
	err := c.cc.Invoke(ctx, "/ProductService/GetCategoryTreeNode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *productServiceClient) GetChildren(ctx context.Context, in *CategoryParentId, opts ...grpc.CallOption) (*ProductCategoriesResponse, error) {
	out := new(ProductCategoriesResponse)
	err := c.cc.Invoke(ctx, "/ProductService/GetChildren", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *productServiceClient) GetProduct(ctx context.Context, in *ProductId, opts ...grpc.CallOption) (*SProduct, error) {
	out := new(SProduct)
	err := c.cc.Invoke(ctx, "/ProductService/GetProduct", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *productServiceClient) SaveProduct(ctx context.Context, in *SProduct, opts ...grpc.CallOption) (*SaveProductResponse, error) {
	out := new(SaveProductResponse)
	err := c.cc.Invoke(ctx, "/ProductService/SaveProduct", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *productServiceClient) DeleteProduct(ctx context.Context, in *DeleteProductRequest, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := c.cc.Invoke(ctx, "/ProductService/DeleteProduct", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *productServiceClient) SaveProductInfo(ctx context.Context, in *ProductInfoRequest, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := c.cc.Invoke(ctx, "/ProductService/SaveProductInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ProductServiceServer is the server API for ProductService service.
type ProductServiceServer interface {
	// 获取产品模型
	GetModel(context.Context, *ProductModelId) (*SProductModel, error)
	// 获取产品模型
	GetModels(context.Context, *Empty) (*ProductModelListResponse, error)
	// 获取属性
	GetAttr(context.Context, *ProductAttrId) (*SProductAttr, error)
	// 获取属性项
	GetAttrItem(context.Context, *ProductAttrItemId) (*SProductAttrItem, error)
	// 获取模型属性Html
	GetModelAttrsHtml(context.Context, *ProductModelId) (*String, error)
	// 保存产品模型
	SaveModel(context.Context, *SProductModel) (*Result, error)
	// 删除产品模型
	DeleteModel_(context.Context, *ProductModelId) (*Result, error)
	// Get 产品品牌
	GetBrand(context.Context, *Int64) (*SProductBrand, error)
	// Save 产品品牌
	SaveBrand(context.Context, *SProductBrand) (*Result, error)
	// Delete 产品品牌
	DeleteBrand(context.Context, *Int64) (*Result, error)
	// 获取所有产品品牌
	GetBrands(context.Context, *Empty) (*ProductBrandListResponse, error)
	// 获取全部分类
	GetCategories(context.Context, *Empty) (*ProductCategoriesResponse, error)
	// 获取商品分类
	GetCategory(context.Context, *Int64) (*SProductCategory, error)
	// 获取商品分类和选项
	//    rpc GetCategoryAndOptions(mchId int64, id int32) (*product.Category,
	//    domain.IOptionStore)
	DeleteCategory(context.Context, *Int64) (*Result, error)
	// 保存产品分类
	SaveCategory(context.Context, *SProductCategory) (*Result, error)
	// 获取分类树形数据
	GetCategoryTreeNode(context.Context, *CategoryTreeRequest) (*STreeNode, error)
	// 根据上级编号获取分类列表
	GetChildren(context.Context, *CategoryParentId) (*ProductCategoriesResponse, error)
	// 获取产品值
	GetProduct(context.Context, *ProductId) (*SProduct, error)
	// 保存产品
	SaveProduct(context.Context, *SProduct) (*SaveProductResponse, error)
	// 删除产品
	DeleteProduct(context.Context, *DeleteProductRequest) (*Result, error)
	// 保存货品描述
	SaveProductInfo(context.Context, *ProductInfoRequest) (*Result, error)
}

// UnimplementedProductServiceServer can be embedded to have forward compatible implementations.
type UnimplementedProductServiceServer struct {
}

func (*UnimplementedProductServiceServer) GetModel(context.Context, *ProductModelId) (*SProductModel, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetModel not implemented")
}
func (*UnimplementedProductServiceServer) GetModels(context.Context, *Empty) (*ProductModelListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetModels not implemented")
}
func (*UnimplementedProductServiceServer) GetAttr(context.Context, *ProductAttrId) (*SProductAttr, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAttr not implemented")
}
func (*UnimplementedProductServiceServer) GetAttrItem(context.Context, *ProductAttrItemId) (*SProductAttrItem, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAttrItem not implemented")
}
func (*UnimplementedProductServiceServer) GetModelAttrsHtml(context.Context, *ProductModelId) (*String, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetModelAttrsHtml not implemented")
}
func (*UnimplementedProductServiceServer) SaveModel(context.Context, *SProductModel) (*Result, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SaveModel not implemented")
}
func (*UnimplementedProductServiceServer) DeleteModel_(context.Context, *ProductModelId) (*Result, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteModel_ not implemented")
}
func (*UnimplementedProductServiceServer) GetBrand(context.Context, *Int64) (*SProductBrand, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBrand not implemented")
}
func (*UnimplementedProductServiceServer) SaveBrand(context.Context, *SProductBrand) (*Result, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SaveBrand not implemented")
}
func (*UnimplementedProductServiceServer) DeleteBrand(context.Context, *Int64) (*Result, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteBrand not implemented")
}
func (*UnimplementedProductServiceServer) GetBrands(context.Context, *Empty) (*ProductBrandListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBrands not implemented")
}
func (*UnimplementedProductServiceServer) GetCategories(context.Context, *Empty) (*ProductCategoriesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCategories not implemented")
}
func (*UnimplementedProductServiceServer) GetCategory(context.Context, *Int64) (*SProductCategory, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCategory not implemented")
}
func (*UnimplementedProductServiceServer) DeleteCategory(context.Context, *Int64) (*Result, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteCategory not implemented")
}
func (*UnimplementedProductServiceServer) SaveCategory(context.Context, *SProductCategory) (*Result, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SaveCategory not implemented")
}
func (*UnimplementedProductServiceServer) GetCategoryTreeNode(context.Context, *CategoryTreeRequest) (*STreeNode, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCategoryTreeNode not implemented")
}
func (*UnimplementedProductServiceServer) GetChildren(context.Context, *CategoryParentId) (*ProductCategoriesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetChildren not implemented")
}
func (*UnimplementedProductServiceServer) GetProduct(context.Context, *ProductId) (*SProduct, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetProduct not implemented")
}
func (*UnimplementedProductServiceServer) SaveProduct(context.Context, *SProduct) (*SaveProductResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SaveProduct not implemented")
}
func (*UnimplementedProductServiceServer) DeleteProduct(context.Context, *DeleteProductRequest) (*Result, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteProduct not implemented")
}
func (*UnimplementedProductServiceServer) SaveProductInfo(context.Context, *ProductInfoRequest) (*Result, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SaveProductInfo not implemented")
}

func RegisterProductServiceServer(s *grpc.Server, srv ProductServiceServer) {
	s.RegisterService(&_ProductService_serviceDesc, srv)
}

func _ProductService_GetModel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ProductModelId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProductServiceServer).GetModel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ProductService/GetModel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProductServiceServer).GetModel(ctx, req.(*ProductModelId))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProductService_GetModels_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProductServiceServer).GetModels(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ProductService/GetModels",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProductServiceServer).GetModels(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProductService_GetAttr_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ProductAttrId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProductServiceServer).GetAttr(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ProductService/GetAttr",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProductServiceServer).GetAttr(ctx, req.(*ProductAttrId))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProductService_GetAttrItem_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ProductAttrItemId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProductServiceServer).GetAttrItem(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ProductService/GetAttrItem",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProductServiceServer).GetAttrItem(ctx, req.(*ProductAttrItemId))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProductService_GetModelAttrsHtml_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ProductModelId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProductServiceServer).GetModelAttrsHtml(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ProductService/GetModelAttrsHtml",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProductServiceServer).GetModelAttrsHtml(ctx, req.(*ProductModelId))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProductService_SaveModel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SProductModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProductServiceServer).SaveModel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ProductService/SaveModel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProductServiceServer).SaveModel(ctx, req.(*SProductModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProductService_DeleteModel__Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ProductModelId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProductServiceServer).DeleteModel_(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ProductService/DeleteModel_",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProductServiceServer).DeleteModel_(ctx, req.(*ProductModelId))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProductService_GetBrand_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProductServiceServer).GetBrand(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ProductService/GetBrand",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProductServiceServer).GetBrand(ctx, req.(*Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProductService_SaveBrand_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SProductBrand)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProductServiceServer).SaveBrand(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ProductService/SaveBrand",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProductServiceServer).SaveBrand(ctx, req.(*SProductBrand))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProductService_DeleteBrand_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProductServiceServer).DeleteBrand(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ProductService/DeleteBrand",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProductServiceServer).DeleteBrand(ctx, req.(*Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProductService_GetBrands_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProductServiceServer).GetBrands(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ProductService/GetBrands",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProductServiceServer).GetBrands(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProductService_GetCategories_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProductServiceServer).GetCategories(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ProductService/GetCategories",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProductServiceServer).GetCategories(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProductService_GetCategory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProductServiceServer).GetCategory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ProductService/GetCategory",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProductServiceServer).GetCategory(ctx, req.(*Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProductService_DeleteCategory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProductServiceServer).DeleteCategory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ProductService/DeleteCategory",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProductServiceServer).DeleteCategory(ctx, req.(*Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProductService_SaveCategory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SProductCategory)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProductServiceServer).SaveCategory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ProductService/SaveCategory",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProductServiceServer).SaveCategory(ctx, req.(*SProductCategory))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProductService_GetCategoryTreeNode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CategoryTreeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProductServiceServer).GetCategoryTreeNode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ProductService/GetCategoryTreeNode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProductServiceServer).GetCategoryTreeNode(ctx, req.(*CategoryTreeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProductService_GetChildren_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CategoryParentId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProductServiceServer).GetChildren(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ProductService/GetChildren",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProductServiceServer).GetChildren(ctx, req.(*CategoryParentId))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProductService_GetProduct_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ProductId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProductServiceServer).GetProduct(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ProductService/GetProduct",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProductServiceServer).GetProduct(ctx, req.(*ProductId))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProductService_SaveProduct_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SProduct)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProductServiceServer).SaveProduct(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ProductService/SaveProduct",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProductServiceServer).SaveProduct(ctx, req.(*SProduct))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProductService_DeleteProduct_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteProductRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProductServiceServer).DeleteProduct(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ProductService/DeleteProduct",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProductServiceServer).DeleteProduct(ctx, req.(*DeleteProductRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProductService_SaveProductInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ProductInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProductServiceServer).SaveProductInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ProductService/SaveProductInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProductServiceServer).SaveProductInfo(ctx, req.(*ProductInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ProductService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ProductService",
	HandlerType: (*ProductServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetModel",
			Handler:    _ProductService_GetModel_Handler,
		},
		{
			MethodName: "GetModels",
			Handler:    _ProductService_GetModels_Handler,
		},
		{
			MethodName: "GetAttr",
			Handler:    _ProductService_GetAttr_Handler,
		},
		{
			MethodName: "GetAttrItem",
			Handler:    _ProductService_GetAttrItem_Handler,
		},
		{
			MethodName: "GetModelAttrsHtml",
			Handler:    _ProductService_GetModelAttrsHtml_Handler,
		},
		{
			MethodName: "SaveModel",
			Handler:    _ProductService_SaveModel_Handler,
		},
		{
			MethodName: "DeleteModel_",
			Handler:    _ProductService_DeleteModel__Handler,
		},
		{
			MethodName: "GetBrand",
			Handler:    _ProductService_GetBrand_Handler,
		},
		{
			MethodName: "SaveBrand",
			Handler:    _ProductService_SaveBrand_Handler,
		},
		{
			MethodName: "DeleteBrand",
			Handler:    _ProductService_DeleteBrand_Handler,
		},
		{
			MethodName: "GetBrands",
			Handler:    _ProductService_GetBrands_Handler,
		},
		{
			MethodName: "GetCategories",
			Handler:    _ProductService_GetCategories_Handler,
		},
		{
			MethodName: "GetCategory",
			Handler:    _ProductService_GetCategory_Handler,
		},
		{
			MethodName: "DeleteCategory",
			Handler:    _ProductService_DeleteCategory_Handler,
		},
		{
			MethodName: "SaveCategory",
			Handler:    _ProductService_SaveCategory_Handler,
		},
		{
			MethodName: "GetCategoryTreeNode",
			Handler:    _ProductService_GetCategoryTreeNode_Handler,
		},
		{
			MethodName: "GetChildren",
			Handler:    _ProductService_GetChildren_Handler,
		},
		{
			MethodName: "GetProduct",
			Handler:    _ProductService_GetProduct_Handler,
		},
		{
			MethodName: "SaveProduct",
			Handler:    _ProductService_SaveProduct_Handler,
		},
		{
			MethodName: "DeleteProduct",
			Handler:    _ProductService_DeleteProduct_Handler,
		},
		{
			MethodName: "SaveProductInfo",
			Handler:    _ProductService_SaveProductInfo_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "product_service.proto",
}
