/**
 * This file is auto generated by tto v0.4.5 !
 * If you want to modify this code, please read the guide
 * to modify code template.
 *
 * Get started: https://github.com/ixre/tto
 *
 * Copyright (C) 2021 <no value>, All rights reserved.
 *
 * name : comm_qr_template_dao_impl.go
 * author : jarrysix
 * date : 2021/12/02 10:37:45
 * description :
 * history :
 */
package impl

import (
	"encoding/json"
	"errors"
	"github.com/ixre/gof/db/orm"
	"github.com/ixre/gof/storage"
	"go2o/core/dao"
	"go2o/core/dao/model"
	"strings"
)

var _ dao.ICommQrTemplateDao = new(commQrTemplateDaoImpl)

type commQrTemplateDaoImpl struct {
	_orm    orm.Orm
	storage storage.Interface
}

var commQrTemplateDaoImplMapped = false

// Create new CommQrTemplateDao
func NewCommQrTemplateDao(o orm.Orm, sto storage.Interface) dao.ICommQrTemplateDao {
	if !commQrTemplateDaoImplMapped {
		_ = o.Mapping(model.QrTemplate{}, "comm_qr_template")
		commQrTemplateDaoImplMapped = true
	}
	return &commQrTemplateDaoImpl{
		_orm:    o,
		storage: sto,
	}
}

// GetQrTemplates 获取二维码所有模板
func (c commQrTemplateDaoImpl) GetQrTemplates() []*model.QrTemplate {
	var list []*model.QrTemplate
	str, err := c.storage.GetString(qrStoKey)
	if err == nil {
		err = json.Unmarshal([]byte(str), &list)
	}
	if err != nil {
		err = c._orm.Select(&list, "")
		if err == nil {
			d, _ := json.Marshal(list)
			c.storage.Set(qrStoKey, string(d))
		}
	}
	return list
}

// GetQrTemplate 获取二维码模板
func (c *commQrTemplateDaoImpl) GetQrTemplate(id int64) *model.QrTemplate {
	for _, v := range c.GetQrTemplates() {
		if v.Id == id {
			return v
		}
	}
	return nil
}

// 保存二维码模板
func (c *commQrTemplateDaoImpl) SaveQrTemplate(q *model.QrTemplate) (int64, error) {
	q.Title = strings.TrimSpace(q.Title)
	q.Comment = strings.TrimSpace(q.Comment)
	q.BgImage = strings.TrimSpace(q.BgImage)
	if q.Title == "" {
		return 0, errors.New("标题不能为空")
	}
	if q.BgImage == "" {
		return 0, errors.New("二维码背景图片为空")
	}
	id, err := orm.Save(c._orm, q, int(q.Id))
	if err == nil {
		c.storage.Delete(qrStoKey)
	}
	return int64(id), err
}

// 删除二维码模板
func (c *commQrTemplateDaoImpl) DeleteQrTemplate(id int64) error {
	err := c._orm.DeleteByPk(model.QrTemplate{}, id)
	if err == nil {
		c.storage.Delete(qrStoKey)
	}
	return err
}
