/**
 * This file is auto generated by tto v0.4.5 !
 * If you want to modify this code, please read the guide
 * to modify code template.
 *
 * Get started: https://github.com/ixre/tto
 *
 * Copyright (C) 2022 56X.NET, All rights reserved.
 *
 * name : sys_search_word_dao_impl.go
 * author : jarrysix
 * date : 2022/01/05 10:13:57
 * description :
 * history :
 */
package impl

import (
	"database/sql"
	"github.com/ixre/go2o/core/dao"
	"github.com/ixre/go2o/core/dao/model"
	"github.com/ixre/gof/db/orm"
	"log"
)

var _ dao.ISysSearchWordDao = new(sysSearchWordDaoImpl)

type sysSearchWordDaoImpl struct {
	_orm orm.Orm
}

var sysSearchWordDaoImplMapped = false

// NewSysSearchWordDao Create new SysSearchWordDao
func NewSysSearchWordDao(o orm.Orm) dao.ISysSearchWordDao {
	if !sysSearchWordDaoImplMapped {
		_ = o.Mapping(model.SearchWord{}, "sys_search_word")
		sysSearchWordDaoImplMapped = true
	}
	return &sysSearchWordDaoImpl{
		_orm: o,
	}
}

// GetSearchWord Get 热搜词
func (s *sysSearchWordDaoImpl) GetSearchWord(primary interface{}) *model.SearchWord {
	e := model.SearchWord{}
	err := s._orm.Get(primary, &e)
	if err == nil {
		return &e
	}
	if err != sql.ErrNoRows {
		log.Println("[ Orm][ Error]:", err.Error(), "; Entity:SearchWord")
	}
	return nil
}

// GetSearchWordBy GetBy 热搜词
func (s *sysSearchWordDaoImpl) GetSearchWordBy(where string, v ...interface{}) *model.SearchWord {
	e := model.SearchWord{}
	err := s._orm.GetBy(&e, where, v...)
	if err == nil {
		return &e
	}
	if err != sql.ErrNoRows {
		log.Println("[ Orm][ Error]:", err.Error(), "; Entity:SearchWord")
	}
	return nil
}

// Count 热搜词 by condition
func (s *sysSearchWordDaoImpl) CountSearchWord(where string, v ...interface{}) (int, error) {
	return s._orm.Count(model.SearchWord{}, where, v...)
}

// Select 热搜词
func (s *sysSearchWordDaoImpl) SelectSearchWord(where string, v ...interface{}) []*model.SearchWord {
	list := make([]*model.SearchWord, 0)
	err := s._orm.Select(&list, where, v...)
	if err != nil && err != sql.ErrNoRows {
		log.Println("[ Orm][ Error]:", err.Error(), "; Entity:SearchWord")
	}
	return list
}

// Save 热搜词
func (s *sysSearchWordDaoImpl) SaveSearchWord(v *model.SearchWord) (int, error) {
	id, err := orm.Save(s._orm, v, int(v.Id))
	if err != nil && err != sql.ErrNoRows {
		log.Println("[ Orm][ Error]:", err.Error(), "; Entity:SearchWord")
	}
	return id, err
}

// Delete 热搜词
func (s *sysSearchWordDaoImpl) DeleteSearchWord(primary interface{}) error {
	err := s._orm.DeleteByPk(model.SearchWord{}, primary)
	if err != nil && err != sql.ErrNoRows {
		log.Println("[ Orm][ Error]:", err.Error(), "; Entity:SearchWord")
	}
	return err
}

// Batch Delete 热搜词
func (s *sysSearchWordDaoImpl) BatchDeleteSearchWord(where string, v ...interface{}) (int64, error) {
	r, err := s._orm.Delete(model.SearchWord{}, where, v...)
	if err != nil && err != sql.ErrNoRows {
		log.Println("[ Orm][ Error]:", err.Error(), "; Entity:SearchWord")
	}
	return r, err
}
